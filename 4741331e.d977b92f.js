(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{134:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),c=(n(0),n(311)),i={title:"include/sleepy_discord/asio_udp.h"},o={unversionedId:"reference/Files/asio__udp_8h",id:"reference/Files/asio__udp_8h",isDocsHomePage:!1,title:"include/sleepy_discord/asio_udp.h",description:"Namespaces",source:"@site/docs\\reference\\Files\\asio__udp_8h.md",slug:"/reference/Files/asio__udp_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__udp_8h",editUrl:"https://github.com/yourWaifu/sleepy-discord-docs/edit/master/docs/reference/Files/asio__udp_8h.md",version:"current",sidebar:"someSidebar",previous:{title:"sleepy_discord/asio_udp.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__udp_8cpp"},next:{title:"sleepy_discord/attachment.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/attachment_8cpp"}},s=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Types",id:"types",children:[]},{value:"Types Documentation",id:"types-documentation",children:[{value:"typedef UDPClient",id:"typedef-udpclient",children:[]}]},{value:"Source code",id:"source-code",children:[]}],l={toc:s};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"namespaces"},"Namespaces"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(c.b)("h2",{id:"classes"},"Classes"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"class"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client"},"SleepyDiscord::ASIOUDPClient")))))),Object(c.b)("h2",{id:"types"},"Types"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"typedef ASIOUDPClient"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/asio__udp_8h#typedef-udpclient"},"UDPClient")))))),Object(c.b)("h2",{id:"types-documentation"},"Types Documentation"),Object(c.b)("h3",{id:"typedef-udpclient"},"typedef UDPClient"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"typedef CustomUDPClient SleepyDiscord::UDPClient;\n")),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#include "asio_include.h"\n#ifndef NONEXISTENT_ASIO\n#include "udp.h"\n\nnamespace SleepyDiscord {\n\n    class BaseDiscordClient;\n\n    class ASIOUDPClient : public GenericUDPClient {\n    public:\n        //ASIOUDPClient();\n        ASIOUDPClient(BaseDiscordClient& client);\n        ASIOUDPClient(asio::io_service& service);\n        bool connect(const std::string& to  , const uint16_t port) override;\n        void send(\n            const uint8_t* buffer,\n            size_t bufferLength,\n            SendHandler handler = []() {}\n        ) override;\n        void receive(ReceiveHandler handler) override;\n    private:\n        asio::io_service* iOService;\n        asio::ip::udp::socket uDPSocket;\n        asio::ip::udp::resolver resolver;\n        asio::ip::udp::endpoint endpoint;\n\n        void handle_receive(const std::error_code &, std::size_t bytes_transferred, ReceiveHandler handler);\n\n        constexpr static std::size_t bufferSize = 1 << 16;\n        uint8_t buffer[bufferSize];\n    };\n\n    typedef ASIOUDPClient UDPClient;\n};\n#endif\n')),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}d.isMDXComponent=!0},311:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,m=p["".concat(i,".").concat(u)]||p[u]||b[u]||c;return n?a.a.createElement(m,o(o({ref:t},l),{},{components:n})):a.a.createElement(m,o({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,i=new Array(c);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<c;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);