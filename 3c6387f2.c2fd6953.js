(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{126:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return a})),n.d(t,"default",(function(){return p}));var r=n(3),s=n(7),o=(n(0),n(319)),c={title:"SleepyDiscord::json::ClassTypeHelper< nonstd::string_view >"},i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4",id:"reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4",isDocsHomePage:!1,title:"SleepyDiscord::json::ClassTypeHelper< nonstd::string_view >",description:"Inherits from SleepyDiscord::EmptyFunction",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4.md",slug:"/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::json::ClassTypeHelper< int >",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01int_01_4"},next:{title:"SleepyDiscord::json::ClassTypeHelper< std::string >",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1string_01_4"}},a=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function toType",id:"function-totype",children:[]},{value:"function fromType",id:"function-fromtype",children:[]}]}],l={toc:a};function p(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Inherits from ",Object(o.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_empty_function"},"SleepyDiscord::json::EmptyFunction< nonstd::string_view >")),Object(o.b)("h2",{id:"inherited-members"},"inherited members"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(o.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_empty_function"},"SleepyDiscord::json::EmptyFunction< nonstd::string_view >"))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null}),Object(o.b)("th",{parentName:"tr",align:null},"Name"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"bool"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("strong",{parentName:"td"},Object(o.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_empty_function#function-empty"},"empty")),"(const Type & value)")))),Object(o.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(o.b)("h3",{id:"function-totype"},"function toType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline nonstd::string_view toType(\n    const Value & value\n)\n")),Object(o.b)("h3",{id:"function-fromtype"},"function fromType"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"static inline Value fromType(\n    const nonstd::string_view & value,\n    Value::AllocatorType & \n)\n")),Object(o.b)("hr",null),Object(o.b)("p",null,"Updated on  9 February 2021 at 07:04:57 Eastern Standard Time"))}p.isMDXComponent=!0},319:function(e,t,n){"use strict";n.d(t,"a",(function(){return _})),n.d(t,"b",(function(){return b}));var r=n(0),s=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=s.a.createContext({}),p=function(e){var t=s.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},_=function(e){var t=p(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},d=s.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),_=p(n),d=r,b=_["".concat(c,".").concat(d)]||_[d]||u[d]||o;return n?s.a.createElement(b,i(i({ref:t},l),{},{components:n})):s.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);