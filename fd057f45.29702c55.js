(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{306:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return p}));var s=t(3),r=t(7),c=(t(0),t(316)),i={title:"SleepyDiscord::CustomSession"},a={unversionedId:"reference/Classes/class_sleepy_discord_1_1_custom_session",id:"reference/Classes/class_sleepy_discord_1_1_custom_session",isDocsHomePage:!1,title:"SleepyDiscord::CustomSession",description:"Inherits from SleepyDiscord::GenericSession",source:"@site/docs\\reference\\Classes\\class_sleepy_discord_1_1_custom_session.md",slug:"/reference/Classes/class_sleepy_discord_1_1_custom_session",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_custom_session",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Cache::iterator",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_cache_1_1iterator"},next:{title:"SleepyDiscord::CustomUDPClient",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client"}},o=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function CustomSession",id:"function-customsession",children:[]},{value:"function setUrl",id:"function-seturl",children:[]},{value:"function setBody",id:"function-setbody",children:[]},{value:"function setHeader",id:"function-setheader",children:[]},{value:"function setMultipart",id:"function-setmultipart",children:[]},{value:"function setResponseCallback",id:"function-setresponsecallback",children:[]},{value:"function request",id:"function-request",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable init",id:"variable-init",children:[]}]}],l={toc:o};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(s.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Inherits from ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session"},"SleepyDiscord::GenericSession")),Object(c.b)("h2",{id:"inherited-members"},"inherited members"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Types inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session"},"SleepyDiscord::GenericSession"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"using std::function< void(",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"Response"),")>"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#using-responsecallback"},"ResponseCallback")))))),Object(c.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(c.b)("h3",{id:"function-customsession"},"function CustomSession"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline CustomSession()\n")),Object(c.b)("h3",{id:"function-seturl"},"function setUrl"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void setUrl(\n    const std::string & url\n)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#function-seturl"},"SleepyDiscord::GenericSession::setUrl")),Object(c.b)("h3",{id:"function-setbody"},"function setBody"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void setBody(\n    const std::string * jsonParamters\n)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#function-setbody"},"SleepyDiscord::GenericSession::setBody")),Object(c.b)("h3",{id:"function-setheader"},"function setHeader"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void setHeader(\n    const std::vector< HeaderPair > & header\n)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#function-setheader"},"SleepyDiscord::GenericSession::setHeader")),Object(c.b)("h3",{id:"function-setmultipart"},"function setMultipart"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void setMultipart(\n    const std::vector< Part > & parts\n)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#function-setmultipart"},"SleepyDiscord::GenericSession::setMultipart")),Object(c.b)("h3",{id:"function-setresponsecallback"},"function setResponseCallback"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void setResponseCallback(\n    const ResponseCallback & callback\n)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#function-setresponsecallback"},"SleepyDiscord::GenericSession::setResponseCallback")),Object(c.b)("h3",{id:"function-request"},"function request"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual Response request(\n    RequestMethod method\n)\n")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_session#function-request"},"SleepyDiscord::GenericSession::request")),Object(c.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(c.b)("h3",{id:"variable-init"},"variable init"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"static CustomInitSession init;\n")),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:55 Eastern Standard Time"))}p.isMDXComponent=!0},316:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var s=t(0),r=t.n(s);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},c=Object.keys(e);for(s=0;s<c.length;s++)t=c[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(s=0;s<c.length;s++)t=c[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,c=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=s,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||c;return t?r.a.createElement(m,a(a({ref:n},l),{},{components:t})):r.a.createElement(m,a({ref:n},l))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var c=t.length,i=new Array(c);i[0]=d;var a={};for(var o in n)hasOwnProperty.call(n,o)&&(a[o]=n[o]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var l=2;l<c;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);