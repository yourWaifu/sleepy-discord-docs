(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{249:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),c=r(7),a=(r(0),r(311)),i={title:"SleepyDiscord::PresenceUpdate"},s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_presence_update",id:"reference/Classes/struct_sleepy_discord_1_1_presence_update",isDocsHomePage:!1,title:"SleepyDiscord::PresenceUpdate",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1_presence_update.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_presence_update",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_presence_update",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Part",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_part"},next:{title:"SleepyDiscord::RateLimiter",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_rate_limiter"}},l=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function PresenceUpdate",id:"function-presenceupdate",children:[]},{value:"function ~PresenceUpdate",id:"function-presenceupdate-1",children:[]},{value:"function PresenceUpdate",id:"function-presenceupdate-2",children:[]},{value:"function PresenceUpdate",id:"function-presenceupdate-3",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable user",id:"variable-user",children:[]},{value:"variable roleIDs",id:"variable-roleids",children:[]},{value:"variable currentActivity",id:"variable-currentactivity",children:[]},{value:"variable serverID",id:"variable-serverid",children:[]},{value:"variable status",id:"variable-status",children:[]},{value:"variable activities",id:"variable-activities",children:[]}]}],o={toc:l};function p(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},o,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Inherits from ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(a.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(a.b)("h3",{id:"function-presenceupdate"},"function PresenceUpdate"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"PresenceUpdate() =default\n")),Object(a.b)("h3",{id:"function-presenceupdate-1"},"function ~PresenceUpdate"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"~PresenceUpdate() =default\n")),Object(a.b)("h3",{id:"function-presenceupdate-2"},"function PresenceUpdate"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"PresenceUpdate(\n    const json::Value & json\n)\n")),Object(a.b)("h3",{id:"function-presenceupdate-3"},"function PresenceUpdate"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"PresenceUpdate(\n    const nonstd::string_view & json\n)\n")),Object(a.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::REQUIRIED_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::REQUIRIED_FIELD \n)\n')),Object(a.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(a.b)("h3",{id:"variable-user"},"variable user"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"User user;\n")),Object(a.b)("h3",{id:"variable-roleids"},"variable roleIDs"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Snowflake< Role > > roleIDs;\n")),Object(a.b)("h3",{id:"variable-currentactivity"},"variable currentActivity"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"Activity currentActivity;\n")),Object(a.b)("h3",{id:"variable-serverid"},"variable serverID"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Server > serverID;\n")),Object(a.b)("h3",{id:"variable-status"},"variable status"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"std::string status;\n")),Object(a.b)("h3",{id:"variable-activities"},"variable activities"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Activity > activities;\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on  9 February 2021 at 07:04:56 Eastern Standard Time"))}p.isMDXComponent=!0},311:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),c=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var o=c.a.createContext({}),p=function(e){var t=c.a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return c.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},b=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),u=p(r),b=n,f=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return r?c.a.createElement(f,s(s({ref:t},o),{},{components:r})):c.a.createElement(f,s({ref:t},o))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var o=2;o<a;o++)i[o]=r[o];return c.a.createElement.apply(null,i)}return c.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);