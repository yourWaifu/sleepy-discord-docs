(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{157:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return o})),r.d(n,"metadata",(function(){return a})),r.d(n,"toc",(function(){return c})),r.d(n,"default",(function(){return m}));var t=r(3),s=r(7),i=(r(0),r(317)),o={title:"sleepy_discord/permissions.cpp"},a={unversionedId:"reference/Files/permissions_8cpp",id:"reference/Files/permissions_8cpp",isDocsHomePage:!1,title:"sleepy_discord/permissions.cpp",description:"Namespaces",source:"@site/docs\\reference\\Files\\permissions_8cpp.md",slug:"/reference/Files/permissions_8cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/permissions_8cpp",version:"current",sidebar:"Reference",previous:{title:"include/sleepy_discord/message_receiver.h",permalink:"/sleepy-discord-docs/docs/reference/Files/message__receiver_8h"},next:{title:"include/sleepy_discord/permissions.h",permalink:"/sleepy-discord-docs/docs/reference/Files/permissions_8h"}},c=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"function getBasePermissions",id:"function-getbasepermissions",children:[]},{value:"function handleOverwrite",id:"function-handleoverwrite",children:[]},{value:"function handleOverwrite",id:"function-handleoverwrite-1",children:[]},{value:"function overwritePermissions",id:"function-overwritepermissions",children:[]},{value:"function getPermissions",id:"function-getpermissions",children:[]}]},{value:"Source code",id:"source-code",children:[]}],l={toc:c};function m(e){var n=e.components,r=Object(s.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"namespaces"},"Namespaces"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(i.b)("h2",{id:"functions"},"Functions"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Permission"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/permissions_8cpp#function-getbasepermissions"},"getBasePermissions")),"(const Server & server, const ServerMember & member)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"void"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/permissions_8cpp#function-handleoverwrite"},"handleOverwrite")),"(Permission & target, const Permission & allow, const Permission & deny)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"void"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/permissions_8cpp#function-handleoverwrite"},"handleOverwrite")),"(Permission & target, const Overwrite & overwrite)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Permission"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/permissions_8cpp#function-overwritepermissions"},"overwritePermissions")),"(const Permission basePermissions, const Server & server, const ServerMember & member, const Channel & channel)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Permission"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/permissions_8cpp#function-getpermissions"},"getPermissions")),"(const Server & server, const ServerMember & member, const Channel & channel)")))),Object(i.b)("h2",{id:"functions-documentation"},"Functions Documentation"),Object(i.b)("h3",{id:"function-getbasepermissions"},"function getBasePermissions"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Permission getBasePermissions(\n    const Server & server,\n    const ServerMember & member\n)\n")),Object(i.b)("h3",{id:"function-handleoverwrite"},"function handleOverwrite"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"void handleOverwrite(\n    Permission & target,\n    const Permission & allow,\n    const Permission & deny\n)\n")),Object(i.b)("h3",{id:"function-handleoverwrite-1"},"function handleOverwrite"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"void handleOverwrite(\n    Permission & target,\n    const Overwrite & overwrite\n)\n")),Object(i.b)("h3",{id:"function-overwritepermissions"},"function overwritePermissions"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Permission overwritePermissions(\n    const Permission basePermissions,\n    const Server & server,\n    const ServerMember & member,\n    const Channel & channel\n)\n")),Object(i.b)("h3",{id:"function-getpermissions"},"function getPermissions"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Permission getPermissions(\n    const Server & server,\n    const ServerMember & member,\n    const Channel & channel\n)\n")),Object(i.b)("h2",{id:"source-code"},"Source code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'#include "permissions.h"\n#include "server.h"\n#include "channel.h"\n\nnamespace SleepyDiscord {\n    Permission getBasePermissions(const Server& server, const ServerMember& member) {\n        if (server.ownerID == member.user.ID)\n            return Permission::ALL;\n\n        auto everyoneRole = static_cast<Snowflake<Role>>(server.ID).findObject(server.roles);\n\n        if (everyoneRole == server.roles.end())\n            return Permission::NONE;\n\n        Permission permissions = everyoneRole->permissions;\n\n        for (Snowflake<Role> roleID : member.roles) {\n            auto rolePermissions = roleID.findObject(server.roles);\n            if (rolePermissions != server.roles.end())\n                permissions = permissions | rolePermissions->permissions;\n        }\n\n        if (hasPremission(permissions, Permission::ADMINISTRATOR))\n            return Permission::ALL;\n        return permissions;\n    }\n\n    void handleOverwrite(Permission& target, const Permission& allow, const Permission& deny) {\n        target = (target & static_cast<Permission>(~deny)) | allow;\n    }\n\n    void handleOverwrite(Permission& target, const Overwrite& overwrite) {\n        handleOverwrite(target, overwrite.allow, overwrite.deny);\n    }\n\n    Permission overwritePermissions(const Permission basePermissions, const Server& server, const ServerMember& member, const Channel& channel) {\n        if (hasPremission(basePermissions, Permission::ADMINISTRATOR))\n            return Permission::ALL;\n\n        Permission permissions = basePermissions;\n        const std::vector<Overwrite>& overwrites = channel.permissionOverwrites;\n\n        auto everyoneOverwrites = static_cast<Snowflake<Overwrite>>(server.ID).findObject(overwrites);\n        if (everyoneOverwrites != overwrites.end())\n            handleOverwrite(permissions, *everyoneOverwrites);\n\n        //role overwrites\n        Permission allow = NONE;\n        Permission deny = NONE;\n        for (Snowflake<Role> roleID : member.roles) {\n            auto roleOverwrite = static_cast<Snowflake<Overwrite>>(roleID).findObject(overwrites);\n            if (roleOverwrite != overwrites.end()) {\n                allow = allow | roleOverwrite->allow;\n                deny = deny | roleOverwrite->deny;\n            }\n        }\n\n        handleOverwrite(permissions, allow, deny);\n\n        //member overwrites\n        auto memberOverwrites = static_cast<Snowflake<Overwrite>>(member.user.ID).findObject(overwrites);\n        if (memberOverwrites != overwrites.end())\n            handleOverwrite(permissions, *memberOverwrites);\n\n        return permissions;\n    }\n\n    Permission getPermissions(const Server& server, const ServerMember& member, const Channel& channel) {\n        return overwritePermissions(getBasePermissions(server, member), server, member, channel);\n    }\n\n    Role::Role(const json::Value & json) :\n        Role(json::fromJSON<Role>(json)) {\n    }\n    Role::Role(const nonstd::string_view & json) :\n        Role(json::fromJSON<Role>(json)) {\n    }\n}\n')),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  9 February 2021 at 07:04:59 Eastern Standard Time"))}m.isMDXComponent=!0},317:function(e,n,r){"use strict";r.d(n,"a",(function(){return b})),r.d(n,"b",(function(){return u}));var t=r(0),s=r.n(t);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=s.a.createContext({}),m=function(e){var n=s.a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},b=function(e){var n=m(e.components);return s.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},d=s.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=m(r),d=t,u=b["".concat(o,".").concat(d)]||b[d]||p[d]||i;return r?s.a.createElement(u,a(a({ref:n},l),{},{components:r})):s.a.createElement(u,a({ref:n},l))}));function u(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,o=new Array(i);o[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:t,o[1]=a;for(var l=2;l<i;l++)o[l]=r[l];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);