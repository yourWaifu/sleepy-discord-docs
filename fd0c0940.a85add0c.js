(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{304:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return l})),r.d(n,"metadata",(function(){return i})),r.d(n,"toc",(function(){return s})),r.d(n,"default",(function(){return d}));var t=r(3),a=r(7),c=(r(0),r(311)),l={title:"include/sleepy_discord/asio_schedule.h"},i={unversionedId:"reference/Files/asio__schedule_8h",id:"reference/Files/asio__schedule_8h",isDocsHomePage:!1,title:"include/sleepy_discord/asio_schedule.h",description:"Namespaces",source:"@site/docs\\reference\\Files\\asio__schedule_8h.md",slug:"/reference/Files/asio__schedule_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__schedule_8h",version:"current",sidebar:"Reference",previous:{title:"include/sleepy_discord/asio_include.h",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__include_8h"},next:{title:"sleepy_discord/asio_udp.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__udp_8cpp"}},s=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Source code",id:"source-code",children:[]}],o={toc:s};function d(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(t.a)({},o,r,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"namespaces"},"Namespaces"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(c.b)("h2",{id:"classes"},"Classes"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"class"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler"},"SleepyDiscord::GenericScheduleHandler")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"class"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},"SleepyDiscord::ASIOBasedScheduleHandler")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"class"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler"},"SleepyDiscord::ASIOScheduleHandler")))))),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#include "asio_include.h"\n#include "timer.h"\n\nnamespace SleepyDiscord {\n    class GenericScheduleHandler {\n    public:\n        virtual ~GenericScheduleHandler() = default;\n        virtual Timer schedule(TimedTask code, const time_t milliseconds) = 0;\n    };\n\n#ifndef NONEXISTENT_ASIO \n\n    class ASIOBasedScheduleHandler : public GenericScheduleHandler {\n    public:\n        virtual ~ASIOBasedScheduleHandler() = default;\n        virtual asio::io_service& getIOService() = 0;\n    };\n\n    class ASIOScheduleHandler : public ASIOBasedScheduleHandler {\n    public:\n        ASIOScheduleHandler() {}\n        virtual ~ASIOScheduleHandler() = default;\n\n        inline asio::io_service& getIOService() override {\n            return io;\n        }\n\n        static void handleTimer(const asio::error_code &ec, std::function<void()>& code) {\n            if (ec != asio::error::operation_aborted) {\n                code();\n            }\n        }\n\n        inline Timer schedule(TimedTask code, const time_t milliseconds) override {\n            auto timer = std::make_shared<asio::steady_timer>(io, asio::chrono::milliseconds(milliseconds));\n            timer->async_wait(std::bind(&handleTimer, std::placeholders::_1, code));\n            return Timer([timer]() {\n                timer->cancel();\n            });\n        }\n\n        inline void run() {\n            io.run();\n        }\n\n    private:\n        asio::io_service io;\n    };\n#endif\n}\n')),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}d.isMDXComponent=!0},311:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return m}));var t=r(0),a=r.n(t);function c(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){c(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=a.a.createContext({}),d=function(e){var n=a.a.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=d(e.components);return a.a.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,c=e.originalType,l=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),u=d(r),b=t,m=u["".concat(l,".").concat(b)]||u[b]||p[b]||c;return r?a.a.createElement(m,i(i({ref:n},o),{},{components:r})):a.a.createElement(m,i({ref:n},o))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var c=r.length,l=new Array(c);l[0]=b;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:t,l[1]=i;for(var o=2;o<c;o++)l[o]=r[o];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);