(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{311:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),p=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),b=p(n),u=r,m=b["".concat(c,".").concat(u)]||b[u]||d[u]||s;return n?a.a.createElement(m,o(o({ref:t},i),{},{components:n})):a.a.createElement(m,o({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,c=new Array(s);c[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var i=2;i<s;i++)c[i]=n[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),s=(n(0),n(311)),c={title:"SleepyDiscord::BooleanResponse"},o={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_boolean_response",id:"reference/Classes/struct_sleepy_discord_1_1_boolean_response",isDocsHomePage:!1,title:"SleepyDiscord::BooleanResponse",description:"Inherits from SleepyDiscord::Response",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1_boolean_response.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_boolean_response",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_boolean_response",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::BasicAudioSourceForContainers",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_basic_audio_source_for_containers"},next:{title:"SleepyDiscord::Cache",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_cache"}},l=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Callback",id:"using-callback",children:[]},{value:"using Type",id:"using-type",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function BooleanResponse",id:"function-booleanresponse",children:[]},{value:"function operator Type",id:"function-operator-type",children:[]},{value:"function operator*",id:"function-operator",children:[]},{value:"function cast",id:"function-cast",children:[]},{value:"function StandardResponse",id:"function-standardresponse",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable wasSuccessful",id:"variable-wassuccessful",children:[]}]}],i={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Inherits from ",Object(s.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_standard_response"},"SleepyDiscord::StandardResponse"),", ",Object(s.b)("a",{parentName:"p",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"SleepyDiscord::Response")),Object(s.b)("h2",{id:"inherited-members"},"inherited members"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"SleepyDiscord::Response"))),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null}),Object(s.b)("th",{parentName:"tr",align:null},"Name"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"bool"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#function-error"},"error")),"() const")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null}),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#function-response"},"Response")),"() =default")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null}),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#function-response"},"Response")),"(int32_t _statusCode)")))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Public Attributes inherited from ",Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"SleepyDiscord::Response"))),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null}),Object(s.b)("th",{parentName:"tr",align:null},"Name"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"std::string"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-text"},"text")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"int32_t"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-statuscode"},"statusCode")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"std::map< std::string, std::string, ",Object(s.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare"},"caseInsensitiveCompare")," >"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-header"},"header")))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"time_t"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("strong",{parentName:"td"},Object(s.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-birth"},"birth")))))),Object(s.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(s.b)("h3",{id:"using-callback"},"using Callback"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::BooleanResponse::Callback =  std::function<bool(const Response& response)>;\n")),Object(s.b)("h3",{id:"using-type"},"using Type"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::BooleanResponse::Type =  bool;\n")),Object(s.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(s.b)("h3",{id:"function-booleanresponse"},"function BooleanResponse"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"inline BooleanResponse(\n    const Response & response,\n    const Callback callback\n)\n")),Object(s.b)("h3",{id:"function-operator-type"},"function operator Type"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"inline operator Type() const\n")),Object(s.b)("h3",{id:"function-operator"},"function operator*"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"inline Type operator*() const\n")),Object(s.b)("h3",{id:"function-cast"},"function cast"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"inline Type cast()\n")),Object(s.b)("h3",{id:"function-standardresponse"},"function StandardResponse"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"inline explicit StandardResponse(\n    const Response & response\n)\n")),Object(s.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(s.b)("h3",{id:"variable-wassuccessful"},"variable wasSuccessful"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-cpp"},"const Callback wasSuccessful = [](const [Response](/docs/reference/Classes/struct_sleepy_discord_1_1_response)& ) { return true; };\n")),Object(s.b)("hr",null),Object(s.b)("p",null,"Updated on  9 February 2021 at 07:04:55 Eastern Standard Time"))}p.isMDXComponent=!0}}]);