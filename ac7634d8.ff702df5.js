(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{233:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return d}));var r=t(3),c=t(7),i=(t(0),t(319)),a={title:"SleepyDiscord::ASIOUDPClient"},s={unversionedId:"reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client",id:"reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client",isDocsHomePage:!1,title:"SleepyDiscord::ASIOUDPClient",description:"Inherits from SleepyDiscord::GenericUDPClient",source:"@site/docs\\reference\\Classes\\class_sleepy_discord_1_1_a_s_i_o_u_d_p_client.md",slug:"/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::ASIOScheduleHandler",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler"},next:{title:"SleepyDiscord::BaseDiscordClient",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client"}},l=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ASIOUDPClient",id:"function-asioudpclient",children:[]},{value:"function ASIOUDPClient",id:"function-asioudpclient-1",children:[]},{value:"function connect",id:"function-connect",children:[]},{value:"function send",id:"function-send",children:[]},{value:"function receive",id:"function-receive",children:[]}]}],o={toc:l};function d(e){var n=e.components,t=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Inherits from ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client"},"SleepyDiscord::GenericUDPClient")),Object(i.b)("h2",{id:"inherited-members"},"inherited members"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Public Types inherited from ",Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client"},"SleepyDiscord::GenericUDPClient"))),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"typedef std::function< void()>"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#typedef-sendhandler"},"SendHandler")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"typedef std::function< void(const std::vector< uint8_t > &)>"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#typedef-receivehandler"},"ReceiveHandler")))))),Object(i.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(i.b)("h3",{id:"function-asioudpclient"},"function ASIOUDPClient"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"ASIOUDPClient(\n    BaseDiscordClient & client\n)\n")),Object(i.b)("h3",{id:"function-asioudpclient-1"},"function ASIOUDPClient"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"ASIOUDPClient(\n    asio::io_service & service\n)\n")),Object(i.b)("h3",{id:"function-connect"},"function connect"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"virtual bool connect(\n    const std::string & to,\n    const uint16_t port\n) override\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#function-connect"},"SleepyDiscord::GenericUDPClient::connect")),Object(i.b)("h3",{id:"function-send"},"function send"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"virtual void send(\n    const uint8_t * buffer,\n    size_t bufferLength,\n    SendHandler handler =[]() {}\n) override\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#function-send"},"SleepyDiscord::GenericUDPClient::send")),Object(i.b)("h3",{id:"function-receive"},"function receive"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"virtual void receive(\n    ReceiveHandler handler\n) override\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#function-receive"},"SleepyDiscord::GenericUDPClient::receive")),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  9 February 2021 at 07:04:54 Eastern Standard Time"))}d.isMDXComponent=!0},319:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return _}));var r=t(0),c=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var o=c.a.createContext({}),d=function(e){var n=c.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=d(e.components);return c.a.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},b=c.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),p=d(t),b=r,_=p["".concat(a,".").concat(b)]||p[b]||u[b]||i;return t?c.a.createElement(_,s(s({ref:n},o),{},{components:t})):c.a.createElement(_,s({ref:n},o))}));function _(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=b;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var o=2;o<i;o++)a[o]=t[o];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);