(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{312:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,O=u["".concat(c,".").concat(d)]||u[d]||o[d]||i;return a?r.a.createElement(O,l(l({ref:t},p),{},{components:a})):r.a.createElement(O,l({ref:t},p))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=d;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var p=2;p<i;p++)c[p]=a[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},86:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),i=(a(0),a(312)),c={title:"SleepyDiscord::Activity"},l={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_activity",id:"reference/Classes/struct_sleepy_discord_1_1_activity",isDocsHomePage:!1,title:"SleepyDiscord::Activity",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1_activity.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_activity",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_activity",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::json::StdArrayTypeHelper",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_std_array_type_helper"},next:{title:"SleepyDiscord::ActivityAssets",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_activity_assets"}},b=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum ActivityType",id:"enum-activitytype",children:[]},{value:"enum ActivityFlags",id:"enum-activityflags",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Activity",id:"function-activity",children:[]},{value:"function ~Activity",id:"function-activity-1",children:[]},{value:"function Activity",id:"function-activity-2",children:[]},{value:"function Activity",id:"function-activity-3",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable name",id:"variable-name",children:[]},{value:"variable type",id:"variable-type",children:[]},{value:"variable url",id:"variable-url",children:[]},{value:"variable timestamps",id:"variable-timestamps",children:[]},{value:"variable applicationID",id:"variable-applicationid",children:[]},{value:"variable details",id:"variable-details",children:[]},{value:"variable state",id:"variable-state",children:[]},{value:"variable assets",id:"variable-assets",children:[]},{value:"variable secrets",id:"variable-secrets",children:[]},{value:"variable instance",id:"variable-instance",children:[]},{value:"variable flags",id:"variable-flags",children:[]}]}],p={toc:b};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Inherits from ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(i.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(i.b)("h3",{id:"enum-activitytype"},"enum ActivityType"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Enumerator"),Object(i.b)("th",{parentName:"tr",align:null},"Value"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"ACTIVITY_TYPE_NONE"),Object(i.b)("td",{parentName:"tr",align:null},"-1"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"GAME"),Object(i.b)("td",{parentName:"tr",align:null},"0"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"STREAMING"),Object(i.b)("td",{parentName:"tr",align:null},"1"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"LISTENING"),Object(i.b)("td",{parentName:"tr",align:null},"2"),Object(i.b)("td",{parentName:"tr",align:null})))),Object(i.b)("h3",{id:"enum-activityflags"},"enum ActivityFlags"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Enumerator"),Object(i.b)("th",{parentName:"tr",align:null},"Value"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"NONE"),Object(i.b)("td",{parentName:"tr",align:null},"0 << 0"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"INSTANCE"),Object(i.b)("td",{parentName:"tr",align:null},"1 << 0"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"JOIN"),Object(i.b)("td",{parentName:"tr",align:null},"1 << 1"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"SPECTATE"),Object(i.b)("td",{parentName:"tr",align:null},"1 << 2"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"JOIN_REQUEST"),Object(i.b)("td",{parentName:"tr",align:null},"1 << 3"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"SYNC"),Object(i.b)("td",{parentName:"tr",align:null},"1 << 4"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"PLAY"),Object(i.b)("td",{parentName:"tr",align:null},"1 << 5"),Object(i.b)("td",{parentName:"tr",align:null})))),Object(i.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(i.b)("h3",{id:"function-activity"},"function Activity"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Activity() =default\n")),Object(i.b)("h3",{id:"function-activity-1"},"function ~Activity"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"~Activity() =default\n")),Object(i.b)("h3",{id:"function-activity-2"},"function Activity"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Activity(\n    const json::Value & json\n)\n")),Object(i.b)("h3",{id:"function-activity-3"},"function Activity"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Activity(\n    const nonstd::string_view & json\n)\n")),Object(i.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD REQUIRIED_FIELD,\n    json::pair< json::EnumTypeHelper > &::, "", ::REQUIRIED_FIELD REQUIRIED_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD\n)\n')),Object(i.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(i.b)("h3",{id:"variable-name"},"variable name"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),Object(i.b)("h3",{id:"variable-type"},"variable type"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::Activity::ActivityType type = ACTIVITY_TYPE_NONE;\n")),Object(i.b)("h3",{id:"variable-url"},"variable url"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string url;\n")),Object(i.b)("h3",{id:"variable-timestamps"},"variable timestamps"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"ActivityTimestamp timestamps;\n")),Object(i.b)("h3",{id:"variable-applicationid"},"variable applicationID"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Application > applicationID;\n")),Object(i.b)("h3",{id:"variable-details"},"variable details"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string details;\n")),Object(i.b)("h3",{id:"variable-state"},"variable state"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string state;\n")),Object(i.b)("h3",{id:"variable-assets"},"variable assets"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"ActivityAssets assets;\n")),Object(i.b)("h3",{id:"variable-secrets"},"variable secrets"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"ActivitySecrets secrets;\n")),Object(i.b)("h3",{id:"variable-instance"},"variable instance"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"bool instance;\n")),Object(i.b)("h3",{id:"variable-flags"},"variable flags"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::Activity::ActivityFlags flags = NONE;\n")),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  9 February 2021 at 07:04:56 Eastern Standard Time"))}s.isMDXComponent=!0}}]);