"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[1302],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return y}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),a=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=a(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},_=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),_=a(t),y=o,d=_["".concat(i,".").concat(y)]||_[y]||u[y]||l;return t?r.createElement(d,c(c({ref:n},p),{},{components:t})):r.createElement(d,c({ref:n},p))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,c=new Array(l);c[0]=_;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var a=2;a<l;a++)c[a]=t[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},6269:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return a},toc:function(){return p},default:function(){return _}});var r=t(3117),o=t(102),l=(t(7294),t(3905)),c=["components"],s={title:"SleepyDiscord::json::ClassTypeHelper< Value >"},i=void 0,a={unversionedId:"reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01_value_01_4",id:"reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01_value_01_4",title:"SleepyDiscord::json::ClassTypeHelper< Value >",description:"Public Functions Documentation",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01_value_01_4.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01_value_01_4",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01_value_01_4",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::json::ClassTypeHelper< Value >"},sidebar:"Reference",previous:{title:"SleepyDiscord::json::ClassTypeHelper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper"},next:{title:"SleepyDiscord::json::ClassTypeHelper< bool >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01bool_01_4"}},p=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function toType",id:"function-totype",children:[],level:3},{value:"function toType",id:"function-totype-1",children:[],level:3},{value:"function empty",id:"function-empty",children:[],level:3},{value:"function fromType",id:"function-fromtype",children:[],level:3},{value:"function isType",id:"function-istype",children:[],level:3}],level:2}],u={toc:p};function _(e){var n=e.components,t=(0,o.Z)(e,c);return(0,l.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,l.kt)("h3",{id:"function-totype"},"function toType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline rapidjson::Type toType(\n    const Value & value\n)\n")),(0,l.kt)("h3",{id:"function-totype-1"},"function toType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline Value & toType(\n    Value & value\n)\n")),(0,l.kt)("h3",{id:"function-empty"},"function empty"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline bool empty(\n    const Value & value\n)\n")),(0,l.kt)("h3",{id:"function-fromtype"},"function fromType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline Value fromType(\n    const Value & value,\n    Value::AllocatorType & alloc\n)\n")),(0,l.kt)("h3",{id:"function-istype"},"function isType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline bool isType(\n    const Value & \n)\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}_.isMDXComponent=!0}}]);