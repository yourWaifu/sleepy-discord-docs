"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[1552],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,v=d["".concat(p,".").concat(m)]||d[m]||o[m]||l;return a?n.createElement(v,i(i({ref:t},u),{},{components:a})):n.createElement(v,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9862:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=a(3117),r=a(102),l=(a(7294),a(3905)),i=["components"],c={title:"SleepyDiscord::Activity"},p=void 0,s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_activity",id:"reference/Classes/struct_sleepy_discord_1_1_activity",title:"SleepyDiscord::Activity",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_activity.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_activity",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::Activity"},sidebar:"Reference",previous:{title:"SleepyDiscord::ActionRow",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_action_row"},next:{title:"SleepyDiscord::ActivityAssets",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity_assets"}},u=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum ActivityType",id:"enum-activitytype",children:[],level:3},{value:"enum ActivityFlags",id:"enum-activityflags",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Activity",id:"function-activity",children:[],level:3},{value:"function ~Activity",id:"function-activity-1",children:[],level:3},{value:"function Activity",id:"function-activity-2",children:[],level:3},{value:"function Activity",id:"function-activity-3",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable name",id:"variable-name",children:[],level:3},{value:"variable type",id:"variable-type",children:[],level:3},{value:"variable url",id:"variable-url",children:[],level:3},{value:"variable timestamps",id:"variable-timestamps",children:[],level:3},{value:"variable applicationID",id:"variable-applicationid",children:[],level:3},{value:"variable details",id:"variable-details",children:[],level:3},{value:"variable state",id:"variable-state",children:[],level:3},{value:"variable assets",id:"variable-assets",children:[],level:3},{value:"variable secrets",id:"variable-secrets",children:[],level:3},{value:"variable instance",id:"variable-instance",children:[],level:3},{value:"variable flags",id:"variable-flags",children:[],level:3}],level:2}],o={toc:u};function d(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Inherits from ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,l.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,l.kt)("h3",{id:"enum-activitytype"},"enum ActivityType"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ACTIVITY_TYPE_NONE"),(0,l.kt)("td",{parentName:"tr",align:null},"-1"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GAME"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"STREAMING"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"LISTENING"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"enum-activityflags"},"enum ActivityFlags"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"NONE"),(0,l.kt)("td",{parentName:"tr",align:null},"0 << 0"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"INSTANCE"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 0"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JOIN"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 1"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SPECTATE"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 2"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JOIN_REQUEST"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 3"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SYNC"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 4"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PLAY"),(0,l.kt)("td",{parentName:"tr",align:null},"1 << 5"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,l.kt)("h3",{id:"function-activity"},"function Activity"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Activity() =default\n")),(0,l.kt)("h3",{id:"function-activity-1"},"function ~Activity"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"~Activity() =default\n")),(0,l.kt)("h3",{id:"function-activity-2"},"function Activity"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Activity(\n    const json::Value & json\n)\n")),(0,l.kt)("h3",{id:"function-activity-3"},"function Activity"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Activity(\n    const nonstd::string_view & json\n)\n")),(0,l.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD REQUIRIED_FIELD,\n    json::pair< json::EnumTypeHelper > &::, "", ::REQUIRIED_FIELD REQUIRIED_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD\n)\n')),(0,l.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,l.kt)("h3",{id:"variable-name"},"variable name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),(0,l.kt)("h3",{id:"variable-type"},"variable type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::Activity::ActivityType type = ACTIVITY_TYPE_NONE;\n")),(0,l.kt)("h3",{id:"variable-url"},"variable url"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string url;\n")),(0,l.kt)("h3",{id:"variable-timestamps"},"variable timestamps"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"ActivityTimestamp timestamps;\n")),(0,l.kt)("h3",{id:"variable-applicationid"},"variable applicationID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Application > applicationID;\n")),(0,l.kt)("h3",{id:"variable-details"},"variable details"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string details;\n")),(0,l.kt)("h3",{id:"variable-state"},"variable state"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string state;\n")),(0,l.kt)("h3",{id:"variable-assets"},"variable assets"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"ActivityAssets assets;\n")),(0,l.kt)("h3",{id:"variable-secrets"},"variable secrets"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"ActivitySecrets secrets;\n")),(0,l.kt)("h3",{id:"variable-instance"},"variable instance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool instance;\n")),(0,l.kt)("h3",{id:"variable-flags"},"variable flags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::Activity::ActivityFlags flags = NONE;\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);