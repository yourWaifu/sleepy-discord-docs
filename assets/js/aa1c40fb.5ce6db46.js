"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[2386],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var c=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,c,r=function(e,n){if(null==e)return{};var t,c,r={},o=Object.keys(e);for(c=0;c<o.length;c++)t=o[c],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(c=0;c<o.length;c++)t=o[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=c.createContext({}),p=function(e){var n=c.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return c.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return c.createElement(c.Fragment,{},n)}},d=c.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=r,m=d["".concat(a,".").concat(f)]||d[f]||u[f]||o;return t?c.createElement(m,i(i({ref:n},s),{},{components:t})):c.createElement(m,i({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return c.createElement.apply(null,i)}return c.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8170:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var c=t(3117),r=t(102),o=(t(7294),t(3905)),i=["components"],l={title:"SleepyDiscord::AppCommand::Option::Choice"},a=void 0,p={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option_1_1_choice",id:"reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option_1_1_choice",title:"SleepyDiscord::AppCommand::Option::Choice",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option_1_1_choice.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option_1_1_choice",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option_1_1_choice",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::AppCommand::Option::Choice"},sidebar:"Reference",previous:{title:"SleepyDiscord::AppCommand::Option",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option"},next:{title:"SleepyDiscord::AppCommand::Option::TypeHelper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_app_command_1_1_option_1_1_type_helper"}},s=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Choice",id:"function-choice",children:[],level:3},{value:"function Choice",id:"function-choice-1",children:[],level:3},{value:"function Choice",id:"function-choice-2",children:[],level:3},{value:"function get",id:"function-get",children:[],level:3},{value:"function get",id:"function-get-1",children:[],level:3},{value:"function setCopy",id:"function-setcopy",children:[],level:3},{value:"function setView",id:"function-setview",children:[],level:3},{value:"function copy",id:"function-copy",children:[],level:3},{value:"function set",id:"function-set",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3},{value:"function set",id:"function-set-1",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable name",id:"variable-name",children:[],level:3},{value:"variable value",id:"variable-value",children:[],level:3}],level:2}],u={toc:s};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,c.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Inherits from ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,o.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,o.kt)("h3",{id:"function-choice"},"function Choice"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"Choice() =default\n")),(0,o.kt)("h3",{id:"function-choice-1"},"function Choice"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"Choice(\n    json::Value & json\n)\n")),(0,o.kt)("h3",{id:"function-choice-2"},"function Choice"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Choice(\n    const nonstd::string_view & json\n)\n")),(0,o.kt)("h3",{id:"function-get"},"function get"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\ninline const Type get()\n")),(0,o.kt)("h3",{id:"function-get-1"},"function get"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\ninline const bool get(\n    Type & target\n)\n")),(0,o.kt)("h3",{id:"function-setcopy"},"function setCopy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\ninline void setCopy(\n    Type & val\n)\n")),(0,o.kt)("h3",{id:"function-setview"},"function setView"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\ninline void setView(\n    Type & val\n)\n")),(0,o.kt)("h3",{id:"function-copy"},"function copy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Choice copy()\n")),(0,o.kt)("h3",{id:"function-set"},"function set"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\ninline void set(\n    Type & val\n)\n")),(0,o.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::::::, "", ::REQUIRIED_FIELD ,\n    json::pair &::::::, "", ::REQUIRIED_FIELD \n)\n')),(0,o.kt)("h3",{id:"function-set-1"},"function set"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void set(\n    decltype(nullptr)& \n)\n")),(0,o.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,o.kt)("h3",{id:"variable-name"},"variable name"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),(0,o.kt)("h3",{id:"variable-value"},"variable value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"json::Value value;\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);