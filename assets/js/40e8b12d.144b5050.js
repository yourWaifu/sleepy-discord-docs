"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[9320],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=n.createContext({}),o=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=o(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=o(t),m=s,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?n.createElement(v,l(l({ref:r},u),{},{components:t})):n.createElement(v,l({ref:r},u))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,l[1]=i;for(var o=2;o<a;o++)l[o]=t[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9274:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return u},default:function(){return d}});var n=t(3117),s=t(102),a=(t(7294),t(3905)),l=["components"],i={title:"SleepyDiscord::ServerMembersRequest"},c=void 0,o={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_server_members_request",id:"reference/Classes/struct_sleepy_discord_1_1_server_members_request",title:"SleepyDiscord::ServerMembersRequest",description:"Public Functions Documentation",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_server_members_request.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_server_members_request",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server_members_request",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::ServerMembersRequest"},sidebar:"Reference",previous:{title:"SleepyDiscord::ServerMembersChunk",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server_members_chunk"},next:{title:"SleepyDiscord::ServerWidget",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server_widget"}},u=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ServerMembersRequest",id:"function-servermembersrequest",children:[],level:3},{value:"function ServerMembersRequest",id:"function-servermembersrequest-1",children:[],level:3},{value:"function ServerMembersRequest",id:"function-servermembersrequest-2",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable serverID",id:"variable-serverid",children:[],level:3},{value:"variable query",id:"variable-query",children:[],level:3},{value:"variable limit",id:"variable-limit",children:[],level:3},{value:"variable presence",id:"variable-presence",children:[],level:3},{value:"variable userIDs",id:"variable-userids",children:[],level:3},{value:"variable nonce",id:"variable-nonce",children:[],level:3}],level:2}],p={toc:u};function d(e){var r=e.components,t=(0,s.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-servermembersrequest"},"function ServerMembersRequest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"ServerMembersRequest() =default\n")),(0,a.kt)("h3",{id:"function-servermembersrequest-1"},"function ServerMembersRequest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"ServerMembersRequest(\n    const json::Value & json\n)\n")),(0,a.kt)("h3",{id:"function-servermembersrequest-2"},"function ServerMembersRequest"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline ServerMembersRequest(\n    const nonstd::string_view & json\n)\n")),(0,a.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair< json::OptionalTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD \n)\n')),(0,a.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,a.kt)("h3",{id:"variable-serverid"},"variable serverID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Server > serverID;\n")),(0,a.kt)("h3",{id:"variable-query"},"variable query"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"tl::optional< std::string > query;\n")),(0,a.kt)("h3",{id:"variable-limit"},"variable limit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int limit = 0;\n")),(0,a.kt)("h3",{id:"variable-presence"},"variable presence"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"bool presence = false;\n")),(0,a.kt)("h3",{id:"variable-userids"},"variable userIDs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Snowflake< User > > userIDs;\n")),(0,a.kt)("h3",{id:"variable-nonce"},"variable nonce"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string nonce;\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);