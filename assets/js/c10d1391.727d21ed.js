"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4834],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,c=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(t),g=i,f=p["".concat(s,".").concat(g)]||p[g]||d[g]||c;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var c=t.length,a=new Array(c);a[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var l=2;l<c;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},136:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=t(3117),i=t(102),c=(t(7294),t(3905)),a=["components"],o={title:"SleepyDiscord::VoiceConnection"},s=void 0,l={unversionedId:"reference/Classes/class_sleepy_discord_1_1_voice_connection",id:"reference/Classes/class_sleepy_discord_1_1_voice_connection",title:"SleepyDiscord::VoiceConnection",description:"Inherits from SleepyDiscord::GenericMessageReceiver",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_voice_connection.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_voice_connection",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_voice_connection",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::VoiceConnection"},sidebar:"Reference",previous:{title:"SleepyDiscord::UWebSocketsDiscordClient",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_u_web_sockets_discord_client"},next:{title:"SleepyDiscord::WebsocketppDiscordClient",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_websocketpp_discord_client"}},u=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function VoiceConnection",id:"function-voiceconnection",children:[],level:3},{value:"function VoiceConnection",id:"function-voiceconnection-1",children:[],level:3},{value:"function ~VoiceConnection",id:"function-voiceconnection-2",children:[],level:3},{value:"function operator==",id:"function-operator",children:[],level:3},{value:"function isReady",id:"function-isready",children:[],level:3},{value:"function setAudioSource",id:"function-setaudiosource",children:[],level:3},{value:"function hasAudioSource",id:"function-hasaudiosource",children:[],level:3},{value:"function getAudioSource",id:"function-getaudiosource",children:[],level:3},{value:"function setAudioOutput",id:"function-setaudiooutput",children:[],level:3},{value:"function hasAudioOutput",id:"function-hasaudiooutput",children:[],level:3},{value:"function getAudioOutput",id:"function-getaudiooutput",children:[],level:3},{value:"function startSpeaking",id:"function-startspeaking",children:[],level:3},{value:"function startSpeaking",id:"function-startspeaking-1",children:[],level:3},{value:"function startSpeaking",id:"function-startspeaking-2",children:[],level:3},{value:"function startListening",id:"function-startlistening",children:[],level:3},{value:"function getDiscordClient",id:"function-getdiscordclient",children:[],level:3},{value:"function getOrigin",id:"function-getorigin",children:[],level:3},{value:"function getContext",id:"function-getcontext",children:[],level:3},{value:"function speak",id:"function-speak",children:[],level:3},{value:"function disconnect",id:"function-disconnect",children:[],level:3},{value:"function getWebSocketURI",id:"function-getwebsocketuri",children:[],level:3}],level:2}],d={toc:u};function p(e){var n=e.components,t=(0,i.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Inherits from ",(0,c.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver"},"SleepyDiscord::GenericMessageReceiver")),(0,c.kt)("h2",{id:"inherited-members"},"inherited members"),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver"},"SleepyDiscord::GenericMessageReceiver"))),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null}),(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"virtual"),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver#function-~genericmessagereceiver"},"~GenericMessageReceiver")),"() =default")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"virtual void"),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver#function-handlefailtoconnect"},"handleFailToConnect")),"()")))),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Protected Functions inherited from ",(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver"},"SleepyDiscord::GenericMessageReceiver"))),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null}),(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"const time_t"),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver#function-getretrydelay"},"getRetryDelay")),"()")))),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver"},"SleepyDiscord::GenericMessageReceiver"))),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null}),(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"WebsocketConnection"),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver#variable-connection"},"connection")))))),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Protected Attributes inherited from ",(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver"},"SleepyDiscord::GenericMessageReceiver"))),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null}),(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"int"),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver#variable-consecutivereconnectscount"},"consecutiveReconnectsCount")))),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_timer"},"Timer")),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver#variable-reconnecttimer"},"reconnectTimer")))))),(0,c.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,c.kt)("h3",{id:"function-voiceconnection"},"function VoiceConnection"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"VoiceConnection(\n    BaseDiscordClient * client,\n    VoiceContext & _context\n)\n")),(0,c.kt)("h3",{id:"function-voiceconnection-1"},"function VoiceConnection"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"VoiceConnection(\n    VoiceConnection && \n) =default\n")),(0,c.kt)("h3",{id:"function-voiceconnection-2"},"function ~VoiceConnection"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"~VoiceConnection() =default\n")),(0,c.kt)("h3",{id:"function-operator"},"function operator=="),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator==(\n    const VoiceConnection & right\n)\n")),(0,c.kt)("h3",{id:"function-isready"},"function isReady"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool isReady() const\n")),(0,c.kt)("h3",{id:"function-setaudiosource"},"function setAudioSource"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void setAudioSource(\n    BaseAudioSource *& source\n)\n")),(0,c.kt)("h3",{id:"function-hasaudiosource"},"function hasAudioSource"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool hasAudioSource() const\n")),(0,c.kt)("h3",{id:"function-getaudiosource"},"function getAudioSource"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline BaseAudioSource & getAudioSource()\n")),(0,c.kt)("h3",{id:"function-setaudiooutput"},"function setAudioOutput"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void setAudioOutput(\n    BaseAudioOutput *& output\n)\n")),(0,c.kt)("h3",{id:"function-hasaudiooutput"},"function hasAudioOutput"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool hasAudioOutput() const\n")),(0,c.kt)("h3",{id:"function-getaudiooutput"},"function getAudioOutput"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline BaseAudioOutput & getAudioOutput()\n")),(0,c.kt)("h3",{id:"function-startspeaking"},"function startSpeaking"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"void startSpeaking()\n")),(0,c.kt)("h3",{id:"function-startspeaking-1"},"function startSpeaking"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void startSpeaking(\n    BaseAudioSource * source\n)\n")),(0,c.kt)("h3",{id:"function-startspeaking-2"},"function startSpeaking"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class AudioSource ,\nclass... Types>\ninline void startSpeaking(\n    Types &&... arguments\n)\n")),(0,c.kt)("h3",{id:"function-startlistening"},"function startListening"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"void startListening()\n")),(0,c.kt)("h3",{id:"function-getdiscordclient"},"function getDiscordClient"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline BaseDiscordClient & getDiscordClient()\n")),(0,c.kt)("h3",{id:"function-getorigin"},"function getOrigin"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline BaseDiscordClient & getOrigin()\n")),(0,c.kt)("h3",{id:"function-getcontext"},"function getContext"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"inline VoiceContext & getContext()\n")),(0,c.kt)("h3",{id:"function-speak"},"function speak"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"void speak(\n    AudioSample *& audioData,\n    const std::size_t & length\n)\n")),(0,c.kt)("h3",{id:"function-disconnect"},"function disconnect"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"void disconnect()\n")),(0,c.kt)("h3",{id:"function-getwebsocketuri"},"function getWebSocketURI"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline std::string getWebSocketURI(\n    const std::string & givenEndpoint\n)\n")),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}p.isMDXComponent=!0}}]);