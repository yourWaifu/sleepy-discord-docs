"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5193],{3905:function(e,n,t){t.d(n,{Zo:function(){return a},kt:function(){return _}});var r=t(7294);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},a=function(e){var n=d(e.components);return r.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,c=e.mdxType,i=e.originalType,o=e.parentName,a=l(e,["components","mdxType","originalType","parentName"]),u=d(t),_=c,f=u["".concat(o,".").concat(_)]||u[_]||p[_]||i;return t?r.createElement(f,s(s({ref:n},a),{},{components:t})):r.createElement(f,s({ref:n},a))}));function _(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var i=t.length,s=new Array(i);s[0]=u;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:c,s[1]=l;for(var d=2;d<i;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7363:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return a},default:function(){return u}});var r=t(3117),c=t(102),i=(t(7294),t(3905)),s=["components"],l={title:"SleepyDiscord::GenericUDPClient"},o=void 0,d={unversionedId:"reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client",id:"reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client",title:"SleepyDiscord::GenericUDPClient",description:"Inherited by SleepyDiscord::CustomUDPClient",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::GenericUDPClient"},sidebar:"Reference",previous:{title:"SleepyDiscord::GenericSession",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_session"},next:{title:"SleepyDiscord::IdentifiableDiscordObject",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"}},a=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"typedef SendHandler",id:"typedef-sendhandler",children:[],level:3},{value:"typedef ReceiveHandler",id:"typedef-receivehandler",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function connect",id:"function-connect",children:[],level:3},{value:"function send",id:"function-send",children:[],level:3},{value:"function receive",id:"function-receive",children:[],level:3},{value:"function send",id:"function-send-1",children:[],level:3}],level:2}],p={toc:a};function u(e){var n=e.components,t=(0,c.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Inherited by ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client"},"SleepyDiscord::ASIOUDPClient"),", ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client"},"SleepyDiscord::CustomUDPClient")),(0,i.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,i.kt)("h3",{id:"typedef-sendhandler"},"typedef SendHandler"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef std::function<void()> SleepyDiscord::GenericUDPClient::SendHandler;\n")),(0,i.kt)("h3",{id:"typedef-receivehandler"},"typedef ReceiveHandler"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef std::function<void(const std::vector<uint8_t>&)> SleepyDiscord::GenericUDPClient::ReceiveHandler;\n")),(0,i.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,i.kt)("h3",{id:"function-connect"},"function connect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual bool connect(\n    const std::string & to,\n    const uint16_t port\n) =0\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client#function-connect"},"SleepyDiscord::ASIOUDPClient::connect"),", ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client#function-connect"},"SleepyDiscord::CustomUDPClient::connect")),(0,i.kt)("h3",{id:"function-send"},"function send"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void send(\n    const uint8_t * buffer,\n    size_t bufferLength,\n    SendHandler handler =[](){}\n) =0\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client#function-send"},"SleepyDiscord::ASIOUDPClient::send"),", ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client#function-send"},"SleepyDiscord::CustomUDPClient::send")),(0,i.kt)("h3",{id:"function-receive"},"function receive"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void receive(\n    ReceiveHandler handler\n) =0\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client#function-receive"},"SleepyDiscord::ASIOUDPClient::receive"),", ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client#function-receive"},"SleepyDiscord::CustomUDPClient::receive")),(0,i.kt)("h3",{id:"function-send-1"},"function send"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void send(\n    const std::vector< uint8_t > buffer,\n    SendHandler handler =[](){}\n)\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);