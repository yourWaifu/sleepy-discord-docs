"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[6308],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),i=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=i(a),m=n,_=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return a?r.createElement(_,l(l({ref:t},p),{},{components:a})):r.createElement(_,l({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var i=2;i<s;i++)l[i]=a[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3391:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return p},default:function(){return u}});var r=a(3117),n=a(102),s=(a(7294),a(3905)),l=["components"],o={title:"SleepyDiscord::InteractionCallback::Message"},c=void 0,i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_message",id:"reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_message",title:"SleepyDiscord::InteractionCallback::Message",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_message.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_message",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_message",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::InteractionCallback::Message"},sidebar:"Reference",previous:{title:"SleepyDiscord::InteractionCallback::EmptyData",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_empty_data"},next:{title:"SleepyDiscord::InteractionCallback::Modal",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_modal"}},p=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum Flags",id:"enum-flags",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Message",id:"function-message",children:[],level:3},{value:"function Message",id:"function-message-1",children:[],level:3},{value:"function Message",id:"function-message-2",children:[],level:3},{value:"function empty",id:"function-empty",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable tts",id:"variable-tts",children:[],level:3},{value:"variable flags",id:"variable-flags",children:[],level:3}],level:2}],d={toc:p};function u(e){var t=e.components,a=(0,n.Z)(e,l);return(0,s.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Inherits from ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params"},"SleepyDiscord::WebHookParams"),", ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params"},"SleepyDiscord::BaseWebHookParams< WebHookParams >"),", ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,s.kt)("h2",{id:"inherited-members"},"inherited members"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params"},"SleepyDiscord::WebHookParams"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"JSONStructStart"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params#function-stdtuple_cat"},"std::tuple_cat")),"(",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params"},"BaseWebHookParams"),"< ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params"},"WebHookParams"),' >::JSONStruct , std::make_tuple(json::pair(&WebHookParams::username, "username", json::OPTIONAL_FIELD), json::pair(&WebHookParams::avatarURL, "avatar_url", json::OPTIONAL_FIELD)) )')))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params"},"SleepyDiscord::WebHookParams"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params#variable-username"},"username")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_web_hook_params#variable-avatarurl"},"avatarURL")))))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params"},"SleepyDiscord::BaseWebHookParams< WebHookParams >"))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params#variable-content"},"content")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::vector< ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_embed"},"Embed")," >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params#variable-embeds"},"embeds")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions"},"AllowedMentions")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params#variable-allowedmentions"},"allowedMentions")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::vector< std::shared_ptr< ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"BaseComponent")," > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_web_hook_params#variable-components"},"components")))))),(0,s.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,s.kt)("h3",{id:"enum-flags"},"enum Flags"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,s.kt)("th",{parentName:"tr",align:null},"Value"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"UNDEFINED"),(0,s.kt)("td",{parentName:"tr",align:null},"-1"),(0,s.kt)("td",{parentName:"tr",align:null})),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"NONE"),(0,s.kt)("td",{parentName:"tr",align:null},"0"),(0,s.kt)("td",{parentName:"tr",align:null})),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Ephemeral"),(0,s.kt)("td",{parentName:"tr",align:null},"1 << 6"),(0,s.kt)("td",{parentName:"tr",align:null})))),(0,s.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,s.kt)("h3",{id:"function-message"},"function Message"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"Message() =default\n")),(0,s.kt)("h3",{id:"function-message-1"},"function Message"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"Message(\n    json::Value & json\n)\n")),(0,s.kt)("h3",{id:"function-message-2"},"function Message"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Message(\n    const nonstd::string_view & json\n)\n")),(0,s.kt)("h3",{id:"function-empty"},"function empty"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const bool empty() const\n")),(0,s.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,s.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,s.kt)("h3",{id:"variable-tts"},"variable tts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"bool tts = false;\n")),(0,s.kt)("h3",{id:"variable-flags"},"variable flags"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::InteractionCallback::Message::Flags flags = Flags::UNDEFINED;\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);