"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5986],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return y}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),y=i,v=d["".concat(o,".").concat(y)]||d[y]||p[y]||a;return r?n.createElement(v,c(c({ref:t},u),{},{components:r})):n.createElement(v,c({ref:t},u))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,c=new Array(a);c[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,c[1]=l;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},153:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=r(3117),i=r(102),a=(r(7294),r(3905)),c=["components"],l={title:"SleepyDiscord::ActivityParty"},o=void 0,s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_activity_party",id:"reference/Classes/struct_sleepy_discord_1_1_activity_party",title:"SleepyDiscord::ActivityParty",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_activity_party.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_activity_party",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity_party",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::ActivityParty"},sidebar:"Reference",previous:{title:"SleepyDiscord::ActivityAssets",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity_assets"},next:{title:"SleepyDiscord::ActivitySecrets",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_activity_secrets"}},u=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ActivityParty",id:"function-activityparty",children:[],level:3},{value:"function ~ActivityParty",id:"function-activityparty-1",children:[],level:3},{value:"function ActivityParty",id:"function-activityparty-2",children:[],level:3},{value:"function ActivityParty",id:"function-activityparty-3",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable ID",id:"variable-id",children:[],level:3},{value:"variable size",id:"variable-size",children:[],level:3},{value:"variable currentSize",id:"variable-currentsize",children:[],level:3},{value:"variable maxSize",id:"variable-maxsize",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,r=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Inherits from ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-activityparty"},"function ActivityParty"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"ActivityParty() =default\n")),(0,a.kt)("h3",{id:"function-activityparty-1"},"function ~ActivityParty"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"~ActivityParty() =default\n")),(0,a.kt)("h3",{id:"function-activityparty-2"},"function ActivityParty"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"ActivityParty(\n    const json::Value & json\n)\n")),(0,a.kt)("h3",{id:"function-activityparty-3"},"function ActivityParty"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline ActivityParty(\n    const nonstd::string_view & json\n)\n")),(0,a.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::StdArrayTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,a.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,a.kt)("h3",{id:"variable-id"},"variable ID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string ID;\n")),(0,a.kt)("h3",{id:"variable-size"},"variable size"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::array< int64_t, 2 > size;\n")),(0,a.kt)("h3",{id:"variable-currentsize"},"variable currentSize"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int64_t & currentSize = size[0];\n")),(0,a.kt)("h3",{id:"variable-maxsize"},"variable maxSize"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int64_t & maxSize = size[1];\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);