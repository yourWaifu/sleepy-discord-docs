"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[642],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return y}});var n=r(7294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),y=c,f=p["".concat(s,".").concat(y)]||p[y]||d[y]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function y(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=r.length,a=new Array(o);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:c,a[1]=i;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},738:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var n=r(3117),c=r(102),o=(r(7294),r(3905)),a=["components"],i={title:"SleepyDiscord::AuditLogKeyData"},s=void 0,l={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",id:"reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",title:"SleepyDiscord::AuditLogKeyData",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log_key_data",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::AuditLogKeyData"},sidebar:"Reference",previous:{title:"SleepyDiscord::AuditLog",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_audit_log"},next:{title:"SleepyDiscord::BaseAudioOutput",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_audio_output"}},u=[{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using ObjectChanged",id:"using-objectchanged",children:[],level:3},{value:"using Type",id:"using-type",children:[],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,r=(0,c.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,o.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class _ObjectChanged ,\nclass _Type >\nstruct SleepyDiscord::AuditLogKeyData;\n")),(0,o.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,o.kt)("h3",{id:"using-objectchanged"},"using ObjectChanged"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AuditLogKeyData< _ObjectChanged, _Type >::ObjectChanged =  _ObjectChanged;\n")),(0,o.kt)("h3",{id:"using-type"},"using Type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AuditLogKeyData< _ObjectChanged, _Type >::Type =  _type;\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}p.isMDXComponent=!0}}]);