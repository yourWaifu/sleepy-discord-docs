"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5620],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9320:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),s=["components"],o={title:"SleepyDiscord::SessionStartLimit"},l=void 0,c={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_session_start_limit",id:"reference/Classes/struct_sleepy_discord_1_1_session_start_limit",title:"SleepyDiscord::SessionStartLimit",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_session_start_limit.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_session_start_limit",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_session_start_limit",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::SessionStartLimit"},sidebar:"Reference",previous:{title:"SleepyDiscord::ServerWidget",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server_widget"},next:{title:"SleepyDiscord::Snowflake",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"}},u=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function SessionStartLimit",id:"function-sessionstartlimit",children:[],level:3},{value:"function SessionStartLimit",id:"function-sessionstartlimit-1",children:[],level:3},{value:"function SessionStartLimit",id:"function-sessionstartlimit-2",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable total",id:"variable-total",children:[],level:3},{value:"variable remaining",id:"variable-remaining",children:[],level:3},{value:"variable resetAfter",id:"variable-resetafter",children:[],level:3},{value:"variable maxConcurency",id:"variable-maxconcurency",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Inherits from ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-sessionstartlimit"},"function SessionStartLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"SessionStartLimit() =default\n")),(0,a.kt)("h3",{id:"function-sessionstartlimit-1"},"function SessionStartLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"SessionStartLimit(\n    const json::Value & rawJSON\n)\n")),(0,a.kt)("h3",{id:"function-sessionstartlimit-2"},"function SessionStartLimit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline SessionStartLimit(\n    const nonstd::string_view & json\n)\n")),(0,a.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD \n)\n')),(0,a.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,a.kt)("h3",{id:"variable-total"},"variable total"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int total = 0;\n")),(0,a.kt)("h3",{id:"variable-remaining"},"variable remaining"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int remaining = 0;\n")),(0,a.kt)("h3",{id:"variable-resetafter"},"variable resetAfter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int resetAfter = 0;\n")),(0,a.kt)("h3",{id:"variable-maxconcurency"},"variable maxConcurency"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int maxConcurency = 0;\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);