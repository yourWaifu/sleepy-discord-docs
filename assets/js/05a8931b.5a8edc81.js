"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[3505],{3905:function(e,t,r){r.d(t,{Zo:function(){return i},kt:function(){return u}});var s=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},n=Object.keys(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=s.createContext({}),d=function(e){var t=s.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=d(e.components);return s.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,o=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),m=d(r),u=a,_=m["".concat(o,".").concat(u)]||m[u]||p[u]||n;return r?s.createElement(_,l(l({ref:t},i),{},{components:r})):s.createElement(_,l({ref:t},i))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var d=2;d<n;d++)l[d]=r[d];return s.createElement.apply(null,l)}return s.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7829:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return i},default:function(){return m}});var s=r(3117),a=r(102),n=(r(7294),r(3905)),l=["components"],c={title:"SleepyDiscord::SendMessageParams"},o=void 0,d={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_send_message_params",id:"reference/Classes/struct_sleepy_discord_1_1_send_message_params",title:"SleepyDiscord::SendMessageParams",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_send_message_params.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_send_message_params",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_send_message_params",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::SendMessageParams"},sidebar:"Reference",previous:{title:"SleepyDiscord::SelectMenu::Option",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_select_menu_1_1_option"},next:{title:"SleepyDiscord::Server",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server"}},i=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function std::tuple_cat",id:"function-stdtuple_cat",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable tts",id:"variable-tts",children:[],level:3},{value:"variable messageReference",id:"variable-messagereference",children:[],level:3}],level:2}],p={toc:i};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,n.kt)("wrapper",(0,s.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Inherits from ",(0,n.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< SendMessageParams >"),", ",(0,n.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,n.kt)("h2",{id:"inherited-members"},"inherited members"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< SendMessageParams >"))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"JSONStructStart"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#function-stdmake_tuple"},"std::make_tuple")),'(json::pair &::, "", ::OPTIONAL_FIELD , json::pair< ',(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_container_type_helper"},"json::ContainerTypeHelper"),' > &::, "", ::OPTIONAL_FIELD , json::pair &::, "", ::OPTIONAL_FIELD , json::pair< ',(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_container_type_helper"},"json::ContainerTypeHelper"),' > &::, "", ::OPTIONAL_FIELD )')))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params"},"SleepyDiscord::MessageParams< SendMessageParams >"))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_channel"},"Channel")," >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-channelid"},"channelID")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::string"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-content"},"content")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::vector< ",(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_embed"},"Embed")," >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-embed"},"embed")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions"},"AllowedMentions")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-allowedmentions"},"allowedMentions")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::vector< std::shared_ptr< ",(0,n.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"BaseComponent")," > >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params#variable-components"},"components")))))),(0,n.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,n.kt)("h3",{id:"function-stdtuple_cat"},"function std::tuple_cat"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::tuple_cat(\n    MessageParams< SendMessageParams >::JSONStruct ,\n    std::make_tuple(json::pair(&SendMessageParams::tts, "tts", json::OPTIONAL_FIELD), json::pair(&SendMessageParams::messageReference, "message_reference", json::OPTIONAL_FIELD)) \n)\n')),(0,n.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,n.kt)("h3",{id:"variable-tts"},"variable tts"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"bool tts = false;\n")),(0,n.kt)("h3",{id:"variable-messagereference"},"variable messageReference"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"MessageReference messageReference;\n")),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}m.isMDXComponent=!0}}]);