"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[2788],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return u}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},i=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=o,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return n?r.createElement(f,p(p({ref:t},i),{},{components:n})):r.createElement(f,p({ref:t},i))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,p[1]=s;for(var c=2;c<a;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1026:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return i},default:function(){return m}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),p=["components"],s={title:"SleepyDiscord::ComponentTemp"},l=void 0,c={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_component_temp",id:"reference/Classes/struct_sleepy_discord_1_1_component_temp",title:"SleepyDiscord::ComponentTemp",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_component_temp",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::ComponentTemp"},sidebar:"Reference",previous:{title:"SleepyDiscord::Channel",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_channel"},next:{title:"SleepyDiscord::Connection",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_connection"}},i=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ComponentTemp",id:"function-componenttemp",children:[],level:3},{value:"function ~ComponentTemp",id:"function-componenttemp-1",children:[],level:3},{value:"function operator json::Value",id:"function-operator-jsonvalue",children:[],level:3},{value:"function operator RawComponent",id:"function-operator-rawcomponent",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2}],d={toc:i};function m(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,a.kt)("p",null,"Inherits from ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"),", ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,a.kt)("h2",{id:"inherited-members"},"inherited members"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Public Types inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"using ComponentType"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#using-type"},"Type")))))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-basecomponent"},"BaseComponent")),"()")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-basecomponent"},"BaseComponent")),"(Type _type)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-~basecomponent"},"~BaseComponent")),"() =default")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"const ComponentType"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-gettype"},"getType")),"() const")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Protected Attributes inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Type"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#variable-type"},"type")))))),(0,a.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Child >\nstruct SleepyDiscord::ComponentTemp;\n")),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-componenttemp"},"function ComponentTemp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline ComponentTemp()\n")),(0,a.kt)("h3",{id:"function-componenttemp-1"},"function ~ComponentTemp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"~ComponentTemp() =default\n")),(0,a.kt)("h3",{id:"function-operator-jsonvalue"},"function operator json::Value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline operator json::Value()\n")),(0,a.kt)("h3",{id:"function-operator-rawcomponent"},"function operator RawComponent"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline operator RawComponent()\n")),(0,a.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair< json::EnumTypeHelper > &::, "", ::REQUIRIED_FIELD \n)\n')),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}m.isMDXComponent=!0}}]);