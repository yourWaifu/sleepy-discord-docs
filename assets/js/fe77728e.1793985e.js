"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[9934],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var c=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,c,r=function(e,n){if(null==e)return{};var t,c,r={},s=Object.keys(e);for(c=0;c<s.length;c++)t=s[c],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(c=0;c<s.length;c++)t=s[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=c.createContext({}),l=function(e){var n=c.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return c.createElement(a.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return c.createElement(c.Fragment,{},n)}},u=c.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(t),f=r,m=u["".concat(a,".").concat(f)]||u[f]||p[f]||s;return t?c.createElement(m,i(i({ref:n},d),{},{components:t})):c.createElement(m,i({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=u;var o={};for(var a in n)hasOwnProperty.call(n,a)&&(o[a]=n[a]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return c.createElement.apply(null,i)}return c.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4432:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return a},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var c=t(3117),r=t(102),s=(t(7294),t(3905)),i=["components"],o={title:"SleepyDiscord::GenericMessageReceiver"},a=void 0,l={unversionedId:"reference/Classes/class_sleepy_discord_1_1_generic_message_receiver",id:"reference/Classes/class_sleepy_discord_1_1_generic_message_receiver",title:"SleepyDiscord::GenericMessageReceiver",description:"Inherited by SleepyDiscord::VoiceConnection",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::GenericMessageReceiver"},sidebar:"Reference",previous:{title:"SleepyDiscord::GenericCompression",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_compression"},next:{title:"SleepyDiscord::GenericScheduleHandler",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler"}},d=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ~GenericMessageReceiver",id:"function-genericmessagereceiver",children:[],level:3},{value:"function initialize",id:"function-initialize",children:[],level:3},{value:"function handleFailToConnect",id:"function-handlefailtoconnect",children:[],level:3},{value:"function processMessage",id:"function-processmessage",children:[],level:3},{value:"function processCloseCode",id:"function-processclosecode",children:[],level:3},{value:"function processMessage",id:"function-processmessage-1",children:[],level:3}],level:2},{value:"Protected Functions Documentation",id:"protected-functions-documentation",children:[{value:"function getRetryDelay",id:"function-getretrydelay",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable connection",id:"variable-connection",children:[],level:3}],level:2},{value:"Protected Attributes Documentation",id:"protected-attributes-documentation",children:[{value:"variable consecutiveReconnectsCount",id:"variable-consecutivereconnectscount",children:[],level:3},{value:"variable reconnectTimer",id:"variable-reconnecttimer",children:[],level:3}],level:2}],p={toc:d};function u(e){var n=e.components,t=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,c.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Inherited by ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client"},"SleepyDiscord::BaseDiscordClient"),", ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_voice_connection"},"SleepyDiscord::VoiceConnection")),(0,s.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,s.kt)("h3",{id:"function-genericmessagereceiver"},"function ~GenericMessageReceiver"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual ~GenericMessageReceiver() =default\n")),(0,s.kt)("h3",{id:"function-initialize"},"function initialize"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void initialize()\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client#function-initialize"},"SleepyDiscord::BaseDiscordClient::initialize"),", ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_voice_connection#function-initialize"},"SleepyDiscord::VoiceConnection::initialize")),(0,s.kt)("h3",{id:"function-handlefailtoconnect"},"function handleFailToConnect"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void handleFailToConnect()\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client#function-handlefailtoconnect"},"SleepyDiscord::BaseDiscordClient::handleFailToConnect")),(0,s.kt)("h3",{id:"function-processmessage"},"function processMessage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void processMessage(\n    const std::string & message\n) =0\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client#function-processmessage"},"SleepyDiscord::BaseDiscordClient::processMessage"),", ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_voice_connection#function-processmessage"},"SleepyDiscord::VoiceConnection::processMessage")),(0,s.kt)("h3",{id:"function-processclosecode"},"function processCloseCode"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void processCloseCode(\n    const int16_t \n)\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client#function-processclosecode"},"SleepyDiscord::BaseDiscordClient::processCloseCode"),", ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_voice_connection#function-processclosecode"},"SleepyDiscord::VoiceConnection::processCloseCode")),(0,s.kt)("h3",{id:"function-processmessage-1"},"function processMessage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void processMessage(\n    const WebSocketMessage message\n)\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,s.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_base_discord_client#function-processmessage"},"SleepyDiscord::BaseDiscordClient::processMessage")),(0,s.kt)("h2",{id:"protected-functions-documentation"},"Protected Functions Documentation"),(0,s.kt)("h3",{id:"function-getretrydelay"},"function getRetryDelay"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const time_t getRetryDelay()\n")),(0,s.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,s.kt)("h3",{id:"variable-connection"},"variable connection"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"WebsocketConnection connection;\n")),(0,s.kt)("h2",{id:"protected-attributes-documentation"},"Protected Attributes Documentation"),(0,s.kt)("h3",{id:"variable-consecutivereconnectscount"},"variable consecutiveReconnectsCount"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"int consecutiveReconnectsCount = 0;\n")),(0,s.kt)("h3",{id:"variable-reconnecttimer"},"variable reconnectTimer"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"Timer reconnectTimer;\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);