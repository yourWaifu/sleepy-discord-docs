"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[1802],{3905:function(e,n,r){r.d(n,{Zo:function(){return o},kt:function(){return _}});var t=r(7294);function l(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){l(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,l=function(e,n){if(null==e)return{};var r,t,l={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(l[r]=e[r]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=t.createContext({}),d=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},o=function(e){var n=d(e.components);return t.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),p=d(r),_=l,h=p["".concat(i,".").concat(_)]||p[_]||u[_]||a;return r?t.createElement(h,c(c({ref:n},o),{},{components:r})):t.createElement(h,c({ref:n},o))}));function _(e,n){var r=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=r.length,c=new Array(a);c[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,c[1]=s;for(var d=2;d<a;d++)c[d]=r[d];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9660:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return d},toc:function(){return o},default:function(){return p}});var t=r(3117),l=r(102),a=(r(7294),r(3905)),c=["components"],s={title:"SleepyDiscord::ASIOScheduleHandler"},i=void 0,d={unversionedId:"reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",id:"reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",title:"SleepyDiscord::ASIOScheduleHandler",description:"Inherits from SleepyDiscord::GenericScheduleHandler",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::ASIOScheduleHandler"},sidebar:"Reference",previous:{title:"SleepyDiscord::ASIOBasedScheduleHandler",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},next:{title:"SleepyDiscord::ASIOUDPClient",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client"}},o=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ASIOScheduleHandler",id:"function-asioschedulehandler",children:[],level:3},{value:"function ~ASIOScheduleHandler",id:"function-asioschedulehandler-1",children:[],level:3},{value:"function getIOService",id:"function-getioservice",children:[],level:3},{value:"function schedule",id:"function-schedule",children:[],level:3},{value:"function run",id:"function-run",children:[],level:3},{value:"function handleTimer",id:"function-handletimer",children:[],level:3}],level:2}],u={toc:o};function p(e){var n=e.components,r=(0,l.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Inherits from ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},"SleepyDiscord::ASIOBasedScheduleHandler"),", ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler"},"SleepyDiscord::GenericScheduleHandler")),(0,a.kt)("h2",{id:"inherited-members"},"inherited members"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},"SleepyDiscord::ASIOBasedScheduleHandler"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"virtual"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler#function-~asiobasedschedulehandler"},"~ASIOBasedScheduleHandler")),"() =default")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler"},"SleepyDiscord::GenericScheduleHandler"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"virtual"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler#function-~genericschedulehandler"},"~GenericScheduleHandler")),"() =default")))),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-asioschedulehandler"},"function ASIOScheduleHandler"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline ASIOScheduleHandler()\n")),(0,a.kt)("h3",{id:"function-asioschedulehandler-1"},"function ~ASIOScheduleHandler"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual ~ASIOScheduleHandler() =default\n")),(0,a.kt)("h3",{id:"function-getioservice"},"function getIOService"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual asio::io_service & getIOService() override\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler#function-getioservice"},"SleepyDiscord::ASIOBasedScheduleHandler::getIOService")),(0,a.kt)("h3",{id:"function-schedule"},"function schedule"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual Timer schedule(\n    TimedTask code,\n    const time_t milliseconds\n) override\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler#function-schedule"},"SleepyDiscord::GenericScheduleHandler::schedule")),(0,a.kt)("h3",{id:"function-run"},"function run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void run()\n")),(0,a.kt)("h3",{id:"function-handletimer"},"function handleTimer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"static inline void handleTimer(\n    const asio::error_code & ec,\n    std::function< void()> & code\n)\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}p.isMDXComponent=!0}}]);