"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[1301],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),i=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(n),m=a,_=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(_,s(s({ref:t},c),{},{components:n})):r.createElement(_,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var i=2;i<l;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6406:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return i},toc:function(){return c},default:function(){return u}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),s=["components"],p={title:"SleepyDiscord::TextInputs"},o=void 0,i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_text_inputs",id:"reference/Classes/struct_sleepy_discord_1_1_text_inputs",title:"SleepyDiscord::TextInputs",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_text_inputs.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_text_inputs",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_text_inputs",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::TextInputs"},sidebar:"Reference",previous:{title:"SleepyDiscord::StringResponse",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_string_response"},next:{title:"SleepyDiscord::ThreadListSync",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_thread_list_sync"}},c=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Style",id:"using-style",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function TextInputs",id:"function-textinputs",children:[],level:3},{value:"function ~TextInputs",id:"function-textinputs-1",children:[],level:3},{value:"function TextInputs",id:"function-textinputs-2",children:[],level:3},{value:"function TextInputs",id:"function-textinputs-3",children:[],level:3},{value:"function std::tuple_cat",id:"function-stdtuple_cat",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable componentType",id:"variable-componenttype",children:[],level:3},{value:"variable customID",id:"variable-customid",children:[],level:3},{value:"variable style",id:"variable-style",children:[],level:3},{value:"variable label",id:"variable-label",children:[],level:3},{value:"variable minLength",id:"variable-minlength",children:[],level:3},{value:"variable maxLength",id:"variable-maxlength",children:[],level:3},{value:"variable required",id:"variable-required",children:[],level:3},{value:"variable value",id:"variable-value",children:[],level:3},{value:"variable placeholder",id:"variable-placeholder",children:[],level:3}],level:2}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Inherits from ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp"},"SleepyDiscord::ComponentTemp< TextInputs >"),", ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"),", ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,l.kt)("h2",{id:"inherited-members"},"inherited members"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp"},"SleepyDiscord::ComponentTemp< TextInputs >"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-componenttemp"},"ComponentTemp")),"()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-~componenttemp"},"~ComponentTemp")),"() =default")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-operator-jsonvalue"},"operator json::Value")),"()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-operator-rawcomponent"},"operator RawComponent")),"()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JSONStructStart"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_component_temp#function-stdmake_tuple"},"std::make_tuple")),"(json::pair< ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper"},"json::EnumTypeHelper"),' > &::, "", ::REQUIRIED_FIELD )')))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Types inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"using ComponentType"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#using-type"},"Type")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-basecomponent"},"BaseComponent")),"()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-basecomponent"},"BaseComponent")),"(Type _type)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-~basecomponent"},"~BaseComponent")),"() =default")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"const ComponentType"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#function-gettype"},"getType")),"() const")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Protected Attributes inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component"},"SleepyDiscord::BaseComponent"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Type"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_base_component#variable-type"},"type")))))),(0,l.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,l.kt)("h3",{id:"using-style"},"using Style"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::TextInputs::Style =  TextInputStyle;\n")),(0,l.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,l.kt)("h3",{id:"function-textinputs"},"function TextInputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"TextInputs() =default\n")),(0,l.kt)("h3",{id:"function-textinputs-1"},"function ~TextInputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"~TextInputs() =default\n")),(0,l.kt)("h3",{id:"function-textinputs-2"},"function TextInputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"TextInputs(\n    const json::Value & json\n)\n")),(0,l.kt)("h3",{id:"function-textinputs-3"},"function TextInputs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"inline TextInputs(\n    const nonstd::string_view & json\n)\n")),(0,l.kt)("h3",{id:"function-stdtuple_cat"},"function std::tuple_cat"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::tuple_cat(\n    ComponentTemp< TextInputs >::JSONStruct ,\n    std::make_tuple(json::pair(&TextInputs::customID, "custom_id", json::REQUIRIED_FIELD), json::pair< json::EnumTypeHelper >(&TextInputs::style, "style", json::OPTIONAL_FIELD), json::pair(&TextInputs::label, "label", json::OPTIONAL_FIELD), json::pair< -1 >(&TextInputs::minLength, "min_length", json::OPTIONAL_FIELD), json::pair< -1 >(&TextInputs::maxLength, "max_length", json::OPTIONAL_FIELD), json::pair(&TextInputs::required, "required", json::OPTIONAL_FIELD), json::pair(&TextInputs::value, "value", json::OPTIONAL_FIELD), json::pair(&TextInputs::placeholder, "placeholder", json::OPTIONAL_FIELD)) \n)\n')),(0,l.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,l.kt)("h3",{id:"variable-componenttype"},"variable componentType"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"static const ComponentType componentType = ComponentType::TextInputs;\n")),(0,l.kt)("h3",{id:"variable-customid"},"variable customID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string customID;\n")),(0,l.kt)("h3",{id:"variable-style"},"variable style"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"TextInputStyle style;\n")),(0,l.kt)("h3",{id:"variable-label"},"variable label"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string label;\n")),(0,l.kt)("h3",{id:"variable-minlength"},"variable minLength"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int minLength = -1;\n")),(0,l.kt)("h3",{id:"variable-maxlength"},"variable maxLength"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int maxLength = -1;\n")),(0,l.kt)("h3",{id:"variable-required"},"variable required"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool required = false;\n")),(0,l.kt)("h3",{id:"variable-value"},"variable value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string value;\n")),(0,l.kt)("h3",{id:"variable-placeholder"},"variable placeholder"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string placeholder;\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);