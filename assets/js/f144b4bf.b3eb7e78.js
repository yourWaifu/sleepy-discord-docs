"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[7135],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(n),y=a,f=d["".concat(s,".").concat(y)]||d[y]||u[y]||i;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7217:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),c=["components"],o={title:"SleepyDiscord::Interaction::Response"},s=void 0,l={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",id:"reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",title:"SleepyDiscord::Interaction::Response",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_1_1_response",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::Interaction::Response"},sidebar:"Reference",previous:{title:"SleepyDiscord::Interaction",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction"},next:{title:"SleepyDiscord::InteractionCallback::Autocomplete",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_1_1_autocomplete"}},p=[{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Type",id:"using-type",children:[],level:3},{value:"using DataType",id:"using-datatype",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Response",id:"function-response",children:[],level:3},{value:"function Response",id:"function-response-1",children:[],level:3},{value:"function Response",id:"function-response-2",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable type",id:"variable-type",children:[],level:3},{value:"variable data",id:"variable-data",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,i.kt)("p",null,"Inherits from ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,i.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"template <InteractionCallbackType _type =InteractionCallbackType::ChannelMessageWithSource>\nstruct SleepyDiscord::Interaction::Response;\n")),(0,i.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,i.kt)("h3",{id:"using-type"},"using Type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::Interaction::Response< _type >::Type =  CallbackType;\n")),(0,i.kt)("h3",{id:"using-datatype"},"using DataType"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::Interaction::Response< _type >::DataType =  typename InteractionCallbackTypeHelper<_type>::Type;\n")),(0,i.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,i.kt)("h3",{id:"function-response"},"function Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"Response() =default\n")),(0,i.kt)("h3",{id:"function-response-1"},"function Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Response(\n    json::Value & json\n)\n")),(0,i.kt)("h3",{id:"function-response-2"},"function Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Response(\n    const nonstd::string_view & json\n)\n")),(0,i.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair< json::EnumTypeHelper > &::< >::, "", ::REQUIRIED_FIELD ,\n    json::pair &::< >::, "", ::OPTIONAL_FIELD \n)\n')),(0,i.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,i.kt)("h3",{id:"variable-type"},"variable type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"Type type = _type;\n")),(0,i.kt)("h3",{id:"variable-data"},"variable data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"DataType data;\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);