"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[91],{3211:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"setup-standard","title":"Standard Configuration","description":"What You Need","source":"@site/docs/setup-standard.md","sourceDirName":".","slug":"/setup-standard","permalink":"/sleepy-discord/docs/setup-standard","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1758418732000,"frontMatter":{"title":"Standard Configuration","sidebar_label":"Standard Configuration","next":"setup-standard-vs-cmake"},"sidebar":"Docs","previous":{"title":"Starting","permalink":"/sleepy-discord/docs/"},"next":{"title":"CMake Graphical User Interface","permalink":"/sleepy-discord/docs/setup-standard-gui"}}');var l=s(4848),r=s(8453);const a={title:"Standard Configuration",sidebar_label:"Standard Configuration",next:"setup-standard-vs-cmake"},t=void 0,d={},o=[{value:"What You Need",id:"what-you-need",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Creating a CMakeList file",id:"creating-a-cmakelist-file",level:3},{value:"Writing a CMakeList file",id:"writing-a-cmakelist-file",level:3},{value:"Linking Sleepy Discord",id:"linking-sleepy-discord",level:2},{value:"Example",id:"example",level:2},{value:"Simple Example",id:"simple-example",level:3},{value:"Another Example",id:"another-example",level:3},{value:"Next Step",id:"next-step",level:2},{value:"Recommendation for Windows Users",id:"recommendation-for-windows-users",level:3},{value:"Any OS",id:"any-os",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"what-you-need",children:"What You Need"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://cmake.org/download/",children:"CMake"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Can be installed using Visual Studio installer, Cmake's website, or your package manager"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["OpenSSL library","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["For Windows users, you can install it using ",(0,l.jsx)(n.a,{href:"https://github.com/microsoft/vcpkg#quick-start-windows",children:"VCPKG"})," and the command ",(0,l.jsx)(n.code,{children:".\\vcpkg\\vcpkg install openssl:x64-windows"})," or ",(0,l.jsx)(n.code,{children:".\\vcpkg\\vcpkg install openssl:x86-windows"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"For Linux users, use your package manager and install libssl-dev or openssl-devel. The name depends on your package manager."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["A C++ Compiler","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://github.com/yourWaifu/sleepy-discord#build-status",children:"Go here for build status"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"For Visual Studio users, Visual Studio has a c++ compiler."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["libCurl (Required for Linux)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["install a package like ",(0,l.jsx)(n.code,{children:"libcurl4-openssl-dev"})," on your package manager"]}),"\n",(0,l.jsx)(n.li,{children:"on Windows, the cmake script should compile libCurl for you. So libCurl should be set up for you when you run cmake."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Windows SDK (Required for Windows)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If you are using Visual Studio, it's recommend you download this from the Visual Studio installer."}),"\n",(0,l.jsx)(n.li,{children:"The library doesn't really use it but you can run into issues without it."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"instructions",children:"Instructions"}),"\n",(0,l.jsx)(n.h3,{id:"creating-a-cmakelist-file",children:"Creating a CMakeList file"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"my-project\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 source.cpp\n\u2514\u2500\u2500 CMakeLists.txt\n"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"In case you haven't already created a CMakeLists.txt file for your project. please do so on the root directory or folder of your project."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"writing-a-cmakelist-file",children:"Writing a CMakeList file"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cmake",children:"#CMakeLists.txt\ncmake_minimum_required (VERSION 3.6)\nproject(example)\n\nadd_executable(replace-me source.cpp)\n"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Replace replace-me with the name of your project or executable."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"linking-sleepy-discord",children:"Linking Sleepy Discord"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cmake",children:"#Add these two lines\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(replace-me sleepy-discord)\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Add these two lines to the CMakeList.txt so that Sleepy Discord will be linked."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["If you are following the examples, you can skip this step. Otherwise, replace ",(0,l.jsx)(n.code,{children:"deps/sleepy-discord"})," with the ",(0,l.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Path_(computing)#Absolute_and_relative_paths",children:"relative path"})," to the sleepy-discord directory folder relative to the ",(0,l.jsx)(n.code,{children:"CmakeLists.txt"})," file. Windows users, remember to use ",(0,l.jsx)(n.code,{children:"/"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["In ",(0,l.jsx)(n.code,{children:"add_subdirectory"}),", using a directory that isn't a subdirectory to the current folder will require you to add a path to the binary folder for sleepy-discord as the 2nd parameter. It is recommended that you don't do this."]})}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.h3,{id:"simple-example",children:"Simple Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"my-project\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 source.cpp\n\u2514\u2500\u2500 CMakeLists.txt\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cmake",children:"cmake_minimum_required (VERSION 3.6)\nproject(example)\n\nadd_executable(replace-me source.cpp)\n\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(replace-me sleepy-discord)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"another-example",children:"Another Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"light-blob-bot\n\u251c\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 ui\n\u2502   \u2514\u2500\u2500 switch.cpp\n\u251c\u2500\u2500 material\n\u2502   \u251c\u2500\u2500 matal.cpp\n\u2502   \u251c\u2500\u2500 plastic.cpp\n\u2502   \u2514\u2500\u2500 glass.cpp\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 light.cpp\n\u251c\u2500\u2500 blob.cpp\n\u2514\u2500\u2500 main.cpp\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cmake",children:"cmake_minimum_required (VERSION 3.6)\nproject(light-blob)\n\nadd_executable(light-blob light.cpp blob.cpp\nmain.cpp ui/switch.cpp\nmaterial/metal.cpp material/plastic.cpp material/glass.cpp)\n\nadd_subdirectory(sleepy-discord)\ntarget_link_libraries(light-blob sleepy-discord)\n"})}),"\n",(0,l.jsx)(n.h2,{id:"next-step",children:"Next Step"}),"\n",(0,l.jsx)(n.p,{children:"Choose your CMake Interface."}),"\n",(0,l.jsx)(n.h3,{id:"recommendation-for-windows-users",children:"Recommendation for Windows Users"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"./setup-standard-vs-cmake",children:"Visual Studio CMake"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"any-os",children:"Any OS"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"./setup-standard-gui",children:"CMake App (GUI)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"./setup-standard-cli",children:"CMake Command (CLI)"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>t});var i=s(6540);const l={},r=i.createContext(l);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);