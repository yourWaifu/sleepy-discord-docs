"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5561],{3905:function(e,n,r){r.d(n,{Zo:function(){return a},kt:function(){return m}});var t=r(7294);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},a=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,a=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=s,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?t.createElement(f,c(c({ref:n},a),{},{components:r})):t.createElement(f,c({ref:n},a))}));function m(e,n){var r=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=r.length,c=new Array(o);c[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1450:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return a},default:function(){return d}});var t=r(3117),s=r(102),o=(r(7294),r(3905)),c=["components"],i={title:"SleepyDiscord::GenericCompression"},l=void 0,p={unversionedId:"reference/Classes/class_sleepy_discord_1_1_generic_compression",id:"reference/Classes/class_sleepy_discord_1_1_generic_compression",title:"SleepyDiscord::GenericCompression",description:"Inherited by SleepyDiscord::ZLibCompression",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_generic_compression.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_generic_compression",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_compression",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::GenericCompression"},sidebar:"Reference",previous:{title:"SleepyDiscord::DiscordObject",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},next:{title:"SleepyDiscord::GenericMessageReceiver",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_message_receiver"}},a=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ~GenericCompression",id:"function-genericcompression",children:[],level:3},{value:"function uncompress",id:"function-uncompress",children:[],level:3},{value:"function getOutput",id:"function-getoutput",children:[],level:3},{value:"function resetStream",id:"function-resetstream",children:[],level:3},{value:"function streamEnded",id:"function-streamended",children:[],level:3}],level:2}],u={toc:a};function d(e){var n=e.components,r=(0,s.Z)(e,c);return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Inherited by ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_z_lib_compression"},"SleepyDiscord::ZLibCompression")),(0,o.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,o.kt)("h3",{id:"function-genericcompression"},"function ~GenericCompression"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual ~GenericCompression() =default\n")),(0,o.kt)("h3",{id:"function-uncompress"},"function uncompress"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void uncompress(\n    const std::string & compressed\n) =0\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_z_lib_compression#function-uncompress"},"SleepyDiscord::ZLibCompression::uncompress")),(0,o.kt)("h3",{id:"function-getoutput"},"function getOutput"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void getOutput(\n    std::string & uncompressedOut\n) =0\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_z_lib_compression#function-getoutput"},"SleepyDiscord::ZLibCompression::getOutput")),(0,o.kt)("h3",{id:"function-resetstream"},"function resetStream"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void resetStream() =0\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_z_lib_compression#function-resetstream"},"SleepyDiscord::ZLibCompression::resetStream")),(0,o.kt)("h3",{id:"function-streamended"},"function streamEnded"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual bool streamEnded() =0\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reimplemented by"),": ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_z_lib_compression#function-streamended"},"SleepyDiscord::ZLibCompression::streamEnded")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);