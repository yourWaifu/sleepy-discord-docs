"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[8570],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return _}});var r=n(7294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var o=r.createContext({}),a=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=a(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,i=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=a(n),_=c,m=u["".concat(o,".").concat(_)]||u[_]||p[_]||i;return n?r.createElement(m,s(s({ref:t},d),{},{components:n})):r.createElement(m,s({ref:t},d))}));function _(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:c,s[1]=l;for(var a=2;a<i;a++)s[a]=n[a];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},606:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return a},toc:function(){return d},default:function(){return u}});var r=n(3117),c=n(102),i=(n(7294),n(3905)),s=["components"],l={title:"SleepyDiscord::CustomUDPClient"},o=void 0,a={unversionedId:"reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client",id:"reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client",title:"SleepyDiscord::CustomUDPClient",description:"Inherits from SleepyDiscord::GenericUDPClient",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_custom_u_d_p_client",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::CustomUDPClient"},sidebar:"Reference",previous:{title:"SleepyDiscord::CustomSession",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_custom_session"},next:{title:"SleepyDiscord::DiscordObject",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"}},d=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Protected Functions Documentation",id:"protected-functions-documentation",children:[{value:"function CustomUDPClient",id:"function-customudpclient",children:[],level:3},{value:"function connect",id:"function-connect",children:[],level:3},{value:"function send",id:"function-send",children:[],level:3},{value:"function receive",id:"function-receive",children:[],level:3}],level:2},{value:"Protected Attributes Documentation",id:"protected-attributes-documentation",children:[{value:"variable init",id:"variable-init",children:[],level:3}],level:2}],p={toc:d};function u(e){var t=e.components,n=(0,c.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Inherits from ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client"},"SleepyDiscord::GenericUDPClient")),(0,i.kt)("h2",{id:"inherited-members"},"inherited members"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Public Types inherited from ",(0,i.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client"},"SleepyDiscord::GenericUDPClient"))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"typedef std::function< void()>"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#typedef-sendhandler"},"SendHandler")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"typedef std::function< void(const std::vector< uint8_t > &)>"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#typedef-receivehandler"},"ReceiveHandler")))))),(0,i.kt)("h2",{id:"protected-functions-documentation"},"Protected Functions Documentation"),(0,i.kt)("h3",{id:"function-customudpclient"},"function CustomUDPClient"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline CustomUDPClient()\n")),(0,i.kt)("h3",{id:"function-connect"},"function connect"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual bool connect(\n    const std::string & to,\n    const uint16_t port\n) override\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#function-connect"},"SleepyDiscord::GenericUDPClient::connect")),(0,i.kt)("h3",{id:"function-send"},"function send"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void send(\n    const uint8_t * buffer,\n    size_t bufferLength,\n    SendHandler handler =[]() {}\n) override\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#function-send"},"SleepyDiscord::GenericUDPClient::send")),(0,i.kt)("h3",{id:"function-receive"},"function receive"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline virtual void receive(\n    ReceiveHandler handler\n) override\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client#function-receive"},"SleepyDiscord::GenericUDPClient::receive")),(0,i.kt)("h2",{id:"protected-attributes-documentation"},"Protected Attributes Documentation"),(0,i.kt)("h3",{id:"variable-init"},"variable init"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"static CustomInitUDPClient init;\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);