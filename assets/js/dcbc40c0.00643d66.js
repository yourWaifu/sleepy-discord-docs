"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[7423],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=i(n),m=s,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var i=2;i<a;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8305:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return p},default:function(){return u}});var r=n(3117),s=n(102),a=(n(7294),n(3905)),o=["components"],l={title:"SleepyDiscord::BooleanResponse"},c=void 0,i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_boolean_response",id:"reference/Classes/struct_sleepy_discord_1_1_boolean_response",title:"SleepyDiscord::BooleanResponse",description:"Inherits from SleepyDiscord::Response",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_boolean_response.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_boolean_response",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_boolean_response",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::BooleanResponse"},sidebar:"Reference",previous:{title:"SleepyDiscord::BasicAudioSourceForContainers",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_basic_audio_source_for_containers"},next:{title:"SleepyDiscord::Button",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_button"}},p=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Callback",id:"using-callback",children:[],level:3},{value:"using Type",id:"using-type",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function BooleanResponse",id:"function-booleanresponse",children:[],level:3},{value:"function operator Type",id:"function-operator-type",children:[],level:3},{value:"function operator*",id:"function-operator",children:[],level:3},{value:"function cast",id:"function-cast",children:[],level:3},{value:"function StandardResponse",id:"function-standardresponse",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable wasSuccessful",id:"variable-wassuccessful",children:[],level:3}],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,s.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Inherits from ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_standard_response"},"SleepyDiscord::StandardResponse"),", ",(0,a.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"SleepyDiscord::Response")),(0,a.kt)("h2",{id:"inherited-members"},"inherited members"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"SleepyDiscord::Response"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"bool"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#function-error"},"error")),"() const")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#function-response"},"Response")),"() =default")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#function-response"},"Response")),"(int32_t _statusCode)")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response"},"SleepyDiscord::Response"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"std::string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-text"},"text")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"int32_t"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-statuscode"},"statusCode")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"std::map< std::string, std::string, ",(0,a.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare"},"caseInsensitiveCompare")," >"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-header"},"header")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"time_t"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},(0,a.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_response#variable-birth"},"birth")))))),(0,a.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,a.kt)("h3",{id:"using-callback"},"using Callback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::BooleanResponse::Callback =  std::function<bool(const Response& response)>;\n")),(0,a.kt)("h3",{id:"using-type"},"using Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::BooleanResponse::Type =  bool;\n")),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-booleanresponse"},"function BooleanResponse"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline BooleanResponse(\n    const Response & response,\n    const Callback callback\n)\n")),(0,a.kt)("h3",{id:"function-operator-type"},"function operator Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline operator Type() const\n")),(0,a.kt)("h3",{id:"function-operator"},"function operator*"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Type operator*() const\n")),(0,a.kt)("h3",{id:"function-cast"},"function cast"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Type cast()\n")),(0,a.kt)("h3",{id:"function-standardresponse"},"function StandardResponse"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline explicit StandardResponse(\n    const Response & response\n)\n")),(0,a.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,a.kt)("h3",{id:"variable-wassuccessful"},"variable wasSuccessful"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"const Callback wasSuccessful = [](const [Response](/reference/Classes/struct_sleepy_discord_1_1_response.md)& ) { return true; };\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);