"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[3625],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=d(t),f=i,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||o;return t?r.createElement(m,c(c({ref:n},s),{},{components:t})):r.createElement(m,c({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,c=new Array(o);c[0]=u;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,c[1]=a;for(var d=2;d<o;d++)c[d]=t[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7828:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var r=t(3117),i=t(102),o=(t(7294),t(3905)),c=["components"],a={title:"SleepyDiscord::IdentifiableDiscordObject"},l=void 0,d={unversionedId:"reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object",id:"reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object",title:"SleepyDiscord::IdentifiableDiscordObject",description:"More...",source:"@site/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::IdentifiableDiscordObject"},sidebar:"Reference",previous:{title:"SleepyDiscord::GenericUDPClient",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_generic_u_d_p_client"},next:{title:"SleepyDiscord::RateLimiter::HandleAwaitAfterRequest",permalink:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_rate_limiter_1_1_handle_await_after_request"}},s=[{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Parent",id:"using-parent",children:[],level:3},{value:"using Identifier",id:"using-identifier",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function IdentifiableDiscordObject",id:"function-identifiablediscordobject",children:[],level:3},{value:"function IdentifiableDiscordObject",id:"function-identifiablediscordobject-1",children:[],level:3},{value:"function operator Snowflake&lt; Derived &gt; &amp;",id:"function-operator-snowflake-derived--",children:[],level:3},{value:"function empty",id:"function-empty",children:[],level:3},{value:"function merge",id:"function-merge",children:[],level:3},{value:"function operator==",id:"function-operator",children:[],level:3},{value:"function operator!=",id:"function-operator-1",children:[],level:3},{value:"function operator==",id:"function-operator-2",children:[],level:3},{value:"function operator!=",id:"function-operator-3",children:[],level:3},{value:"function operator==",id:"function-operator-4",children:[],level:3},{value:"function operator!=",id:"function-operator-5",children:[],level:3},{value:"function getTimestamp",id:"function-gettimestamp",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable ID",id:"variable-id",children:[],level:3}],level:2}],p={toc:s};function u(e){var n=e.components,t=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,o.kt)("p",null,"Inherits from ",(0,o.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,o.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Derived >\nclass SleepyDiscord::IdentifiableDiscordObject;\n")),(0,o.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,o.kt)("h3",{id:"using-parent"},"using Parent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::IdentifiableDiscordObject< Derived >::Parent =  IdentifiableDiscordObject<Derived>;\n")),(0,o.kt)("h3",{id:"using-identifier"},"using Identifier"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::IdentifiableDiscordObject< Derived >::Identifier =  Snowflake<Derived>;\n")),(0,o.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,o.kt)("h3",{id:"function-identifiablediscordobject"},"function IdentifiableDiscordObject"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"IdentifiableDiscordObject() =default\n")),(0,o.kt)("h3",{id:"function-identifiablediscordobject-1"},"function IdentifiableDiscordObject"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline IdentifiableDiscordObject(\n    Snowflake< Derived > id\n)\n")),(0,o.kt)("h3",{id:"function-operator-snowflake-derived--"},"function operator Snowflake< Derived > &"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline operator Snowflake< Derived > &()\n")),(0,o.kt)("h3",{id:"function-empty"},"function empty"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool empty() const\n")),(0,o.kt)("h3",{id:"function-merge"},"function merge"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline void merge(\n    Derived & changes\n)\n")),(0,o.kt)("h3",{id:"function-operator"},"function operator=="),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class DiscordObject >\ninline bool operator==(\n    const Snowflake< DiscordObject > & right\n) const\n")),(0,o.kt)("h3",{id:"function-operator-1"},"function operator!="),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class DiscordObject >\ninline bool operator!=(\n    const Snowflake< DiscordObject > & right\n) const\n")),(0,o.kt)("h3",{id:"function-operator-2"},"function operator=="),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator==(\n    const Snowflake< Derived > & right\n) const\n")),(0,o.kt)("h3",{id:"function-operator-3"},"function operator!="),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator!=(\n    const Snowflake< Derived > & right\n) const\n")),(0,o.kt)("h3",{id:"function-operator-4"},"function operator=="),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator==(\n    const IdentifiableDiscordObject< Derived > & right\n) const\n")),(0,o.kt)("h3",{id:"function-operator-5"},"function operator!="),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator!=(\n    const IdentifiableDiscordObject< Derived > & right\n) const\n")),(0,o.kt)("h3",{id:"function-gettimestamp"},"function getTimestamp"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const Time getTimestamp()\n")),(0,o.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,o.kt)("h3",{id:"variable-id"},"variable ID"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Derived > ID;\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);