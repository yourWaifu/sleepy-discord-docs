"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[2645],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),y=l(n),d=o,m=y["".concat(i,".").concat(d)]||y[d]||u[d]||s;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=y;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4678:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return y}});var r=n(3117),o=n(102),s=(n(7294),n(3905)),a=["components"],c={title:"sleepy_discord/gateway.cpp"},i=void 0,l={unversionedId:"reference/Files/gateway_8cpp",id:"reference/Files/gateway_8cpp",title:"sleepy_discord/gateway.cpp",description:"Namespaces",source:"@site/docs/reference/Files/gateway_8cpp.md",sourceDirName:"reference/Files",slug:"/reference/Files/gateway_8cpp",permalink:"/sleepy-discord/docs/reference/Files/gateway_8cpp",tags:[],version:"current",frontMatter:{title:"sleepy_discord/gateway.cpp"},sidebar:"Reference",previous:{title:"include/sleepy_discord/error.h",permalink:"/sleepy-discord/docs/reference/Files/error_8h"},next:{title:"include/sleepy_discord/gateway.h",permalink:"/sleepy-discord/docs/reference/Files/gateway_8h"}},p=[{value:"Namespaces",id:"namespaces",children:[],level:2},{value:"Source code",id:"source-code",children:[],level:2}],u={toc:p};function y(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"namespaces"},"Namespaces"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),(0,s.kt)("h2",{id:"source-code"},"Source code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "gateway.h"\n\nnamespace SleepyDiscord {\n    SessionStartLimit::SessionStartLimit(const json::Value& json) :\n        SessionStartLimit(json::fromJSON<SessionStartLimit>(json)) {\n    }\n    Gateway::Gateway(const json::Value& json) :\n        Gateway(json::fromJSON<Gateway>(json)) {\n    }\n    Ready::Ready(const json::Value & json) :\n        Ready(json::fromJSON<Ready>(json)) {\n    }\n    ActivityTimestamp::ActivityTimestamp(const json::Value & json) :\n        ActivityTimestamp(json::fromJSON<ActivityTimestamp>(json)) {\n    }\n    ActivityParty::ActivityParty(const json::Value & json) :\n        ActivityParty(json::fromJSON<ActivityParty>(json)) {\n    }\n    ActivityAssets::ActivityAssets(const json::Value & json) :\n        ActivityAssets(json::fromJSON<ActivityAssets>(json)) {\n    }\n    ActivitySecrets::ActivitySecrets(const json::Value & json) :\n        ActivitySecrets(json::fromJSON<ActivitySecrets>(json)) {\n    }\n    Activity::Activity(const json::Value & json) :\n        Activity(json::fromJSON<Activity>(json)) {\n    }\n    PresenceUpdate::PresenceUpdate(const json::Value & json) :\n        PresenceUpdate(json::fromJSON<PresenceUpdate>(json)) {\n    }\n    ServerMembersChunk::ServerMembersChunk(const json::Value & json) :\n        ServerMembersChunk(json::fromJSON<ServerMembersChunk>(json)) {\n    }\n}\n')),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}y.isMDXComponent=!0}}]);