"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4369],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||c;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<c;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3411:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var r=n(3117),a=n(102),c=(n(7294),n(3905)),o=["components"],s={title:"include/sleepy_discord/attachment.h"},i=void 0,l={unversionedId:"reference/Files/attachment_8h",id:"reference/Files/attachment_8h",title:"include/sleepy_discord/attachment.h",description:"Namespaces",source:"@site/docs/reference/Files/attachment_8h.md",sourceDirName:"reference/Files",slug:"/reference/Files/attachment_8h",permalink:"/sleepy-discord/docs/reference/Files/attachment_8h",tags:[],version:"current",frontMatter:{title:"include/sleepy_discord/attachment.h"},sidebar:"Reference",previous:{title:"sleepy_discord/attachment.cpp",permalink:"/sleepy-discord/docs/reference/Files/attachment_8cpp"},next:{title:"include/sleepy_discord/audit_log.h",permalink:"/sleepy-discord/docs/reference/Files/audit__log_8h"}},p=[{value:"Namespaces",id:"namespaces",children:[],level:2},{value:"Classes",id:"classes",children:[],level:2},{value:"Source code",id:"source-code",children:[],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"namespaces"},"Namespaces"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),(0,c.kt)("h2",{id:"classes"},"Classes"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null}),(0,c.kt)("th",{parentName:"tr",align:null},"Name"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"struct"),(0,c.kt)("td",{parentName:"tr",align:null},(0,c.kt)("strong",{parentName:"td"},(0,c.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_attachment"},"SleepyDiscord::Attachment")))))),(0,c.kt)("h2",{id:"source-code"},"Source code"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#include <string>\n#include "snowflake.h"\n#include "discord_object_interface.h"\n\nnamespace SleepyDiscord {\n    struct Attachment : public IdentifiableDiscordObject<Attachment> {\n    public:\n        Attachment() = default;\n        //~Attachment();\n        //Attachment(const std::string * rawJSON);\n        Attachment(const json::Value& json);\n        Attachment(const nonstd::string_view& json) :\n            Attachment(json::fromJSON<Attachment>(json)) {\n        }\n        //Attachment(const json::Values values);\n        std::string filename;\n        uint64_t size = 0;\n        std::string url;\n        std::string proxy_url;\n        uint64_t height = 0;\n        uint64_t width = 0;\n        //const static std::initializer_list<const char*const> fields;\n        JSONStructStart\n            std::make_tuple(\n                json::pair(&Attachment::ID       , "id"       , json::REQUIRIED_FIELD),\n                json::pair(&Attachment::filename , "filename" , json::REQUIRIED_FIELD),\n                json::pair(&Attachment::size     , "size"     , json::REQUIRIED_FIELD),\n                json::pair(&Attachment::url      , "url"      , json::REQUIRIED_FIELD),\n                json::pair(&Attachment::proxy_url, "proxy_url", json::REQUIRIED_FIELD),\n                json::pair(&Attachment::height   , "height"   , json::NULLABLE_FIELD ),\n                json::pair(&Attachment::width    , "width"    , json::NULLABLE_FIELD )\n            );\n        JSONStructEnd\n    };\n}\n')),(0,c.kt)("hr",null),(0,c.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);