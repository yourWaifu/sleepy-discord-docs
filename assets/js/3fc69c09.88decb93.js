"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[9889],{3905:function(e,n,t){t.d(n,{Zo:function(){return _},kt:function(){return E}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},_=function(e){var n=d(e.components);return r.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,_=s(e,["components","mdxType","originalType","parentName"]),c=d(t),E=a,u=c["".concat(o,".").concat(E)]||c[E]||p[E]||l;return t?r.createElement(u,i(i({ref:n},_),{},{components:t})):r.createElement(u,i({ref:n},_))}));function E(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=c;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<l;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1146:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return _},default:function(){return c}});var r=t(3117),a=t(102),l=(t(7294),t(3905)),i=["components"],s={title:"include/sleepy_discord/version_helper.h"},o=void 0,d={unversionedId:"reference/Files/version__helper_8h",id:"reference/Files/version__helper_8h",title:"include/sleepy_discord/version_helper.h",description:"Namespaces",source:"@site/docs/reference/Files/version__helper_8h.md",sourceDirName:"reference/Files",slug:"/reference/Files/version__helper_8h",permalink:"/sleepy-discord/docs/reference/Files/version__helper_8h",tags:[],version:"current",frontMatter:{title:"include/sleepy_discord/version_helper.h"},sidebar:"Reference",previous:{title:"sleepy_discord/version.cpp",permalink:"/sleepy-discord/docs/reference/Files/version_8cpp"},next:{title:"sleepy_discord/voice.cpp",permalink:"/sleepy-discord/docs/reference/Files/voice_8cpp"}},_=[{value:"Namespaces",id:"namespaces",children:[],level:2},{value:"Functions",id:"functions",children:[],level:2},{value:"Attributes",id:"attributes",children:[],level:2},{value:"Defines",id:"defines",children:[],level:2},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"function isFeatureAvaiable",id:"function-isfeatureavaiable",children:[],level:3}],level:2},{value:"Attributes Documentation",id:"attributes-documentation",children:[{value:"variable versionNum",id:"variable-versionnum",children:[],level:3},{value:"variable revisionNum",id:"variable-revisionnum",children:[],level:3},{value:"variable description",id:"variable-description",children:[],level:3},{value:"variable branch",id:"variable-branch",children:[],level:3},{value:"variable revision",id:"variable-revision",children:[],level:3},{value:"variable version",id:"variable-version",children:[],level:3},{value:"variable isMaster",id:"variable-ismaster",children:[],level:3},{value:"variable userAgent",id:"variable-useragent",children:[],level:3},{value:"variable availableFeatures",id:"variable-availablefeatures",children:[],level:3}],level:2},{value:"Macro Documentation",id:"macro-documentation",children:[{value:"define SLEEPY_STR_HELPER",id:"define-sleepy_str_helper",children:[],level:3},{value:"define SLEEPY_STR_HELPER2",id:"define-sleepy_str_helper2",children:[],level:3},{value:"define SLEEPY_STR_HELPER3",id:"define-sleepy_str_helper3",children:[],level:3},{value:"define SLEEPY_DISCORD_VERSION_STR",id:"define-sleepy_discord_version_str",children:[],level:3},{value:"define SLEEPY_DISCORD_VERSION_NUM",id:"define-sleepy_discord_version_num",children:[],level:3},{value:"define SLEEPY_DISCORD_VERSION",id:"define-sleepy_discord_version",children:[],level:3},{value:"define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST",id:"define-sleepy_feature_available_feature_list",children:[],level:3},{value:"define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES",id:"define-sleepy_feature_list_of_available_features",children:[],level:3},{value:"define SLEEPY_FEATURE_V8_API",id:"define-sleepy_feature_v8_api",children:[],level:3},{value:"define SLEEPY_FEATURE_V10_API",id:"define-sleepy_feature_v10_api",children:[],level:3}],level:2},{value:"Source code",id:"source-code",children:[],level:2}],p={toc:_};function c(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"namespaces"},"Namespaces"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#function-isfeatureavaiable"},"isFeatureAvaiable")),"(std::string & featureName)")))),(0,l.kt)("h2",{id:"attributes"},"Attributes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr unsigned int"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-versionnum"},"versionNum")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr unsigned int"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-revisionnum"},"revisionNum")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr const char *"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-description"},"description")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr const char *"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-branch"},"branch")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr const char *"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-revision"},"revision")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr const char *"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-version"},"version")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-ismaster"},"isMaster")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"constexpr const char *"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-useragent"},"userAgent")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"std::unordered_set< std::string >"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#variable-availablefeatures"},"availableFeatures")))))),(0,l.kt)("h2",{id:"defines"},"Defines"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_str_helper"},"SLEEPY_STR_HELPER")),"(x)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_str_helper2"},"SLEEPY_STR_HELPER2")),"(x)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_str_helper3"},"SLEEPY_STR_HELPER3")),"(x, y)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_discord_version_str"},"SLEEPY_DISCORD_VERSION_STR")),"(x)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_discord_version_num"},"SLEEPY_DISCORD_VERSION_NUM")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_discord_version"},"SLEEPY_DISCORD_VERSION")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_feature_available_feature_list"},"SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_feature_list_of_available_features"},"SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_feature_v8_api"},"SLEEPY_FEATURE_V8_API")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Files/version__helper_8h#define-sleepy_feature_v10_api"},"SLEEPY_FEATURE_V10_API")))))),(0,l.kt)("h2",{id:"functions-documentation"},"Functions Documentation"),(0,l.kt)("h3",{id:"function-isfeatureavaiable"},"function isFeatureAvaiable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool isFeatureAvaiable(\n    std::string & featureName\n)\n")),(0,l.kt)("h2",{id:"attributes-documentation"},"Attributes Documentation"),(0,l.kt)("h3",{id:"variable-versionnum"},"variable versionNum"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr unsigned int versionNum = SLEEPY_DISCORD_VERSION_NUM;\n")),(0,l.kt)("h3",{id:"variable-revisionnum"},"variable revisionNum"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr unsigned int revisionNum = SLEEPY_DISCORD_VERSION_BUILD;\n")),(0,l.kt)("h3",{id:"variable-description"},"variable description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr const char * description = SLEEPY_DISCORD_VERSION_DESCRIPTION;\n")),(0,l.kt)("h3",{id:"variable-branch"},"variable branch"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr const char * branch = SLEEPY_DISCORD_VERSION_BRANCH;\n")),(0,l.kt)("h3",{id:"variable-revision"},"variable revision"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr const char * revision = SLEEPY_DISCORD_VERSION_HASH;\n")),(0,l.kt)("h3",{id:"variable-version"},"variable version"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr const char * version = SLEEPY_DISCORD_VERSION;\n")),(0,l.kt)("h3",{id:"variable-ismaster"},"variable isMaster"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"constexpr bool isMaster = SLEEPY_DISCORD_VERSION_IS_MASTER;\n")),(0,l.kt)("h3",{id:"variable-useragent"},"variable userAgent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'constexpr const char * userAgent = \n        "DiscordBot (https://github.com/yourWaifu/SleepyDiscord, " \n        SLEEPY_DISCORD_VERSION_STR(NUM) \n        ") " \n        SLEEPY_DISCORD_VERSION;\n')),(0,l.kt)("h3",{id:"variable-availablefeatures"},"variable availableFeatures"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'std::unordered_set< std::string > availableFeatures {\n        "Available Feature List",\n        "List of Available Features",\n        "V8 Discord API",\n        "V10 Discord API",\n    };\n')),(0,l.kt)("h2",{id:"macro-documentation"},"Macro Documentation"),(0,l.kt)("h3",{id:"define-sleepy_str_helper"},"define SLEEPY_STR_HELPER"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_STR_HELPER(\n    x\n)\n#x\n")),(0,l.kt)("h3",{id:"define-sleepy_str_helper2"},"define SLEEPY_STR_HELPER2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_STR_HELPER2(\n    x\n)\nSLEEPY_STR_HELPER(x)\n")),(0,l.kt)("h3",{id:"define-sleepy_str_helper3"},"define SLEEPY_STR_HELPER3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_STR_HELPER3(\n    x,\n    y\n)\nx##y\n")),(0,l.kt)("h3",{id:"define-sleepy_discord_version_str"},"define SLEEPY_DISCORD_VERSION_STR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_DISCORD_VERSION_STR(\n    x\n)\n    SLEEPY_STR_HELPER2(SLEEPY_STR_HELPER3(SLEEPY_DISCORD_VERSION_ , x))\n")),(0,l.kt)("h3",{id:"define-sleepy_discord_version_num"},"define SLEEPY_DISCORD_VERSION_NUM"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_DISCORD_VERSION_NUM 0\n")),(0,l.kt)("h3",{id:"define-sleepy_discord_version"},"define SLEEPY_DISCORD_VERSION"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#define SLEEPY_DISCORD_VERSION  SLEEPY_DISCORD_VERSION_STR(NUM) "-"\\\n    SLEEPY_DISCORD_VERSION_STR(BUILD) " "\\\n    SLEEPY_DISCORD_VERSION_BRANCH \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION_CONCAT \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION\n')),(0,l.kt)("h3",{id:"define-sleepy_feature_available_feature_list"},"define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST \n")),(0,l.kt)("h3",{id:"define-sleepy_feature_list_of_available_features"},"define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES \n")),(0,l.kt)("h3",{id:"define-sleepy_feature_v8_api"},"define SLEEPY_FEATURE_V8_API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_FEATURE_V8_API \n")),(0,l.kt)("h3",{id:"define-sleepy_feature_v10_api"},"define SLEEPY_FEATURE_V10_API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_FEATURE_V10_API \n")),(0,l.kt)("h2",{id:"source-code"},"Source code"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#ifndef NONEXISTANT_GIT_INFO\n    #include "version.h"\n#endif\n#include <unordered_set>\nnamespace SleepyDiscord {\n\n    //thanks https://stackoverflow.com/a/5459929\n    //convert preprocessor number into a string\n    //for example:\n    //#define SLEEPY_DISCORD_VERSION_BUILD 540\n    //SLEEPY_DISCORD_VERSION_STR(BUILD) gives us "540"\n#define SLEEPY_STR_HELPER(x) #x\n#define SLEEPY_STR_HELPER2(x) SLEEPY_STR_HELPER(x)\n#define SLEEPY_STR_HELPER3(x, y) x##y\n#define SLEEPY_DISCORD_VERSION_STR(x) \\\n    SLEEPY_STR_HELPER2(SLEEPY_STR_HELPER3(SLEEPY_DISCORD_VERSION_ , x))\n\n    //please only use defines when you want to check version via preprocessors\n    //uses xxxxyyyyyy format, which can be converted to xxxx.yyyyyy\n#define SLEEPY_DISCORD_VERSION_NUM 0\n\n#if defined NONEXISTANT_VERSION_H || defined NONEXISTANT_GIT_INFO\n    #define SLEEPY_DISCORD_VERSION_BUILD 0\n    #define SLEEPY_DISCORD_VERSION_BRANCH "unknown branch"\n    #define SLEEPY_DISCORD_VERSION_HASH "unknown revision"\n    #define SLEEPY_DISCORD_VERSION_IS_MASTER 0\n    //letter to use for concat description\n    #define SLEEPY_DISCORD_VERSION_DESCRIPTION_CONCAT " "\n    #define SLEEPY_DISCORD_VERSION_DESCRIPTION "unknown"\n#endif\n\n#define SLEEPY_DISCORD_VERSION \\\n    SLEEPY_DISCORD_VERSION_STR(NUM) "-"\\\n    SLEEPY_DISCORD_VERSION_STR(BUILD) " "\\\n    SLEEPY_DISCORD_VERSION_BRANCH \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION_CONCAT \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION\n\n    constexpr unsigned int versionNum = SLEEPY_DISCORD_VERSION_NUM;\n    constexpr unsigned int revisionNum = SLEEPY_DISCORD_VERSION_BUILD;\n    //for some reason const fixes a warning about convering a char* to a const char*\n    constexpr const char* description = SLEEPY_DISCORD_VERSION_DESCRIPTION;\n    constexpr const char* branch = SLEEPY_DISCORD_VERSION_BRANCH;\n    constexpr const char* revision = SLEEPY_DISCORD_VERSION_HASH;\n    constexpr const char* version = SLEEPY_DISCORD_VERSION;\n    constexpr bool isMaster = SLEEPY_DISCORD_VERSION_IS_MASTER;\n    constexpr const char* userAgent = \n        "DiscordBot (https://github.com/yourWaifu/SleepyDiscord, " \\\n        SLEEPY_DISCORD_VERSION_STR(NUM) \\\n        ") " \\\n        SLEEPY_DISCORD_VERSION \\\n    ;\n    \n    //Features\n    //Remember to list features in both preprocessers and unordered_set\n#define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST\n#define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES\n#define SLEEPY_FEATURE_V8_API\n#define SLEEPY_FEATURE_V10_API\n    std::unordered_set<std::string> availableFeatures{\n        "Available Feature List",\n        "List of Available Features",\n        "V8 Discord API",\n        "V10 Discord API",\n    };\n    inline bool isFeatureAvaiable(std::string& featureName) {\n        return availableFeatures.find(featureName) != availableFeatures.end();\n    }\n}\n')),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}c.isMDXComponent=!0}}]);