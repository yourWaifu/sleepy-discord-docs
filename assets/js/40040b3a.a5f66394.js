"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4408],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),i=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(n),m=a,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=u;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var i=2;i<l;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1177:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return o},metadata:function(){return i},toc:function(){return p},default:function(){return u}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),s=["components"],c={title:"SleepyDiscord::MessageParams"},o=void 0,i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_message_params",id:"reference/Classes/struct_sleepy_discord_1_1_message_params",title:"SleepyDiscord::MessageParams",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_message_params.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_message_params",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_params",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::MessageParams"},sidebar:"Reference",previous:{title:"SleepyDiscord::Message::Interaction",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_1_1_interaction"},next:{title:"SleepyDiscord::MessageReference",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_message_reference"}},p=[{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable channelID",id:"variable-channelid",children:[],level:3},{value:"variable content",id:"variable-content",children:[],level:3},{value:"variable embed",id:"variable-embed",children:[],level:3},{value:"variable allowedMentions",id:"variable-allowedmentions",children:[],level:3},{value:"variable components",id:"variable-components",children:[],level:3}],level:2}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,l.kt)("p",null,"Inherits from ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,l.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\nstruct SleepyDiscord::MessageParams;\n")),(0,l.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,l.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,l.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,l.kt)("h3",{id:"variable-channelid"},"variable channelID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > channelID;\n")),(0,l.kt)("h3",{id:"variable-content"},"variable content"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string content = {};\n")),(0,l.kt)("h3",{id:"variable-embed"},"variable embed"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Embed > embed;\n")),(0,l.kt)("h3",{id:"variable-allowedmentions"},"variable allowedMentions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"AllowedMentions allowedMentions;\n")),(0,l.kt)("h3",{id:"variable-components"},"variable components"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::shared_ptr< BaseComponent > > components;\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);