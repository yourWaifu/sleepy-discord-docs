"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[1123],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(k,l(l({ref:t},d),{},{components:a})):n.createElement(k,l({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2416:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var n=a(3117),r=a(102),i=(a(7294),a(3905)),l=["components"],o={title:"Standard Configuration",sidebar_label:"Standard Configuration",next:"setup-standard-vs-cmake"},s=void 0,p={unversionedId:"setup-standard",id:"setup-standard",title:"Standard Configuration",description:"What You Need",source:"@site/docs/setup-standard.md",sourceDirName:".",slug:"/setup-standard",permalink:"/sleepy-discord/docs/setup-standard",tags:[],version:"current",lastUpdatedAt:1698528022,formattedLastUpdatedAt:"10/28/2023",frontMatter:{title:"Standard Configuration",sidebar_label:"Standard Configuration",next:"setup-standard-vs-cmake"},sidebar:"Docs",previous:{title:"Starting",permalink:"/sleepy-discord/docs/"},next:{title:"CMake Graphical User Interface",permalink:"/sleepy-discord/docs/setup-standard-gui"}},d=[{value:"What You Need",id:"what-you-need",children:[],level:2},{value:"Instructions",id:"instructions",children:[{value:"Creating a CMakeList file",id:"creating-a-cmakelist-file",children:[],level:3},{value:"Writing a CMakeList file",id:"writing-a-cmakelist-file",children:[],level:3}],level:2},{value:"Linking Sleepy Discord",id:"linking-sleepy-discord",children:[],level:2},{value:"Example",id:"example",children:[{value:"Simple Example",id:"simple-example",children:[],level:3},{value:"Another Example",id:"another-example",children:[],level:3}],level:2},{value:"Next Step",id:"next-step",children:[{value:"Recommendation for Windows Users",id:"recommendation-for-windows-users",children:[],level:3},{value:"Any OS",id:"any-os",children:[],level:3}],level:2}],c={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"what-you-need"},"What You Need"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cmake.org/download/"},"CMake"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Can be installed using Visual Studio installer, Cmake's website, or your package manager"))),(0,i.kt)("li",{parentName:"ul"},"OpenSSL library",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For Windows users, you can install it using ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/microsoft/vcpkg#quick-start-windows"},"VCPKG")," and the command ",(0,i.kt)("inlineCode",{parentName:"li"},".\\vcpkg\\vcpkg install openssl:x64-windows")," or ",(0,i.kt)("inlineCode",{parentName:"li"},".\\vcpkg\\vcpkg install openssl:x86-windows"),"."),(0,i.kt)("li",{parentName:"ul"},"For Linux users, use your package manager and install libssl-dev or openssl-devel. The name depends on your package manager."))),(0,i.kt)("li",{parentName:"ul"},"A C++ Compiler",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/yourWaifu/sleepy-discord#build-status"},"Go here for build status"),"."),(0,i.kt)("li",{parentName:"ul"},"For Visual Studio users, Visual Studio has a c++ compiler."))),(0,i.kt)("li",{parentName:"ul"},"libCurl (Required for Linux)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"install a package like ",(0,i.kt)("inlineCode",{parentName:"li"},"libcurl4-openssl-dev")," on your package manager"),(0,i.kt)("li",{parentName:"ul"},"on Windows, the cmake script should compile libCurl for you. So libCurl should be set up for you when you run cmake."))),(0,i.kt)("li",{parentName:"ul"},"Windows SDK (Required for Windows)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If you are using Visual Studio, it's recommend you download this from the Visual Studio installer."),(0,i.kt)("li",{parentName:"ul"},"The library doesn't really use it but you can run into issues without it.")))),(0,i.kt)("h2",{id:"instructions"},"Instructions"),(0,i.kt)("h3",{id:"creating-a-cmakelist-file"},"Creating a CMakeList file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"my-project\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 source.cpp\n\u2514\u2500\u2500 CMakeLists.txt\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"In case you haven't already created a CMakeLists.txt file for your project. please do so on the root directory or folder of your project.")),(0,i.kt)("h3",{id:"writing-a-cmakelist-file"},"Writing a CMakeList file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cmake"},"#CMakeLists.txt\ncmake_minimum_required (VERSION 3.6)\nproject(example)\n\nadd_executable(replace-me source.cpp)\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Replace replace-me with the name of your project or executable.")),(0,i.kt)("h2",{id:"linking-sleepy-discord"},"Linking Sleepy Discord"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cmake"},"#Add these two lines\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(replace-me sleepy-discord)\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add these two lines to the CMakeList.txt so that Sleepy Discord will be linked.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If you are following the examples, you can skip this step. Otherwise, replace ",(0,i.kt)("inlineCode",{parentName:"p"},"deps/sleepy-discord")," with the ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Path_(computing)#Absolute_and_relative_paths"},"relative path")," to the sleepy-discord directory folder relative to the ",(0,i.kt)("inlineCode",{parentName:"p"},"CmakeLists.txt")," file. Windows users, remember to use ",(0,i.kt)("inlineCode",{parentName:"p"},"/"),"."))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In ",(0,i.kt)("inlineCode",{parentName:"p"},"add_subdirectory"),", using a directory that isn't a subdirectory to the current folder will require you to add a path to the binary folder for sleepy-discord as the 2nd parameter. It is recommended that you don't do this."))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("h3",{id:"simple-example"},"Simple Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"my-project\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 source.cpp\n\u2514\u2500\u2500 CMakeLists.txt\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required (VERSION 3.6)\nproject(example)\n\nadd_executable(replace-me source.cpp)\n\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(replace-me sleepy-discord)\n")),(0,i.kt)("h3",{id:"another-example"},"Another Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"light-blob-bot\n\u251c\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 ui\n\u2502   \u2514\u2500\u2500 switch.cpp\n\u251c\u2500\u2500 material\n\u2502   \u251c\u2500\u2500 matal.cpp\n\u2502   \u251c\u2500\u2500 plastic.cpp\n\u2502   \u2514\u2500\u2500 glass.cpp\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 light.cpp\n\u251c\u2500\u2500 blob.cpp\n\u2514\u2500\u2500 main.cpp\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required (VERSION 3.6)\nproject(light-blob)\n\nadd_executable(light-blob light.cpp blob.cpp\nmain.cpp ui/switch.cpp\nmaterial/metal.cpp material/plastic.cpp material/glass.cpp)\n\nadd_subdirectory(sleepy-discord)\ntarget_link_libraries(light-blob sleepy-discord)\n")),(0,i.kt)("h2",{id:"next-step"},"Next Step"),(0,i.kt)("p",null,"Choose your CMake Interface."),(0,i.kt)("h3",{id:"recommendation-for-windows-users"},"Recommendation for Windows Users"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./setup-standard-vs-cmake"},"Visual Studio CMake"))),(0,i.kt)("h3",{id:"any-os"},"Any OS"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./setup-standard-gui"},"CMake App (GUI)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./setup-standard-cli"},"CMake Command (CLI)"))))}u.isMDXComponent=!0}}]);