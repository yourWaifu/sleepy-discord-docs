"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[50],{757:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"connect-options","title":"Connection Options","description":"Changes how the realtime 2 way connection between the client and Discord\'s Gateway WebSockets Server behaves.","source":"@site/docs/connect-options.md","sourceDirName":".","slug":"/connect-options","permalink":"/sleepy-discord/docs/connect-options","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1758418732000,"frontMatter":{"title":"Connection Options"},"sidebar":"Docs","previous":{"title":"Snowflakes and IDs","permalink":"/sleepy-discord/docs/snowflake"},"next":{"title":"Slash Commands","permalink":"/sleepy-discord/docs/slash-commands"}}');var o=t(4848),r=t(8453);const i={title:"Connection Options"},c=void 0,a={},d=[{value:"Gateway Version",id:"gateway-version",level:2},{value:"Intents",id:"intents",level:2},{value:"Compression",id:"compression",level:2},{value:"Sharding",id:"sharding",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Changes how the realtime 2 way connection between the client and Discord's Gateway WebSockets Server behaves."}),"\n",(0,o.jsx)(n.h2,{id:"gateway-version",children:"Gateway Version"}),"\n",(0,o.jsxs)(n.p,{children:["You can set this by switching between different Git branches of the library's repo. You can't set the gateway version using code as the library doesn't account for differences between version. For versions that Discord supports, check out ",(0,o.jsx)(n.a,{href:"https://discord.com/developers/docs/topics/gateway#gateways-gateway-versions",children:"the Discord API docs"}),". For Git branches of this library, check out ",(0,o.jsx)(n.a,{href:"https://github.com/yourWaifu/sleepy-discord/branches",children:"the GitHub repo"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"intents",children:"Intents"}),"\n",(0,o.jsx)(n.p,{children:"Filters what information Discord sends to the client. A list of Intents can be found on Discord docs."}),"\n",(0,o.jsx)(n.admonition,{type:"important",children:(0,o.jsx)(n.p,{children:"Required for v8 and up. message content intent is required for v10 and up."})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'Client client("token", SleepyDiscord::USER_CONTROLED_THREADS);\r\nauto intentsList = {\r\n    SleepyDiscord::Intent::SERVER_MESSAGES,\t//required for commands via messages\r\n    SleepyDiscord::Intent::MESSAGE_CONTENT, // also required for commands via messages\r\n    SleepyDiscord::Intent::SERVER_VOICE_STATES, //required for connecting to voice\r\n};\r\nclient.setIntents(intentsList);\r\nclient.run(); //call setIntents before calling run\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'Client client("token", SleepyDiscord::USER_CONTROLED_THREADS);\r\nclient.setIntents(\r\n    SleepyDiscord::Intent::SERVER_MESSAGES,\r\n    SleepyDiscord::Intent::MESSAGE_CONTENT,\r\n    SleepyDiscord::Intent::SERVER_VOICE_STATES\r\n);\r\nclient.run(); //call setIntents before calling run\n'})}),"\n",(0,o.jsx)(n.h2,{id:"compression",children:"Compression"}),"\n",(0,o.jsx)(n.p,{children:"Makes Discord send Zlib compressed WebSockets to save bandwidth but with a cost, CPU and some RAM at runtime. In most situations, this might be worth turning on."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"You need to set USE_ZLIB_NG to ON in CMake for this to work."})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'Client client("token", SleepyDiscord::USER_CONTROLED_THREADS);\r\nclient.useCompression(true);\r\nclient.run(); //call useCompression before calling run\n'})}),"\n",(0,o.jsx)(n.h2,{id:"sharding",children:"Sharding"}),"\n",(0,o.jsx)(n.p,{children:"Lets you split up your bots' operations by splitting the list of Discord servers that each connection handles. This can be done by running multiple instances of your Client with the same token but different shard IDs."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:'Client client("token", SleepyDiscord::USER_CONTROLED_THREADS);\r\nclient.setShardID(0, 2); //the first parameter is the shardID\r\nclient.run(); //call setShardID before run\r\n\r\n//somewhere else\r\nClient client("token", SleepyDiscord::USER_CONTROLED_THREADS); //Same token\r\nclient.setShardID(1, 2); //different shardID but same shardCount\r\nclient.run();\n'})}),"\n",(0,o.jsxs)(n.p,{children:["For more information on sharding, check ",(0,o.jsx)(n.a,{href:"https://discord.com/developers/docs/topics/gateway#sharding",children:"the Discord API Docs"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(6540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);