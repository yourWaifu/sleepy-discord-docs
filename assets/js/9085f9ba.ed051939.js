"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[3870],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},i=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,_=u["".concat(o,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(_,l(l({ref:t},i),{},{components:n})):a.createElement(_,l({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var c=2;c<s;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8523:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return i},default:function(){return u}});var a=n(3117),r=n(102),s=(n(7294),n(3905)),l=["components"],p={title:"SleepyDiscord::json"},o=void 0,c={unversionedId:"reference/Namespaces/namespace_sleepy_discord_1_1json",id:"reference/Namespaces/namespace_sleepy_discord_1_1json",title:"SleepyDiscord::json",description:"Classes",source:"@site/docs/reference/Namespaces/namespace_sleepy_discord_1_1json.md",sourceDirName:"reference/Namespaces",slug:"/reference/Namespaces/namespace_sleepy_discord_1_1json",permalink:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::json"},sidebar:"Reference",previous:{title:"SleepyDiscord::InteractionCallback",permalink:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1_interaction_callback"},next:{title:"asio",permalink:"/sleepy-discord/docs/reference/Namespaces/namespaceasio"}},i=[{value:"Classes",id:"classes",children:[],level:2},{value:"Types",id:"types",children:[],level:2},{value:"Functions",id:"functions",children:[],level:2},{value:"Types Documentation",id:"types-documentation",children:[{value:"enum FieldType",id:"enum-fieldtype",children:[],level:3},{value:"enum FromJSONMode",id:"enum-fromjsonmode",children:[],level:3},{value:"using Value",id:"using-value",children:[],level:3},{value:"using Array",id:"using-array",children:[],level:3},{value:"using Values",id:"using-values",children:[],level:3},{value:"using JSONConverter",id:"using-jsonconverter",children:[],level:3}],level:2},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"function createJSON",id:"function-createjson",children:[],level:3},{value:"function string",id:"function-string",children:[],level:3},{value:"function UInteger",id:"function-uinteger",children:[],level:3},{value:"function optionalUInteger",id:"function-optionaluinteger",children:[],level:3},{value:"function integer",id:"function-integer",children:[],level:3},{value:"function optionalInteger",id:"function-optionalinteger",children:[],level:3},{value:"function boolean",id:"function-boolean",children:[],level:3},{value:"function createJSONArray",id:"function-createjsonarray",children:[],level:3},{value:"function hasPushBack",id:"function-haspushback",children:[],level:3},{value:"function hasPushBack",id:"function-haspushback-1",children:[],level:3},{value:"function leaveAlone",id:"function-leavealone",children:[],level:3},{value:"function toString",id:"function-tostring",children:[],level:3},{value:"function toStdString",id:"function-tostdstring",children:[],level:3},{value:"function toStdStringView",id:"function-tostdstringview",children:[],level:3},{value:"function toInt",id:"function-toint",children:[],level:3},{value:"function toUint",id:"function-touint",children:[],level:3},{value:"function toInt64",id:"function-toint64",children:[],level:3},{value:"function toUint64",id:"function-touint64",children:[],level:3},{value:"function toDouble",id:"function-todouble",children:[],level:3},{value:"function toFloat",id:"function-tofloat",children:[],level:3},{value:"function toBool",id:"function-tobool",children:[],level:3},{value:"function toArray",id:"function-toarray",children:[],level:3},{value:"function toEnum",id:"function-toenum",children:[],level:3},{value:"function toJSON",id:"function-tojson",children:[],level:3},{value:"function pair",id:"function-pair",children:[],level:3},{value:"function pair",id:"function-pair-1",children:[],level:3},{value:"function pair",id:"function-pair-2",children:[],level:3},{value:"function pair",id:"function-pair-3",children:[],level:3},{value:"function castValue",id:"function-castvalue",children:[],level:3},{value:"function fromJSON",id:"function-fromjson",children:[],level:3}],level:2}],d={toc:i};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"classes"},"Classes"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper"},"SleepyDiscord::json::ClassTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_string_wrapper"},"SleepyDiscord::json::ArrayStringWrapper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_value_wrapper"},"SleepyDiscord::json::ArrayValueWrapper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_value_wrapper_3_01_type_00_01typename_01std_1_1enable__ic278f49c55d1ff83c8431dd68b94506f"},"SleepyDiscord::json::ArrayValueWrapper< Type, typename std::enable_if< std::is_constructible< Type, const Value >::value >::type >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_value_wrapper_3_01_type_00_01typename_01std_1_1enable__i57bef9183313cb1d101ea260a14b38a8"},"SleepyDiscord::json::ArrayValueWrapper< Type, typename std::enable_if< std::is_constructible< Type, Value >::value >::type >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_wrapper"},"SleepyDiscord::json::ArrayWrapper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_wrapper_3_01_value_00_01_base_01_4"},"SleepyDiscord::json::ArrayWrapper< Value, Base >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_empty_function"},"SleepyDiscord::json::EmptyFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_string_function"},"SleepyDiscord::json::IsStringFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_number_function"},"SleepyDiscord::json::IsNumberFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_bool_function"},"SleepyDiscord::json::IsBoolFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_array_function"},"SleepyDiscord::json::IsArrayFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_object_function"},"SleepyDiscord::json::IsObjectFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1has_serialize"},"SleepyDiscord::json::hasSerialize")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1has_is_type"},"SleepyDiscord::json::hasIsType")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1string_01_4"},"SleepyDiscord::json::ClassTypeHelper< std::string >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01nonstd_1_1string__view_01_4"},"SleepyDiscord::json::ClassTypeHelper< nonstd::string_view >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01_value_01_4"},"SleepyDiscord::json::ClassTypeHelper< Value >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_primitive_type_function"},"SleepyDiscord::json::IsPrimitiveTypeFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_is_primitive_type_function_3_01bool_01_4"},"SleepyDiscord::json::IsPrimitiveTypeFunction< bool >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_primitive_type_helper"},"SleepyDiscord::json::PrimitiveTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01int_01_4"},"SleepyDiscord::json::ClassTypeHelper< int >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01uint32__t_01_4"},"SleepyDiscord::json::ClassTypeHelper< uint32_t >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01int64__t_01_4"},"SleepyDiscord::json::ClassTypeHelper< int64_t >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01uint64__t_01_4"},"SleepyDiscord::json::ClassTypeHelper< uint64_t >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01float_01_4"},"SleepyDiscord::json::ClassTypeHelper< float >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01double_01_4"},"SleepyDiscord::json::ClassTypeHelper< double >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01bool_01_4"},"SleepyDiscord::json::ClassTypeHelper< bool >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_base_enum_type_helper"},"SleepyDiscord::json::BaseEnumTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_enum_type_helper"},"SleepyDiscord::json::EnumTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_from_container_function"},"SleepyDiscord::json::FromContainerFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_to_container_function"},"SleepyDiscord::json::ToContainerFunction")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_container_type_helper"},"SleepyDiscord::json::ContainerTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_std_array_type_helper"},"SleepyDiscord::json::StdArrayTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_smart_ptr_type_helper"},"SleepyDiscord::json::SmartPtrTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_optional_type_helper"},"SleepyDiscord::json::OptionalTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_nullable_type_helper"},"SleepyDiscord::json::NullableTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_map_type_helper"},"SleepyDiscord::json::MapTypeHelper")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1nullptr__t_01_4"},"SleepyDiscord::json::ClassTypeHelper< std::nullptr_t >")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_pair_impl"},"SleepyDiscord::json::PairImpl")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_complex_pair"},"SleepyDiscord::json::ComplexPair")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"struct"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_class_type_helper_3_01std_1_1shared__ptr_3_01_base_component_01_4_01_4"},"SleepyDiscord::json::ClassTypeHelper< std::shared_ptr< BaseComponent > >")))))),(0,s.kt)("h2",{id:"types"},"Types"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"enum"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#enum-fieldtype"},"FieldType"))," { REQUIRIED_FIELD = 0, OPTIONAL_FIELD = 1 << 0, NULLABLE_FIELD = 1 << 1, OPTIONAL_NULLABLE_FIELD = OPTIONAL_FIELD")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"enum"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#enum-fromjsonmode"},"FromJSONMode"))," { Default = 0, ReturnOnError = 1}")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"using rapidjson::Value"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#using-value"},"Value")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"using rapidjson::Value::ConstArray"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#using-array"},"Array")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"using Value"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#using-values"},"Values")))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <class Return ",">"," ",(0,s.kt)("br",null),"using Return(*)(const Value &)"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#using-jsonconverter"},"JSONConverter")))))),(0,s.kt)("h2",{id:"functions"},"Functions"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Name"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-createjson"},"createJSON")),"(std::initializer_list< std::pair< std::string, std::string >> json)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-string"},"string")),"(const std::string & s)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-uinteger"},"UInteger")),"(const uint64_t num)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-optionaluinteger"},"optionalUInteger")),"(const uint64_t num)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-integer"},"integer")),"(const int64_t num)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-optionalinteger"},"optionalInteger")),"(const int64_t num)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-boolean"},"boolean")),"(const bool boolean)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <class Type ",">"," ",(0,s.kt)("br",null),"const std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-createjsonarray"},"createJSONArray")),"(const std::vector< Type > source)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <typename T ",">"," ",(0,s.kt)("br",null),"constexpr auto"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-haspushback"},"hasPushBack")),"(int )")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <typename T ",">"," ",(0,s.kt)("br",null),"constexpr std::false_type"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-haspushback"},"hasPushBack")),"(long )")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const Value &"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-leavealone"},"leaveAlone")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"const char *"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-tostring"},"toString")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"std::string"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-tostdstring"},"toStdString")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"nonstd::string_view"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-tostdstringview"},"toStdStringView")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"int"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-toint"},"toInt")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"unsigned int"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-touint"},"toUint")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"int64_t"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-toint64"},"toInt64")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-touint64"},"toUint64")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"double"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-todouble"},"toDouble")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"float"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-tofloat"},"toFloat")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"bool"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-tobool"},"toBool")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <class Type ,class Value ",">"," ",(0,s.kt)("br",null),(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_wrapper"},"ArrayWrapper"),"< Type, ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_array_string_wrapper"},"ArrayStringWrapper"),"< Value > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-toarray"},"toArray")),"(Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <class Type ",">"," ",(0,s.kt)("br",null),"Type"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-toenum"},"toEnum")),"(const Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <class Object ",">"," ",(0,s.kt)("br",null),"Value"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-tojson"},"toJSON")),"(const Object & object, Value::AllocatorType & allocator)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <int defaultValue,template< class, int > class TypeHelper =PrimitiveTypeHelper,class Class ,class Type ",">"," ",(0,s.kt)("br",null),"constexpr ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_pair_impl"},"PairImpl"),"< Class, Type, TypeHelper< Type, defaultValue > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-pair"},"pair")),"(Type Class::",(0,s.kt)("em",{parentName:"td"}," member, const char ")," name, FieldType type)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <template< class > class TypeHelper =ClassTypeHelper,class Class ,class Type ",">"," ",(0,s.kt)("br",null),"constexpr ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_pair_impl"},"PairImpl"),"< Class, Type, TypeHelper< Type > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-pair"},"pair")),"(Type Class::",(0,s.kt)("em",{parentName:"td"}," member, const char ")," name, FieldType type)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <template< class, template< class... > class > class TypeHelper,template< class... > class TypeHelper2 =ClassTypeHelper,class Class ,class Type ",">"," ",(0,s.kt)("br",null),"constexpr ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_pair_impl"},"PairImpl"),"< Class, Type, TypeHelper< Type, TypeHelper2 > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-pair"},"pair")),"(Type Class::",(0,s.kt)("em",{parentName:"td"}," member, const char ")," name, FieldType type)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <template< class, class > class TypeHelper,template< class, template< class... > class > class TypeHelper2,template< class... > class TypeHelper3,class Class ,class Type ,class Type2 ",">"," ",(0,s.kt)("br",null),"constexpr ",(0,s.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1json_1_1_pair_impl"},"PairImpl"),"< Class, Type, TypeHelper< Type, TypeHelper2< Type2, TypeHelper3 > > >"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-pair"},"pair")),"(Type Class::",(0,s.kt)("em",{parentName:"td"}," member, const char ")," name, FieldType type)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <class Helper ,class ResultingObject ,class Value ",">"," ",(0,s.kt)("br",null),"bool"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-castvalue"},"castValue")),"(ResultingObject & result, Value & value)")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"template <FromJSONMode mode =FromJSONMode::Default,class ResultingObject ,class Value ,size_t i =0",">"," ",(0,s.kt)("br",null),"std::enable_if< i==std::tuple_size< decltype(ResultingObject::JSONStruct)>::value, bool >::type"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("strong",{parentName:"td"},(0,s.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Namespaces/namespace_sleepy_discord_1_1json#function-fromjson"},"fromJSON")),"(ResultingObject & , Value & )")))),(0,s.kt)("h2",{id:"types-documentation"},"Types Documentation"),(0,s.kt)("h3",{id:"enum-fieldtype"},"enum FieldType"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,s.kt)("th",{parentName:"tr",align:null},"Value"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"REQUIRIED_FIELD"),(0,s.kt)("td",{parentName:"tr",align:null},"0"),(0,s.kt)("td",{parentName:"tr",align:null})),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"OPTIONAL_FIELD"),(0,s.kt)("td",{parentName:"tr",align:null},"1 << 0"),(0,s.kt)("td",{parentName:"tr",align:null})),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"NULLABLE_FIELD"),(0,s.kt)("td",{parentName:"tr",align:null},"1 << 1"),(0,s.kt)("td",{parentName:"tr",align:null})),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"OPTIONAL_NULLABLE_FIELD"),(0,s.kt)("td",{parentName:"tr",align:null},"OPTIONAL_FIELD"),(0,s.kt)("td",{parentName:"tr",align:null},"NULLABLE_FIELD")))),(0,s.kt)("h3",{id:"enum-fromjsonmode"},"enum FromJSONMode"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,s.kt)("th",{parentName:"tr",align:null},"Value"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Default"),(0,s.kt)("td",{parentName:"tr",align:null},"0"),(0,s.kt)("td",{parentName:"tr",align:null})),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"ReturnOnError"),(0,s.kt)("td",{parentName:"tr",align:null},"1"),(0,s.kt)("td",{parentName:"tr",align:null})))),(0,s.kt)("h3",{id:"using-value"},"using Value"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::json::Value = typedef rapidjson::Value;\n")),(0,s.kt)("h3",{id:"using-array"},"using Array"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::json::Array = typedef rapidjson::Value::ConstArray;\n")),(0,s.kt)("h3",{id:"using-values"},"using Values"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::json::Values = typedef Value;\n")),(0,s.kt)("h3",{id:"using-jsonconverter"},"using JSONConverter"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Return >\nusing SleepyDiscord::json::JSONConverter = typedef Return(*)(const Value&);\n")),(0,s.kt)("h2",{id:"functions-documentation"},"Functions Documentation"),(0,s.kt)("h3",{id:"function-createjson"},"function createJSON"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string createJSON(\n    std::initializer_list< std::pair< std::string, std::string >> json\n)\n")),(0,s.kt)("h3",{id:"function-string"},"function string"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string string(\n    const std::string & s\n)\n")),(0,s.kt)("h3",{id:"function-uinteger"},"function UInteger"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string UInteger(\n    const uint64_t num\n)\n")),(0,s.kt)("h3",{id:"function-optionaluinteger"},"function optionalUInteger"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string optionalUInteger(\n    const uint64_t num\n)\n")),(0,s.kt)("h3",{id:"function-integer"},"function integer"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string integer(\n    const int64_t num\n)\n")),(0,s.kt)("h3",{id:"function-optionalinteger"},"function optionalInteger"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string optionalInteger(\n    const int64_t num\n)\n")),(0,s.kt)("h3",{id:"function-boolean"},"function boolean"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"const std::string boolean(\n    const bool boolean\n)\n")),(0,s.kt)("h3",{id:"function-createjsonarray"},"function createJSONArray"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\nconst std::string createJSONArray(\n    const std::vector< Type > source\n)\n")),(0,s.kt)("h3",{id:"function-haspushback"},"function hasPushBack"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T >\nconstexpr auto hasPushBack(\n    int \n)\n")),(0,s.kt)("h3",{id:"function-haspushback-1"},"function hasPushBack"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename T >\nconstexpr std::false_type hasPushBack(\n    long \n)\n")),(0,s.kt)("h3",{id:"function-leavealone"},"function leaveAlone"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const Value & leaveAlone(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-tostring"},"function toString"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline const char * toString(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-tostdstring"},"function toStdString"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline std::string toStdString(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-tostdstringview"},"function toStdStringView"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline nonstd::string_view toStdStringView(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-toint"},"function toInt"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline int toInt(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-touint"},"function toUint"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline unsigned int toUint(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-toint64"},"function toInt64"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline int64_t toInt64(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-touint64"},"function toUint64"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline uint64_t toUint64(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-todouble"},"function toDouble"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline double toDouble(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-tofloat"},"function toFloat"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline float toFloat(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-tobool"},"function toBool"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"inline bool toBool(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-toarray"},"function toArray"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type ,\nclass Value >\ninline ArrayWrapper< Type, ArrayStringWrapper< Value > > toArray(\n    Value & value\n)\n")),(0,s.kt)("h3",{id:"function-toenum"},"function toEnum"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\ninline Type toEnum(\n    const Value & value\n)\n")),(0,s.kt)("h3",{id:"function-tojson"},"function toJSON"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Object >\ninline Value toJSON(\n    const Object & object,\n    Value::AllocatorType & allocator\n)\n")),(0,s.kt)("h3",{id:"function-pair"},"function pair"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <int defaultValue,\ntemplate< class, int > class TypeHelper =PrimitiveTypeHelper,\nclass Class ,\nclass Type >\nconstexpr PairImpl< Class, Type, TypeHelper< Type, defaultValue > > pair(\n    Type Class::* member,\n    const char * name,\n    FieldType type\n)\n")),(0,s.kt)("h3",{id:"function-pair-1"},"function pair"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <template< class > class TypeHelper =ClassTypeHelper,\nclass Class ,\nclass Type >\nconstexpr PairImpl< Class, Type, TypeHelper< Type > > pair(\n    Type Class::* member,\n    const char * name,\n    FieldType type\n)\n")),(0,s.kt)("h3",{id:"function-pair-2"},"function pair"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <template< class, template< class... > class > class TypeHelper,\ntemplate< class... > class TypeHelper2 =ClassTypeHelper,\nclass Class ,\nclass Type >\nconstexpr PairImpl< Class, Type, TypeHelper< Type, TypeHelper2 > > pair(\n    Type Class::* member,\n    const char * name,\n    FieldType type\n)\n")),(0,s.kt)("h3",{id:"function-pair-3"},"function pair"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <template< class, class > class TypeHelper,\ntemplate< class, template< class... > class > class TypeHelper2,\ntemplate< class... > class TypeHelper3,\nclass Class ,\nclass Type ,\nclass Type2 >\nconstexpr PairImpl< Class, Type, TypeHelper< Type, TypeHelper2< Type2, TypeHelper3 > > > pair(\n    Type Class::* member,\n    const char * name,\n    FieldType type\n)\n")),(0,s.kt)("h3",{id:"function-castvalue"},"function castValue"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Helper ,\nclass ResultingObject ,\nclass Value >\ninline bool castValue(\n    ResultingObject & result,\n    Value & value\n)\n")),(0,s.kt)("h3",{id:"function-fromjson"},"function fromJSON"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"template <FromJSONMode mode =FromJSONMode::Default,\nclass ResultingObject ,\nclass Value ,\nsize_t i =0>\ninline std::enable_if< i==std::tuple_size< decltype(ResultingObject::JSONStruct)>::value, bool >::type fromJSON(\n    ResultingObject & ,\n    Value & \n)\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);