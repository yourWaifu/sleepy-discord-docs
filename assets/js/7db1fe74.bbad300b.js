"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[5070],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return _}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(r),_=l,y=d["".concat(c,".").concat(_)]||d[_]||u[_]||o;return r?n.createElement(y,a(a({ref:t},p),{},{components:r})):n.createElement(y,a({ref:t},p))}));function _(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:l,a[1]=s;for(var i=2;i<o;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7094:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return p},default:function(){return d}});var n=r(3117),l=r(102),o=(r(7294),r(3905)),a=["components"],s={title:"SleepyDiscord::GetEnumBaseType"},c=void 0,i={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",id:"reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",title:"SleepyDiscord::GetEnumBaseType",description:"More...",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::GetEnumBaseType"},sidebar:"Reference",previous:{title:"SleepyDiscord::GetDefault< UnavailableServer::AvailableFlag >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_get_default_3_01_unavailable_server_1_1_available_flag_01_4"},next:{title:"SleepyDiscord::GetEnumBaseType< AllowedMentions::MentionReplierFlag >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_get_enum_base_type_3_01_allowed_mentions_1_1_mention_replier_flag_01_4"}},p=[{value:"Detailed Description",id:"detailed-description",children:[],level:2},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using Value",id:"using-value",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,r=(0,l.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#detailed-description"},"More...")),(0,o.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"template <class Type >\nstruct SleepyDiscord::GetEnumBaseType;\n")),(0,o.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,o.kt)("h3",{id:"using-value"},"using Value"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::GetEnumBaseType< Type >::Value =  int64_t;\n")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);