"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4420],{3905:function(e,a,r){r.d(a,{Zo:function(){return o},kt:function(){return m}});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function l(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?l(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var c=n.createContext({}),d=function(e){var a=n.useContext(c),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},o=function(e){var a=d(e.components);return n.createElement(c.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,l=e.originalType,c=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),u=d(r),m=t,b=u["".concat(c,".").concat(m)]||u[m]||p[m]||l;return r?n.createElement(b,i(i({ref:a},o),{},{components:r})):n.createElement(b,i({ref:a},o))}));function m(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var l=r.length,i=new Array(l);i[0]=u;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var d=2;d<l;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2306:function(e,a,r){r.r(a),r.d(a,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return o},default:function(){return u}});var n=r(3117),t=r(102),l=(r(7294),r(3905)),i=["components"],s={title:"SleepyDiscord::Server"},c=void 0,d={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_server",id:"reference/Classes/struct_sleepy_discord_1_1_server",title:"SleepyDiscord::Server",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_server.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_server",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::Server"},sidebar:"Reference",previous:{title:"SleepyDiscord::SendMessageParams",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_send_message_params"},next:{title:"SleepyDiscord::ServerAppCommandPermissions",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_server_app_command_permissions"}},o=[{value:"inherited members",id:"inherited-members",children:[],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ~Server",id:"function-server",children:[],level:3},{value:"function Server",id:"function-server-1",children:[],level:3},{value:"function Server",id:"function-server-2",children:[],level:3},{value:"function Server",id:"function-server-3",children:[],level:3},{value:"function findMember",id:"function-findmember",children:[],level:3},{value:"function findChannel",id:"function-findchannel",children:[],level:3},{value:"function findRole",id:"function-findrole",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable name",id:"variable-name",children:[],level:3},{value:"variable icon",id:"variable-icon",children:[],level:3},{value:"variable splash",id:"variable-splash",children:[],level:3},{value:"variable discoverySplash",id:"variable-discoverysplash",children:[],level:3},{value:"variable ownerID",id:"variable-ownerid",children:[],level:3},{value:"variable permissions",id:"variable-permissions",children:[],level:3},{value:"variable region",id:"variable-region",children:[],level:3},{value:"variable AFKchannelID",id:"variable-afkchannelid",children:[],level:3},{value:"variable AFKTimeout",id:"variable-afktimeout",children:[],level:3},{value:"variable embedEnable",id:"variable-embedenable",children:[],level:3},{value:"variable embedChannelID",id:"variable-embedchannelid",children:[],level:3},{value:"variable verificationLevel",id:"variable-verificationlevel",children:[],level:3},{value:"variable defaultMessageNotifications",id:"variable-defaultmessagenotifications",children:[],level:3},{value:"variable explicitContentFilter",id:"variable-explicitcontentfilter",children:[],level:3},{value:"variable roles",id:"variable-roles",children:[],level:3},{value:"variable voiceStates",id:"variable-voicestates",children:[],level:3},{value:"variable features",id:"variable-features",children:[],level:3},{value:"variable unavailable",id:"variable-unavailable",children:[],level:3},{value:"variable stageInstances",id:"variable-stageinstances",children:[],level:3},{value:"variable applicationID",id:"variable-applicationid",children:[],level:3},{value:"variable systemChannelID",id:"variable-systemchannelid",children:[],level:3},{value:"variable systemChannelFlags",id:"variable-systemchannelflags",children:[],level:3},{value:"variable rulesChannelID",id:"variable-ruleschannelid",children:[],level:3},{value:"variable MFALevel",id:"variable-mfalevel",children:[],level:3},{value:"variable joinedAt",id:"variable-joinedat",children:[],level:3},{value:"variable maxMembers",id:"variable-maxmembers",children:[],level:3},{value:"variable vanityUrlCode",id:"variable-vanityurlcode",children:[],level:3},{value:"variable description",id:"variable-description",children:[],level:3},{value:"variable banner",id:"variable-banner",children:[],level:3},{value:"variable premiumTier",id:"variable-premiumtier",children:[],level:3},{value:"variable premiumSubscriptionCount",id:"variable-premiumsubscriptioncount",children:[],level:3},{value:"variable preferredLocale",id:"variable-preferredlocale",children:[],level:3},{value:"variable publicUpdatesChannelID",id:"variable-publicupdateschannelid",children:[],level:3},{value:"variable maxVideoChannelUsers",id:"variable-maxvideochannelusers",children:[],level:3},{value:"variable approximateMemberCount",id:"variable-approximatemembercount",children:[],level:3},{value:"variable approximatePresenceCount",id:"variable-approximatepresencecount",children:[],level:3},{value:"variable nsfwLevel",id:"variable-nsfwlevel",children:[],level:3},{value:"variable large",id:"variable-large",children:[],level:3},{value:"variable memberCount",id:"variable-membercount",children:[],level:3},{value:"variable members",id:"variable-members",children:[],level:3},{value:"variable channels",id:"variable-channels",children:[],level:3},{value:"variable threads",id:"variable-threads",children:[],level:3}],level:2}],p={toc:o};function u(e){var a=e.components,r=(0,t.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Inherits from ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"),", ",(0,l.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,l.kt)("h2",{id:"inherited-members"},"inherited members"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Types inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"using ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived >"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#using-parent"},"Parent")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"using ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived >"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#using-identifier"},"Identifier")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Functions inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"() =default")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"(",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > id)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator-snowflake%3C-derived-%3E-&"},"operator Snowflake< Derived > &")),"()")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-empty"},"empty")),"() const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-merge"},"merge")),"(Derived & changes)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",(0,l.kt)("br",null),"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",(0,l.kt)("br",null),"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"const Time"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-gettimestamp"},"getTimestamp")),"()")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Public Attributes inherited from ",(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Server >"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived >"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#variable-id"},"ID")))))),(0,l.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,l.kt)("h3",{id:"function-server"},"function ~Server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"~Server() =default\n")),(0,l.kt)("h3",{id:"function-server-1"},"function Server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Server() =default\n")),(0,l.kt)("h3",{id:"function-server-2"},"function Server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"inline Server(\n    const nonstd::string_view & json\n)\n")),(0,l.kt)("h3",{id:"function-server-3"},"function Server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Server(\n    const json::Value & json\n)\n")),(0,l.kt)("h3",{id:"function-findmember"},"function findMember"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< ServerMember >::iterator findMember(\n    const Snowflake< User > userID\n)\n")),(0,l.kt)("h3",{id:"function-findchannel"},"function findChannel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< Channel >::iterator findChannel(\n    const Snowflake< Channel > channelID\n)\n")),(0,l.kt)("h3",{id:"function-findrole"},"function findRole"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< Role >::iterator findRole(\n    const Snowflake< Role > roleID\n)\n")),(0,l.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair &::, "", ::REQUIRIED_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< UInt64StrTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,l.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,l.kt)("h3",{id:"variable-name"},"variable name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),(0,l.kt)("h3",{id:"variable-icon"},"variable icon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string icon;\n")),(0,l.kt)("h3",{id:"variable-splash"},"variable splash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string splash;\n")),(0,l.kt)("h3",{id:"variable-discoverysplash"},"variable discoverySplash"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string discoverySplash;\n")),(0,l.kt)("h3",{id:"variable-ownerid"},"variable ownerID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< User > ownerID;\n")),(0,l.kt)("h3",{id:"variable-permissions"},"variable permissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Permission permissions;\n")),(0,l.kt)("h3",{id:"variable-region"},"variable region"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string region;\n")),(0,l.kt)("h3",{id:"variable-afkchannelid"},"variable AFKchannelID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string AFKchannelID;\n")),(0,l.kt)("h3",{id:"variable-afktimeout"},"variable AFKTimeout"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int AFKTimeout;\n")),(0,l.kt)("h3",{id:"variable-embedenable"},"variable embedEnable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool embedEnable;\n")),(0,l.kt)("h3",{id:"variable-embedchannelid"},"variable embedChannelID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string embedChannelID;\n")),(0,l.kt)("h3",{id:"variable-verificationlevel"},"variable verificationLevel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int verificationLevel;\n")),(0,l.kt)("h3",{id:"variable-defaultmessagenotifications"},"variable defaultMessageNotifications"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int defaultMessageNotifications;\n")),(0,l.kt)("h3",{id:"variable-explicitcontentfilter"},"variable explicitContentFilter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int explicitContentFilter;\n")),(0,l.kt)("h3",{id:"variable-roles"},"variable roles"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< Role > roles;\n")),(0,l.kt)("h3",{id:"variable-voicestates"},"variable voiceStates"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< VoiceState > voiceStates;\n")),(0,l.kt)("h3",{id:"variable-features"},"variable features"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::string > features;\n")),(0,l.kt)("h3",{id:"variable-unavailable"},"variable unavailable"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool unavailable;\n")),(0,l.kt)("h3",{id:"variable-stageinstances"},"variable stageInstances"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< StageInstance > stageInstances;\n")),(0,l.kt)("h3",{id:"variable-applicationid"},"variable applicationID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< DiscordObject > applicationID;\n")),(0,l.kt)("h3",{id:"variable-systemchannelid"},"variable systemChannelID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > systemChannelID;\n")),(0,l.kt)("h3",{id:"variable-systemchannelflags"},"variable systemChannelFlags"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int systemChannelFlags;\n")),(0,l.kt)("h3",{id:"variable-ruleschannelid"},"variable rulesChannelID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > rulesChannelID;\n")),(0,l.kt)("h3",{id:"variable-mfalevel"},"variable MFALevel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int MFALevel;\n")),(0,l.kt)("h3",{id:"variable-joinedat"},"variable joinedAt"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string joinedAt;\n")),(0,l.kt)("h3",{id:"variable-maxmembers"},"variable maxMembers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int maxMembers = 0;\n")),(0,l.kt)("h3",{id:"variable-vanityurlcode"},"variable vanityUrlCode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string vanityUrlCode;\n")),(0,l.kt)("h3",{id:"variable-description"},"variable description"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string description;\n")),(0,l.kt)("h3",{id:"variable-banner"},"variable banner"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string banner;\n")),(0,l.kt)("h3",{id:"variable-premiumtier"},"variable premiumTier"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int premiumTier = 0;\n")),(0,l.kt)("h3",{id:"variable-premiumsubscriptioncount"},"variable premiumSubscriptionCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int premiumSubscriptionCount = 0;\n")),(0,l.kt)("h3",{id:"variable-preferredlocale"},"variable preferredLocale"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string preferredLocale;\n")),(0,l.kt)("h3",{id:"variable-publicupdateschannelid"},"variable publicUpdatesChannelID"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > publicUpdatesChannelID;\n")),(0,l.kt)("h3",{id:"variable-maxvideochannelusers"},"variable maxVideoChannelUsers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int maxVideoChannelUsers;\n")),(0,l.kt)("h3",{id:"variable-approximatemembercount"},"variable approximateMemberCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int approximateMemberCount;\n")),(0,l.kt)("h3",{id:"variable-approximatepresencecount"},"variable approximatePresenceCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int approximatePresenceCount;\n")),(0,l.kt)("h3",{id:"variable-nsfwlevel"},"variable nsfwLevel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int nsfwLevel = 0;\n")),(0,l.kt)("h3",{id:"variable-large"},"variable large"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"bool large;\n")),(0,l.kt)("h3",{id:"variable-membercount"},"variable memberCount"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"int memberCount = 0;\n")),(0,l.kt)("h3",{id:"variable-members"},"variable members"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< ServerMember > members;\n")),(0,l.kt)("h3",{id:"variable-channels"},"variable channels"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< Channel > channels;\n")),(0,l.kt)("h3",{id:"variable-threads"},"variable threads"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"std::list< Channel > threads;\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);