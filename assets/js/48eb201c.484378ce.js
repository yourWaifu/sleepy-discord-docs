"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[4903],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var l=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=l.createContext({}),c=function(e){var n=l.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return l.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},d=l.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return t?l.createElement(f,i(i({ref:n},u),{},{components:t})):l.createElement(f,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<a;c++)i[c]=t[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9726:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var l=t(3117),r=t(102),a=(t(7294),t(3905)),i=["components"],o={title:"SleepyDiscord::AllowedMentions"},s=void 0,c={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",id:"reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",title:"SleepyDiscord::AllowedMentions",description:"Public Types Documentation",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allowed_mentions",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::AllowedMentions"},sidebar:"Reference",previous:{title:"SleepyDiscord::AllowMentionsParseHelper",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_allow_mentions_parse_helper"},next:{title:"SleepyDiscord::AppCommand",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_app_command"}},u=[{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum MentionReplierFlag",id:"enum-mentionreplierflag",children:[],level:3},{value:"using ParseValueType",id:"using-parsevaluetype",children:[],level:3},{value:"using ParseContainer",id:"using-parsecontainer",children:[],level:3}],level:2},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function AllowedMentions",id:"function-allowedmentions",children:[],level:3},{value:"function ~AllowedMentions",id:"function-allowedmentions-1",children:[],level:3},{value:"function AllowedMentions",id:"function-allowedmentions-2",children:[],level:3},{value:"function AllowedMentions",id:"function-allowedmentions-3",children:[],level:3},{value:"function AllowedMentions",id:"function-allowedmentions-4",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3},{value:"function empty",id:"function-empty",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable parse",id:"variable-parse",children:[],level:3},{value:"variable roles",id:"variable-roles",children:[],level:3},{value:"variable users",id:"variable-users",children:[],level:3},{value:"variable repliedUser",id:"variable-replieduser",children:[],level:3}],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,l.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"public-types-documentation"},"Public Types Documentation"),(0,a.kt)("h3",{id:"enum-mentionreplierflag"},"enum MentionReplierFlag"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NotSet"),(0,a.kt)("td",{parentName:"tr",align:null},"-2"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"WillNotMentionReply"),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MentionReply"),(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h3",{id:"using-parsevaluetype"},"using ParseValueType"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AllowedMentions::ParseValueType =  std::string;\n")),(0,a.kt)("h3",{id:"using-parsecontainer"},"using ParseContainer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::AllowedMentions::ParseContainer =  std::vector<std::string>;\n")),(0,a.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,a.kt)("h3",{id:"function-allowedmentions"},"function AllowedMentions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"AllowedMentions() =default\n")),(0,a.kt)("h3",{id:"function-allowedmentions-1"},"function ~AllowedMentions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"~AllowedMentions() =default\n")),(0,a.kt)("h3",{id:"function-allowedmentions-2"},"function AllowedMentions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline AllowedMentions(\n    int \n)\n")),(0,a.kt)("h3",{id:"function-allowedmentions-3"},"function AllowedMentions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"AllowedMentions(\n    const json::Value & json\n)\n")),(0,a.kt)("h3",{id:"function-allowedmentions-4"},"function AllowedMentions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline AllowedMentions(\n    const nonstd::string_view & json\n)\n")),(0,a.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,a.kt)("h3",{id:"function-empty"},"function empty"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"inline JSONStructEnd const bool empty() const\n")),(0,a.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,a.kt)("h3",{id:"variable-parse"},"variable parse"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'ParseContainer parse = {""};\n')),(0,a.kt)("h3",{id:"variable-roles"},"variable roles"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Snowflake< Role > > roles;\n")),(0,a.kt)("h3",{id:"variable-users"},"variable users"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Snowflake< User > > users;\n")),(0,a.kt)("h3",{id:"variable-replieduser"},"variable repliedUser"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"MentionReplierFlag repliedUser = MentionReplierFlag::NotSet;\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}d.isMDXComponent=!0}}]);