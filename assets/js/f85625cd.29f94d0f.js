"use strict";(self.webpackChunksleepy_discord_docs=self.webpackChunksleepy_discord_docs||[]).push([[2551],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return v}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),v=r,m=u["".concat(c,".").concat(v)]||u[v]||d[v]||i;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3444:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),l=["components"],o={title:"SleepyDiscord::InteractionData"},c=void 0,p={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_interaction_data",id:"reference/Classes/struct_sleepy_discord_1_1_interaction_data",title:"SleepyDiscord::InteractionData",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_data.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/struct_sleepy_discord_1_1_interaction_data",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_data",tags:[],version:"current",frontMatter:{title:"SleepyDiscord::InteractionData"},sidebar:"Reference",previous:{title:"SleepyDiscord::InteractionCallbackTypeHelper< IntCallBackT::UpdateMessage >",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_callback_type_helper_3_01_int_call_back_t_1_1_update_message_01_4"},next:{title:"SleepyDiscord::InteractionData::Option",permalink:"/sleepy-discord/docs/reference/Classes/struct_sleepy_discord_1_1_interaction_data_1_1_option"}},s=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function InteractionData",id:"function-interactiondata",children:[],level:3},{value:"function InteractionData",id:"function-interactiondata-1",children:[],level:3},{value:"function InteractionData",id:"function-interactiondata-2",children:[],level:3},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[],level:3}],level:2},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable ID",id:"variable-id",children:[],level:3},{value:"variable name",id:"variable-name",children:[],level:3},{value:"variable type",id:"variable-type",children:[],level:3},{value:"variable resolved",id:"variable-resolved",children:[],level:3},{value:"variable options",id:"variable-options",children:[],level:3},{value:"variable customID",id:"variable-customid",children:[],level:3},{value:"variable componentType",id:"variable-componenttype",children:[],level:3},{value:"variable values",id:"variable-values",children:[],level:3},{value:"variable targetID",id:"variable-targetid",children:[],level:3},{value:"variable components",id:"variable-components",children:[],level:3}],level:2}],d={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Inherits from ",(0,i.kt)("a",{parentName:"p",href:"/sleepy-discord/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),(0,i.kt)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),(0,i.kt)("h3",{id:"function-interactiondata"},"function InteractionData"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"InteractionData() =default\n")),(0,i.kt)("h3",{id:"function-interactiondata-1"},"function InteractionData"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"InteractionData(\n    json::Value & json\n)\n")),(0,i.kt)("h3",{id:"function-interactiondata-2"},"function InteractionData"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"inline InteractionData(\n    const nonstd::string_view & json\n)\n")),(0,i.kt)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::EnumTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),(0,i.kt)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),(0,i.kt)("h3",{id:"variable-id"},"variable ID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< AppCommand > ID;\n")),(0,i.kt)("h3",{id:"variable-name"},"variable name"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),(0,i.kt)("h3",{id:"variable-type"},"variable type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"AppCommand::Type type = AppCommand::Type::NONE;\n")),(0,i.kt)("h3",{id:"variable-resolved"},"variable resolved"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ResolvedData resolved;\n")),(0,i.kt)("h3",{id:"variable-options"},"variable options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Option > options;\n")),(0,i.kt)("h3",{id:"variable-customid"},"variable customID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string customID;\n")),(0,i.kt)("h3",{id:"variable-componenttype"},"variable componentType"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ComponentType componentType;\n")),(0,i.kt)("h3",{id:"variable-values"},"variable values"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::string > values;\n")),(0,i.kt)("h3",{id:"variable-targetid"},"variable targetID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< DiscordObject > targetID;\n")),(0,i.kt)("h3",{id:"variable-components"},"variable components"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector< std::shared_ptr< BaseComponent > > components;\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Updated on 28 October 2023 at 21:20:08 UTC"))}u.isMDXComponent=!0}}]);