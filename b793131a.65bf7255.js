(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{236:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),c=(t(0),t(311)),o={title:"sleepy_discord/json_wrapper.cpp"},s={unversionedId:"reference/Files/json__wrapper_8cpp",id:"reference/Files/json__wrapper_8cpp",isDocsHomePage:!1,title:"sleepy_discord/json_wrapper.cpp",description:"Namespaces",source:"@site/docs\\reference\\Files\\json__wrapper_8cpp.md",slug:"/reference/Files/json__wrapper_8cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/json__wrapper_8cpp",version:"current",sidebar:"Reference",previous:{title:"include/sleepy_discord/json.h",permalink:"/sleepy-discord-docs/docs/reference/Files/json_8h"},next:{title:"include/sleepy_discord/json_wrapper.h",permalink:"/sleepy-discord-docs/docs/reference/Files/json__wrapper_8h"}},i=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"function createJSON",id:"function-createjson",children:[]},{value:"function string",id:"function-string",children:[]},{value:"function UInteger",id:"function-uinteger",children:[]},{value:"function optionalUInteger",id:"function-optionaluinteger",children:[]},{value:"function integer",id:"function-integer",children:[]},{value:"function optionalInteger",id:"function-optionalinteger",children:[]},{value:"function boolean",id:"function-boolean",children:[]}]},{value:"Source code",id:"source-code",children:[]}],p={toc:i};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"namespaces"},"Namespaces"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord_1_1json"},"SleepyDiscord::json")))))),Object(c.b)("h2",{id:"functions"},"Functions"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-createjson"},"createJSON")),"(std::initializer_list< std::pair< std::string, std::string >> json)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-string"},"string")),"(const std::string & s)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-uinteger"},"UInteger")),"(const uint64_t num)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-optionaluinteger"},"optionalUInteger")),"(const uint64_t num)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-integer"},"integer")),"(const int64_t num)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-optionalinteger"},"optionalInteger")),"(const int64_t num)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const std::string"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/json__wrapper_8cpp#function-boolean"},"boolean")),"(const bool boolean)")))),Object(c.b)("h2",{id:"functions-documentation"},"Functions Documentation"),Object(c.b)("h3",{id:"function-createjson"},"function createJSON"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string createJSON(\n    std::initializer_list< std::pair< std::string, std::string >> json\n)\n")),Object(c.b)("h3",{id:"function-string"},"function string"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string string(\n    const std::string & s\n)\n")),Object(c.b)("h3",{id:"function-uinteger"},"function UInteger"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string UInteger(\n    const uint64_t num\n)\n")),Object(c.b)("h3",{id:"function-optionaluinteger"},"function optionalUInteger"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string optionalUInteger(\n    const uint64_t num\n)\n")),Object(c.b)("h3",{id:"function-integer"},"function integer"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string integer(\n    const int64_t num\n)\n")),Object(c.b)("h3",{id:"function-optionalinteger"},"function optionalInteger"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string optionalInteger(\n    const int64_t num\n)\n")),Object(c.b)("h3",{id:"function-boolean"},"function boolean"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"const std::string boolean(\n    const bool boolean\n)\n")),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'#include "json_wrapper.h"\n#include <stdexcept>\n\nnamespace SleepyDiscord { namespace json {\n    const std::string createJSON(std::initializer_list<std::pair<std::string, std::string>> json) {\n        std::string target;\n        target.reserve(2);  //revents crash\n        for (std::pair<std::string, std::string> pair : json) {\n            if (pair.second != "") {\n                target += ",\\"" + pair.first + "\\":" + pair.second;\n            }\n        }\n        target[0] = \'{\';\n        target.push_back(\'}\');\n        return target;\n    }\n\n    const std::string string(const std::string& s) {\n        if (s.empty())\n            return "";\n        rapidjson::StringBuffer buffer;\n        rapidjson::Writer<rapidjson::StringBuffer> writer(buffer);\n        writer.String(s.data(), s.length());\n        return std::string(buffer.GetString(), buffer.GetSize());\n    }\n\n    const std::string UInteger(const uint64_t num) {\n        return std::to_string(num & 0x3FFFFFFFFFFFFF);   //just in case numbers are larger then 53 bits\n    }\n\n    const std::string optionalUInteger(const uint64_t num) {\n        return num ? UInteger(num) : "";\n    }\n\n    const std::string integer(const int64_t num) {\n        return std::to_string(num & 0x803FFFFFFFFFFFFF);  //just in case numbers are larger then 53 bits\n    }\n\n    const std::string optionalInteger(const int64_t num) {\n        return num ? integer(num) : "";\n    }\n\n    const std::string boolean(const bool boolean) {\n        return boolean ? "true" : "false";\n    }\n}}\n')),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:59 Eastern Standard Time"))}l.isMDXComponent=!0},311:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return g}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=l(t),d=r,g=b["".concat(o,".").concat(d)]||b[d]||u[d]||c;return t?a.a.createElement(g,s(s({ref:n},p),{},{components:t})):a.a.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,o=new Array(c);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<c;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);