(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{293:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return b})),t.d(n,"default",(function(){return o}));var r=t(3),a=t(7),i=(t(0),t(319)),c={title:"include/sleepy_discord/version_helper.h"},l={unversionedId:"reference/Files/version__helper_8h",id:"reference/Files/version__helper_8h",isDocsHomePage:!1,title:"include/sleepy_discord/version_helper.h",description:"Namespaces",source:"@site/docs\\reference\\Files\\version__helper_8h.md",slug:"/reference/Files/version__helper_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/version__helper_8h",version:"current",sidebar:"Reference",previous:{title:"include/sleepy_discord/version.h",permalink:"/sleepy-discord-docs/docs/reference/Files/version_8h"},next:{title:"sleepy_discord/voice.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/voice_8cpp"}},b=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Defines",id:"defines",children:[]},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"function isFeatureAvaiable",id:"function-isfeatureavaiable",children:[]}]},{value:"Attributes Documentation",id:"attributes-documentation",children:[{value:"variable versionNum",id:"variable-versionnum",children:[]},{value:"variable version",id:"variable-version",children:[]},{value:"variable isMaster",id:"variable-ismaster",children:[]},{value:"variable userAgent",id:"variable-useragent",children:[]},{value:"variable availableFeatures",id:"variable-availablefeatures",children:[]}]},{value:"Macro Documentation",id:"macro-documentation",children:[{value:"define SLEEPY_STR_HELPER",id:"define-sleepy_str_helper",children:[]},{value:"define SLEEPY_STR_HELPER2",id:"define-sleepy_str_helper2",children:[]},{value:"define SLEEPY_STR_HELPER3",id:"define-sleepy_str_helper3",children:[]},{value:"define SLEEPY_DISCORD_VERSION_STR",id:"define-sleepy_discord_version_str",children:[]},{value:"define SLEEPY_DISCORD_VERSION_NUM",id:"define-sleepy_discord_version_num",children:[]},{value:"define SLEEPY_DISCORD_VERSION",id:"define-sleepy_discord_version",children:[]},{value:"define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST",id:"define-sleepy_feature_available_feature_list",children:[]},{value:"define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES",id:"define-sleepy_feature_list_of_available_features",children:[]}]},{value:"Source code",id:"source-code",children:[]}],s={toc:b};function o(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"namespaces"},"Namespaces"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(i.b)("h2",{id:"functions"},"Functions"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"bool"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#function-isfeatureavaiable"},"isFeatureAvaiable")),"(std::string & featureName)")))),Object(i.b)("h2",{id:"attributes"},"Attributes"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"constexpr unsigned int"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#variable-versionnum"},"versionNum")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"constexpr const char *"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#variable-version"},"version")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"constexpr bool"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#variable-ismaster"},"isMaster")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"constexpr const char *"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#variable-useragent"},"userAgent")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"std::unordered_set< std::string >"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#variable-availablefeatures"},"availableFeatures")))))),Object(i.b)("h2",{id:"defines"},"Defines"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_str_helper"},"SLEEPY_STR_HELPER")),"(x)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_str_helper2"},"SLEEPY_STR_HELPER2")),"(x)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_str_helper3"},"SLEEPY_STR_HELPER3")),"(x, y)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_discord_version_str"},"SLEEPY_DISCORD_VERSION_STR")),"(x)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_discord_version_num"},"SLEEPY_DISCORD_VERSION_NUM")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_discord_version"},"SLEEPY_DISCORD_VERSION")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_feature_available_feature_list"},"SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/version__helper_8h#define-sleepy_feature_list_of_available_features"},"SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES")))))),Object(i.b)("h2",{id:"functions-documentation"},"Functions Documentation"),Object(i.b)("h3",{id:"function-isfeatureavaiable"},"function isFeatureAvaiable"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool isFeatureAvaiable(\n    std::string & featureName\n)\n")),Object(i.b)("h2",{id:"attributes-documentation"},"Attributes Documentation"),Object(i.b)("h3",{id:"variable-versionnum"},"variable versionNum"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"constexpr unsigned int versionNum = SLEEPY_DISCORD_VERSION_NUM;\n")),Object(i.b)("h3",{id:"variable-version"},"variable version"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"constexpr const char * version = SLEEPY_DISCORD_VERSION;\n")),Object(i.b)("h3",{id:"variable-ismaster"},"variable isMaster"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"constexpr bool isMaster = SLEEPY_DISCORD_VERSION_IS_MASTER;\n")),Object(i.b)("h3",{id:"variable-useragent"},"variable userAgent"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'constexpr const char * userAgent = \n        "DiscordBot (https://github.com/yourWaifu/SleepyDiscord, " \n        SLEEPY_DISCORD_VERSION_STR(NUM) \n        ") " \n        SLEEPY_DISCORD_VERSION;\n')),Object(i.b)("h3",{id:"variable-availablefeatures"},"variable availableFeatures"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'std::unordered_set< std::string > availableFeatures {\n        "Available Feature List",\n        "List of Available Features"\n    };\n')),Object(i.b)("h2",{id:"macro-documentation"},"Macro Documentation"),Object(i.b)("h3",{id:"define-sleepy_str_helper"},"define SLEEPY_STR_HELPER"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_STR_HELPER(\n    x\n)\n#x\n")),Object(i.b)("h3",{id:"define-sleepy_str_helper2"},"define SLEEPY_STR_HELPER2"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_STR_HELPER2(\n    x\n)\nSLEEPY_STR_HELPER(x)\n")),Object(i.b)("h3",{id:"define-sleepy_str_helper3"},"define SLEEPY_STR_HELPER3"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_STR_HELPER3(\n    x,\n    y\n)\nx##y\n")),Object(i.b)("h3",{id:"define-sleepy_discord_version_str"},"define SLEEPY_DISCORD_VERSION_STR"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_DISCORD_VERSION_STR(\n    x\n)\n    SLEEPY_STR_HELPER2(SLEEPY_STR_HELPER3(SLEEPY_DISCORD_VERSION_ , x))\n")),Object(i.b)("h3",{id:"define-sleepy_discord_version_num"},"define SLEEPY_DISCORD_VERSION_NUM"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_DISCORD_VERSION_NUM 0\n")),Object(i.b)("h3",{id:"define-sleepy_discord_version"},"define SLEEPY_DISCORD_VERSION"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'#define SLEEPY_DISCORD_VERSION  SLEEPY_DISCORD_VERSION_STR(NUM) "-"\\\n    SLEEPY_DISCORD_VERSION_STR(BUILD) " "\\\n    SLEEPY_DISCORD_VERSION_BRANCH \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION_CONCAT \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION\n')),Object(i.b)("h3",{id:"define-sleepy_feature_available_feature_list"},"define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST \n")),Object(i.b)("h3",{id:"define-sleepy_feature_list_of_available_features"},"define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES \n")),Object(i.b)("h2",{id:"source-code"},"Source code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#include "version.h"\n#include <unordered_set>\nnamespace SleepyDiscord {\n\n    //thanks https://stackoverflow.com/a/5459929\n    //convert preprocessor number into a string\n    //for example:\n    //#define SLEEPY_DISCORD_VERSION_BUILD 540\n    //SLEEPY_DISCORD_VERSION_STR(BUILD) gives us "540"\n#define SLEEPY_STR_HELPER(x) #x\n#define SLEEPY_STR_HELPER2(x) SLEEPY_STR_HELPER(x)\n#define SLEEPY_STR_HELPER3(x, y) x##y\n#define SLEEPY_DISCORD_VERSION_STR(x) \\\n    SLEEPY_STR_HELPER2(SLEEPY_STR_HELPER3(SLEEPY_DISCORD_VERSION_ , x))\n\n    //please only use defines when you want to check version via preprocessors\n    //uses xxxxyyyyyy format, which can be converted to xxxx.yyyyyy\n#define SLEEPY_DISCORD_VERSION_NUM 0\n\n#if defined NONEXISTANT_VERSION_H || defined NONEXISTANT_GIT_INFO\n    #define SLEEPY_DISCORD_VERSION_BUILD 0\n    #define SLEEPY_DISCORD_VERSION_BRANCH "unknown branch"\n    #define SLEEPY_DISCORD_VERSION_HASH "unknown revision"\n    #define SLEEPY_DISCORD_VERSION_IS_MASTER 0\n    //letter to use for concat description\n    #define SLEEPY_DISCORD_VERSION_DESCRIPTION_CONCAT " "\n    #define SLEEPY_DISCORD_VERSION_DESCRIPTION "unknown"\n#endif\n\n#define SLEEPY_DISCORD_VERSION \\\n    SLEEPY_DISCORD_VERSION_STR(NUM) "-"\\\n    SLEEPY_DISCORD_VERSION_STR(BUILD) " "\\\n    SLEEPY_DISCORD_VERSION_BRANCH \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION_CONCAT \\\n    SLEEPY_DISCORD_VERSION_DESCRIPTION\n\n    constexpr unsigned int versionNum = SLEEPY_DISCORD_VERSION_NUM;\n    constexpr unsigned int revisionNum = SLEEPY_DISCORD_VERSION_BUILD;\n    //for some reason const fixes a warning about convering a char* to a const char*\n    constexpr const char* description = SLEEPY_DISCORD_VERSION_DESCRIPTION;\n    constexpr const char* branch = SLEEPY_DISCORD_VERSION_BRANCH;\n    constexpr const char* revision = SLEEPY_DISCORD_VERSION_HASH;\n    constexpr const char* version = SLEEPY_DISCORD_VERSION;\n    constexpr bool isMaster = SLEEPY_DISCORD_VERSION_IS_MASTER;\n    constexpr const char* userAgent = \n        "DiscordBot (https://github.com/yourWaifu/SleepyDiscord, " \\\n        SLEEPY_DISCORD_VERSION_STR(NUM) \\\n        ") " \\\n        SLEEPY_DISCORD_VERSION \\\n    ;\n    \n    //Features\n    //Remember to list features in both preprocessers and unordered_set\n#define SLEEPY_FEATURE_AVAILABLE_FEATURE_LIST\n#define SLEEPY_FEATURE_LIST_OF_AVAILABLE_FEATURES //fixed grammer\n    std::unordered_set<std::string> availableFeatures{\n        "Available Feature List",\n        "List of Available Features"\n    };\n    inline bool isFeatureAvaiable(std::string& featureName) {\n        return availableFeatures.find(featureName) != availableFeatures.end();\n    }\n}\n')),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}o.isMDXComponent=!0},319:function(e,n,t){"use strict";t.d(n,"a",(function(){return _})),t.d(n,"b",(function(){return E}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),o=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},_=function(e){var n=o(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},p=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),_=o(t),p=r,E=_["".concat(c,".").concat(p)]||_[p]||d[p]||i;return t?a.a.createElement(E,l(l({ref:n},s),{},{components:t})):a.a.createElement(E,l({ref:n},s))}));function E(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=p;var l={};for(var b in n)hasOwnProperty.call(n,b)&&(l[b]=n[b]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<i;s++)c[s]=t[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);