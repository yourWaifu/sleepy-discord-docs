(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{248:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return a})),r.d(t,"default",(function(){return p}));var n=r(3),c=r(7),o=(r(0),r(311)),i={title:"SleepyDiscord::caseInsensitiveCompare"},s={unversionedId:"reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare",id:"reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare",isDocsHomePage:!1,title:"SleepyDiscord::caseInsensitiveCompare",description:"Public Functions Documentation",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1case_insensitive_compare.md",slug:"/reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare",editUrl:"https://github.com/yourWaifu/sleepy-discord-docs/edit/master/docs/reference/Classes/struct_sleepy_discord_1_1case_insensitive_compare.md",version:"current",sidebar:"someSidebar",previous:{title:"JSON_findMuitipleStruct",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_j_s_o_n__find_muitiple_struct"},next:{title:"SleepyDiscord::filePathPart",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1file_path_part"}},a=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function operator()",id:"function-operator",children:[]}]}],u={toc:a};function p(e){var t=e.components,r=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(o.b)("h3",{id:"function-operator"},"function operator()"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"bool operator()(\n    const std::string & a,\n    const std::string & b\n) const\n")),Object(o.b)("hr",null),Object(o.b)("p",null,"Updated on  9 February 2021 at 07:04:56 Eastern Standard Time"))}p.isMDXComponent=!0},311:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),c=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var u=c.a.createContext({}),p=function(e){var t=c.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return c.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},f=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=p(r),f=n,m=l["".concat(i,".").concat(f)]||l[f]||d[f]||o;return r?c.a.createElement(m,s(s({ref:t},u),{},{components:r})):c.a.createElement(m,s({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return c.a.createElement.apply(null,i)}return c.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);