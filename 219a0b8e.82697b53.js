(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{102:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return b}));var r=t(3),o=t(7),a=(t(0),t(317)),c={title:"include/sleepy_discord/webhook.h"},s={unversionedId:"reference/Files/webhook_8h",id:"reference/Files/webhook_8h",isDocsHomePage:!1,title:"include/sleepy_discord/webhook.h",description:"Namespaces",source:"@site/docs\\reference\\Files\\webhook_8h.md",slug:"/reference/Files/webhook_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/webhook_8h",version:"current",sidebar:"Reference",previous:{title:"sleepy_discord/webhook.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/webhook_8cpp"},next:{title:"include/sleepy_discord/websocketpp_common.h",permalink:"/sleepy-discord-docs/docs/reference/Files/websocketpp__common_8h"}},i=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Source code",id:"source-code",children:[]}],l={toc:i};function b(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"namespaces"},"Namespaces"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(a.b)("h2",{id:"classes"},"Classes"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null}),Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"struct"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_webhook"},"SleepyDiscord::Webhook")))))),Object(a.b)("h2",{id:"source-code"},"Source code"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#include "discord_object_interface.h"\n#include "user.h"\n#include "server.h"\n#include "channel.h"\n#include "snowflake.h"\n\nnamespace SleepyDiscord {\n    /*Webhook Structure\n    Field       Type        Description\n    id          snowflake   the id of the webhook\n    guild_id    snowflake?  the guild id this webhook is for\n    channel_id  snowflake   the channel id this webhook is for\n    user        User?       the user this webhook was created by (not returned when getting a webhook with its token)\n    name        ?string     the default name of the webhook\n    avatar      ?string     the default avatar of the webhook\n    token       string      the secure token of the webhook\n    */\n    struct Webhook : public IdentifiableDiscordObject<Webhook> {\n    public:\n        Webhook() = default;\n        Webhook(const json::Value & json);\n        Webhook(const nonstd::string_view & rawJSON);\n\n        enum WebhookType {\n            INCOMING = 1,\n            CHANNEL_FOLLOWER = 2,\n        };\n        WebhookType type = static_cast<WebhookType>(0);\n        Snowflake<Server> serverID;\n        Snowflake<Channel> channelID;\n        User user;\n        std::string name;\n        std::string avatar;\n        std::string token;\n        JSONStructStart\n            std::make_tuple(\n                json::pair(&Webhook::ID       , "id"        , json::REQUIRIED_FIELD),\n                json::pair(&Webhook::serverID , "guild_id"  , json::OPTIONAL_FIELD ),\n                json::pair(&Webhook::channelID, "channel_id", json::REQUIRIED_FIELD),\n                json::pair(&Webhook::user     , "user"      , json::OPTIONAL_FIELD ),\n                json::pair(&Webhook::name     , "name"      , json::NULLABLE_FIELD ),\n                json::pair(&Webhook::avatar   , "avatar"    , json::NULLABLE_FIELD ),\n                json::pair(&Webhook::token    , "token"     , json::OPTIONAL_FIELD )\n            );\n        JSONStructEnd\n    };\n}\n')),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}b.isMDXComponent=!0},317:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return h}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),b=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=b(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=b(t),u=r,h=p["".concat(c,".").concat(u)]||p[u]||d[u]||a;return t?o.a.createElement(h,s(s({ref:n},l),{},{components:t})):o.a.createElement(h,s({ref:n},l))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=u;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var l=2;l<a;l++)c[l]=t[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);