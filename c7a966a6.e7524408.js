(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{258:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return b})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return o}));var n=a(3),r=a(7),c=(a(0),a(316)),l={title:"SleepyDiscord::Channel"},b={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_channel",id:"reference/Classes/struct_sleepy_discord_1_1_channel",isDocsHomePage:!1,title:"SleepyDiscord::Channel",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1_channel.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_channel",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_channel",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Cache",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_cache"},next:{title:"SleepyDiscord::Connection",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_connection"}},i=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"enum ChannelType",id:"enum-channeltype",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Channel",id:"function-channel",children:[]},{value:"function Channel",id:"function-channel-1",children:[]},{value:"function Channel",id:"function-channel-2",children:[]},{value:"function ~Channel",id:"function-channel-3",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable type",id:"variable-type",children:[]},{value:"variable serverID",id:"variable-serverid",children:[]},{value:"variable position",id:"variable-position",children:[]},{value:"variable permissionOverwrites",id:"variable-permissionoverwrites",children:[]},{value:"variable name",id:"variable-name",children:[]},{value:"variable topic",id:"variable-topic",children:[]},{value:"variable isNSFW",id:"variable-isnsfw",children:[]},{value:"variable lastMessageID",id:"variable-lastmessageid",children:[]},{value:"variable bitrate",id:"variable-bitrate",children:[]},{value:"variable userLimit",id:"variable-userlimit",children:[]},{value:"variable recipients",id:"variable-recipients",children:[]},{value:"variable icon",id:"variable-icon",children:[]},{value:"variable ownerID",id:"variable-ownerid",children:[]},{value:"variable parentID",id:"variable-parentid",children:[]},{value:"variable lastPinTimestamp",id:"variable-lastpintimestamp",children:[]}]}],s={toc:i};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Inherits from ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Channel >"),", ",Object(c.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(c.b)("h2",{id:"inherited-members"},"inherited members"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Types inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Channel >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"using ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived >"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#using-parent"},"Parent")))))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Channel >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"() =default")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-identifiablediscordobject"},"IdentifiableDiscordObject")),"(",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > id)")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator-snowflake%3C-derived-%3E-&"},"operator Snowflake< Derived > &")),"()")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-empty"},"empty")),"() const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",Object(c.b)("br",null),"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"template <class DiscordObject ",">"," ",Object(c.b)("br",null),"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"DiscordObject")," > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator=="},"operator==")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"bool"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-operator!="},"operator!=")),"(const ",Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"IdentifiableDiscordObject"),"< Derived > & right) const")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"const Time"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#function-gettimestamp"},"getTimestamp")),"()")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Public Attributes inherited from ",Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object"},"SleepyDiscord::IdentifiableDiscordObject< Channel >"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("a",{parentName:"td",href:"/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake"},"Snowflake"),"< Derived >"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_identifiable_discord_object#variable-id"},"ID")))))),Object(c.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(c.b)("h3",{id:"enum-channeltype"},"enum ChannelType"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Enumerator"),Object(c.b)("th",{parentName:"tr",align:null},"Value"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"CHANNEL_TYPE_NONE"),Object(c.b)("td",{parentName:"tr",align:null},"-1"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"SERVER_TEXT"),Object(c.b)("td",{parentName:"tr",align:null},"0"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"DM"),Object(c.b)("td",{parentName:"tr",align:null},"1"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"SERVER_VOICE"),Object(c.b)("td",{parentName:"tr",align:null},"2"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"GROUP_DM"),Object(c.b)("td",{parentName:"tr",align:null},"3"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"SERVER_CATEGORY"),Object(c.b)("td",{parentName:"tr",align:null},"4"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"GUILD_NEWS"),Object(c.b)("td",{parentName:"tr",align:null},"5"),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"GUILD_STORE"),Object(c.b)("td",{parentName:"tr",align:null},"6"),Object(c.b)("td",{parentName:"tr",align:null})))),Object(c.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(c.b)("h3",{id:"function-channel"},"function Channel"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Channel() =default\n")),Object(c.b)("h3",{id:"function-channel-1"},"function Channel"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Channel(\n    const json::Value & rawJSON\n)\n")),Object(c.b)("h3",{id:"function-channel-2"},"function Channel"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Channel(\n    const nonstd::string_view & rawJSON\n)\n")),Object(c.b)("h3",{id:"function-channel-3"},"function ~Channel"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"~Channel()\n")),Object(c.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::REQUIRIED_FIELD REQUIRIED_FIELD,\n    json::pair< json::EnumTypeHelper > &::, "", ::REQUIRIED_FIELD REQUIRIED_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD,\n    json::pair &::, "", ::OPTIONAL_NULLABLE_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD OPTIONAL_FIELD\n)\n')),Object(c.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(c.b)("h3",{id:"variable-type"},"variable type"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"enum SleepyDiscord::Channel::ChannelType type = CHANNEL_TYPE_NONE;\n")),Object(c.b)("h3",{id:"variable-serverid"},"variable serverID"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Server > serverID;\n")),Object(c.b)("h3",{id:"variable-position"},"variable position"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"int position = 0;\n")),Object(c.b)("h3",{id:"variable-permissionoverwrites"},"variable permissionOverwrites"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< Overwrite > permissionOverwrites;\n")),Object(c.b)("h3",{id:"variable-name"},"variable name"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::string name;\n")),Object(c.b)("h3",{id:"variable-topic"},"variable topic"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::string topic;\n")),Object(c.b)("h3",{id:"variable-isnsfw"},"variable isNSFW"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"bool isNSFW = false;\n")),Object(c.b)("h3",{id:"variable-lastmessageid"},"variable lastMessageID"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Message > lastMessageID;\n")),Object(c.b)("h3",{id:"variable-bitrate"},"variable bitrate"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"int bitrate = 0;\n")),Object(c.b)("h3",{id:"variable-userlimit"},"variable userLimit"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"int userLimit = 0;\n")),Object(c.b)("h3",{id:"variable-recipients"},"variable recipients"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< User > recipients;\n")),Object(c.b)("h3",{id:"variable-icon"},"variable icon"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::string icon;\n")),Object(c.b)("h3",{id:"variable-ownerid"},"variable ownerID"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< User > ownerID;\n")),Object(c.b)("h3",{id:"variable-parentid"},"variable parentID"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake< Channel > parentID;\n")),Object(c.b)("h3",{id:"variable-lastpintimestamp"},"variable lastPinTimestamp"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"std::string lastPinTimestamp;\n")),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:54 Eastern Standard Time"))}o.isMDXComponent=!0},316:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),o=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},d=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=o(a),O=n,u=d["".concat(l,".").concat(O)]||d[O]||p[O]||c;return a?r.a.createElement(u,b(b({ref:t},s),{},{components:a})):r.a.createElement(u,b({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=O;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:n,l[1]=b;for(var s=2;s<c;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);