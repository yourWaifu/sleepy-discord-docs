(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{141:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(316)),l={title:"Standard Configuration",sidebar_label:"Standard Configuration",next:"setup-standard-vs-cmake"},o={unversionedId:"setup-standard",id:"setup-standard",isDocsHomePage:!1,title:"Standard Configuration",description:"What You Need",source:"@site/docs\\setup-standard.md",slug:"/setup-standard",permalink:"/sleepy-discord-docs/docs/setup-standard",version:"current",lastUpdatedAt:1613107777,sidebar_label:"Standard Configuration",sidebar:"Docs",previous:{title:"Getting Started",permalink:"/sleepy-discord-docs/docs/"},next:{title:"CMake Graphical User Interface",permalink:"/sleepy-discord-docs/docs/setup-standard-gui"}},c=[{value:"What You Need",id:"what-you-need",children:[]},{value:"Instructions",id:"instructions",children:[{value:"Creating a CMakeList file",id:"creating-a-cmakelist-file",children:[]},{value:"Writing a CMakeList file",id:"writing-a-cmakelist-file",children:[]}]},{value:"Linking Sleepy Discord",id:"linking-sleepy-discord",children:[]},{value:"Example",id:"example",children:[{value:"Simple Example",id:"simple-example",children:[]},{value:"Another Example",id:"another-example",children:[]}]},{value:"Next Step",id:"next-step",children:[{value:"Recommendation for Windows Users",id:"recommendation-for-windows-users",children:[]},{value:"Any OS",id:"any-os",children:[]}]}],s={toc:c};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"what-you-need"},"What You Need"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://cmake.org/download/"},"CMake"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Can be installed using Visual Studio installer, Cmake's website, or your package manager"))),Object(i.b)("li",{parentName:"ul"},"OpenSSL library",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"For Windows users, you can ",Object(i.b)("a",{parentName:"li",href:"https://slproweb.com/products/Win32OpenSSL.html"},"Download and use the installer (Don't download the light version or you'll run into errors)")," or any other binaries ",Object(i.b)("a",{parentName:"li",href:"https://wiki.openssl.org/index.php/Binaries"},"found here")," or ",Object(i.b)("a",{parentName:"li",href:"https://www.google.com/search?q=openssl+windows+precompiled"},"via a simple google search"),"."),Object(i.b)("li",{parentName:"ul"},"For Linux users, use your package manager and install libssl-dev or openssl-devel. The name depends on your package manager."))),Object(i.b)("li",{parentName:"ul"},"A C++ Compiler",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://github.com/yourWaifu/sleepy-discord#build-status"},"Go here for build status"),"."),Object(i.b)("li",{parentName:"ul"},"For Visual Studio users, Visual Studio has a c++ compiler."))),Object(i.b)("li",{parentName:"ul"},"libCurl (Required for Linux)",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"install a package like ",Object(i.b)("inlineCode",{parentName:"li"},"libcurl4-openssl-dev")," on your package manager"),Object(i.b)("li",{parentName:"ul"},"on Windows, the cmake script should compile libCurl for you. So libCurl should be set up for you when you run cmake."))),Object(i.b)("li",{parentName:"ul"},"Windows SDK (Required for Windows)",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"If you are using Visual Studio, it's recommend you download this from the Visual Studio installer."),Object(i.b)("li",{parentName:"ul"},"The library doesn't really use it but you can run into issues without it.")))),Object(i.b)("h2",{id:"instructions"},"Instructions"),Object(i.b)("h3",{id:"creating-a-cmakelist-file"},"Creating a CMakeList file"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"my-project\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 source.cpp\n\u2514\u2500\u2500 CMakeLists.txt\n")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"In case you haven't already created a CMakeLists.txt file for your project. please do so on the root directory or folder of your project.")),Object(i.b)("h3",{id:"writing-a-cmakelist-file"},"Writing a CMakeList file"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cmake"},"#CMakeLists.txt\ncmake_minimum_required (VERSION 3.6)\nproject(example)\n\nadd_executable(replace-me source.cpp)\n")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Replace replace-me with the name of your project or executable.")),Object(i.b)("h2",{id:"linking-sleepy-discord"},"Linking Sleepy Discord"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cmake"},"#Add these two lines\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(replace-me sleepy-discord)\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Add these two lines to the CMakeList.txt so that Sleepy Discord will be linked.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If you are following the examples, you can skip this step. Otherwise, replace ",Object(i.b)("inlineCode",{parentName:"p"},"deps/sleepy-discord")," with the ",Object(i.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Path_(computing)#Absolute_and_relative_paths"},"relative path")," to the sleepy-discord directory or folder relative to the ",Object(i.b)("inlineCode",{parentName:"p"},"CmakeLists.txt")," file. Windows users, remember to use ",Object(i.b)("inlineCode",{parentName:"p"},"/"),"."))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"In ",Object(i.b)("inlineCode",{parentName:"p"},"add_subdirectory"),", using a directory that isn't a subdirectory to the current folder will require you to add a path to the binary folder for sleepy-discord as the 2nd parameter. It is recommended that you don't do this."))),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("h3",{id:"simple-example"},"Simple Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"my-project\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 source.cpp\n\u2514\u2500\u2500 CMakeLists.txt\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required (VERSION 3.6)\nproject(example)\n\nadd_executable(replace-me source.cpp)\n\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(replace-me sleepy-discord)\n")),Object(i.b)("h3",{id:"another-example"},"Another Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"light-blob-bot\n\u251c\u2500\u2500 deps\n\u2502   \u2514\u2500\u2500 sleepy-discord\n\u251c\u2500\u2500 ui\n\u2502   \u2514\u2500\u2500 switch.cpp\n\u251c\u2500\u2500 material\n\u2502   \u251c\u2500\u2500 matal.cpp\n\u2502   \u251c\u2500\u2500 plastic.cpp\n\u2502   \u2514\u2500\u2500 glass.cpp\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 light.cpp\n\u251c\u2500\u2500 blob.cpp\n\u2514\u2500\u2500 main.cpp\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required (VERSION 3.6)\nproject(light-blob)\n\nadd_executable(light-blob light.cpp blob.cpp\nmain.cpp ui/switch.cpp\nmaterial/metal.cpp material/plastic.cpp material/glass.cpp)\n\nadd_subdirectory(deps/sleepy-discord)\ntarget_link_libraries(light-blob sleepy-discord)\n")),Object(i.b)("h2",{id:"next-step"},"Next Step"),Object(i.b)("p",null,"Choose your CMake Interface."),Object(i.b)("h3",{id:"recommendation-for-windows-users"},"Recommendation for Windows Users"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"setup-standard-vs-cmake"},"Visual Studio CMake"))),Object(i.b)("h3",{id:"any-os"},"Any OS"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"setup-standard-gui"},"CMake App (GUI)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"setup-standard-cli"},"CMake Command (CLI)"))))}p.isMDXComponent=!0},316:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,m=d["".concat(l,".").concat(u)]||d[u]||b[u]||i;return a?r.a.createElement(m,o(o({ref:t},s),{},{components:a})):r.a.createElement(m,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);