(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{192:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return r})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return u}));var c=t(3),o=t(7),a=(t(0),t(311)),i={title:"SleepyDiscord::Snowflake"},r={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_snowflake",id:"reference/Classes/struct_sleepy_discord_1_1_snowflake",isDocsHomePage:!1,title:"SleepyDiscord::Snowflake",description:"More...",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1_snowflake.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_snowflake",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::ServerMembersRequest",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_server_members_request"},next:{title:"SleepyDiscord::Snowflake::HasAFindFunction",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_snowflake_1_1_has_a_find_function"}},l=[{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Types Documentation",id:"public-types-documentation",children:[{value:"using RawType",id:"using-rawtype",children:[]}]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Snowflake",id:"function-snowflake",children:[]},{value:"function Snowflake",id:"function-snowflake-1",children:[]},{value:"function Snowflake",id:"function-snowflake-2",children:[]},{value:"function Snowflake",id:"function-snowflake-3",children:[]},{value:"function Snowflake",id:"function-snowflake-4",children:[]},{value:"function Snowflake",id:"function-snowflake-5",children:[]},{value:"function Snowflake",id:"function-snowflake-6",children:[]},{value:"function Snowflake",id:"function-snowflake-7",children:[]},{value:"function Snowflake",id:"function-snowflake-8",children:[]},{value:"function Snowflake",id:"function-snowflake-9",children:[]},{value:"function ~Snowflake",id:"function-snowflake-10",children:[]},{value:"function operator==",id:"function-operator",children:[]},{value:"function operator!=",id:"function-operator-1",children:[]},{value:"function operator==",id:"function-operator-2",children:[]},{value:"function operator!=",id:"function-operator-3",children:[]},{value:"function operator const std::string &amp;",id:"function-operator-const-stdstring-",children:[]},{value:"function string",id:"function-string",children:[]},{value:"function number",id:"function-number",children:[]},{value:"function timestamp",id:"function-timestamp",children:[]},{value:"function empty",id:"function-empty",children:[]},{value:"function serialize",id:"function-serialize",children:[]},{value:"function findObject",id:"function-findobject",children:[]},{value:"function findObject",id:"function-findobject-1",children:[]},{value:"function findObject",id:"function-findobject-2",children:[]},{value:"function findObject",id:"function-findobject-3",children:[]}]}],s={toc:l};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(c.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null," ",Object(a.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(a.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"template <typename DiscordObject >\nstruct SleepyDiscord::Snowflake;\n")),Object(a.b)("h2",{id:"public-types-documentation"},"Public Types Documentation"),Object(a.b)("h3",{id:"using-rawtype"},"using RawType"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"using SleepyDiscord::Snowflake< DiscordObject >::RawType =  std::string;\n")),Object(a.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(a.b)("h3",{id:"function-snowflake"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"Snowflake() =default\n")),Object(a.b)("h3",{id:"function-snowflake-1"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const std::string & snow\n)\n")),Object(a.b)("h3",{id:"function-snowflake-2"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const std::string * snow\n)\n")),Object(a.b)("h3",{id:"function-snowflake-3"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const char * snow\n)\n")),Object(a.b)("h3",{id:"function-snowflake-4"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const nonstd::string_view & snow\n)\n")),Object(a.b)("h3",{id:"function-snowflake-5"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const Snowflake & flake\n)\n")),Object(a.b)("h3",{id:"function-snowflake-6"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const DiscordObject & object\n)\n")),Object(a.b)("h3",{id:"function-snowflake-7"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const DiscordObject * object\n)\n")),Object(a.b)("h3",{id:"function-snowflake-8"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const int64_t number\n)\n")),Object(a.b)("h3",{id:"function-snowflake-9"},"function Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline Snowflake(\n    const json::Value & value\n)\n")),Object(a.b)("h3",{id:"function-snowflake-10"},"function ~Snowflake"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"~Snowflake() =default\n")),Object(a.b)("h3",{id:"function-operator"},"function operator=="),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator==(\n    const Snowflake & right\n) const\n")),Object(a.b)("h3",{id:"function-operator-1"},"function operator!="),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator!=(\n    const Snowflake & right\n) const\n")),Object(a.b)("h3",{id:"function-operator-2"},"function operator=="),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator==(\n    const char * right\n) const\n")),Object(a.b)("h3",{id:"function-operator-3"},"function operator!="),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool operator!=(\n    const char * right\n) const\n")),Object(a.b)("h3",{id:"function-operator-const-stdstring-"},"function operator const std::string &"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline operator const std::string &() const\n")),Object(a.b)("h3",{id:"function-string"},"function string"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline const std::string & string() const\n")),Object(a.b)("h3",{id:"function-number"},"function number"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline const int64_t number() const\n")),Object(a.b)("h3",{id:"function-timestamp"},"function timestamp"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline std::chrono::time_point< std::chrono::steady_clock > timestamp() const\n")),Object(a.b)("h3",{id:"function-empty"},"function empty"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline const bool empty() const\n")),Object(a.b)("h3",{id:"function-serialize"},"function serialize"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline json::Value serialize(\n    typename json::Value::AllocatorType & alloc\n) const\n")),Object(a.b)("h3",{id:"function-findobject"},"function findObject"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"template <class iterator >\ninline iterator findObject(\n    iterator begin,\n    iterator end\n) const\n")),Object(a.b)("h3",{id:"function-findobject-1"},"function findObject"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"template <class Container >\ninline auto findObject(\n    Container & objects,\n    std::true_type \n) const\n")),Object(a.b)("h3",{id:"function-findobject-2"},"function findObject"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"template <class Container >\ninline auto findObject(\n    Container & objects,\n    std::false_type \n) const\n")),Object(a.b)("h3",{id:"function-findobject-3"},"function findObject"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"template <class Container >\ninline auto findObject(\n    Container & objects\n) const\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on  9 February 2021 at 07:04:56 Eastern Standard Time"))}u.isMDXComponent=!0},311:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var c=t(0),o=t.n(c);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,c,o=function(e,n){if(null==e)return{};var t,c,o={},a=Object.keys(e);for(c=0;c<a.length;c++)t=a[c],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(c=0;c<a.length;c++)t=a[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),u=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,c=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),f=c,d=p["".concat(i,".").concat(f)]||p[f]||b[f]||a;return t?o.a.createElement(d,r(r({ref:n},s),{},{components:t})):o.a.createElement(d,r({ref:n},s))}));function d(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var a=t.length,i=new Array(a);i[0]=f;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:c,i[1]=r;for(var s=2;s<a;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);