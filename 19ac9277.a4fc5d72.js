(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{317:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),l=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),p=l(t),u=r,f=p["".concat(i,".").concat(u)]||p[u]||b[u]||c;return t?a.a.createElement(f,o(o({ref:n},s),{},{components:t})):a.a.createElement(f,o({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,i=new Array(c);i[0]=u;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<c;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},93:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return d})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),c=(t(0),t(317)),i={title:"include/sleepy_discord/asio_include.h"},o={unversionedId:"reference/Files/asio__include_8h",id:"reference/Files/asio__include_8h",isDocsHomePage:!1,title:"include/sleepy_discord/asio_include.h",description:"Namespaces",source:"@site/docs\\reference\\Files\\asio__include_8h.md",slug:"/reference/Files/asio__include_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__include_8h",version:"current",sidebar:"Reference",previous:{title:"sleepy_discord/asignments_client.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/asignments__client_8cpp"},next:{title:"include/sleepy_discord/asio_schedule.h",permalink:"/sleepy-discord-docs/docs/reference/Files/asio__schedule_8h"}},d=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Defines",id:"defines",children:[]},{value:"Macro Documentation",id:"macro-documentation",children:[{value:"define ASIO_STANDALONE",id:"define-asio_standalone",children:[]}]},{value:"Source code",id:"source-code",children:[]}],s={toc:d};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"namespaces"},"Namespaces"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespaceasio"},"asio")))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespacewebsocketpp_1_1lib_1_1asio"},"websocketpp::lib::asio")))))),Object(c.b)("h2",{id:"defines"},"Defines"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/asio__include_8h#define-asio_standalone"},"ASIO_STANDALONE")))))),Object(c.b)("h2",{id:"macro-documentation"},"Macro Documentation"),Object(c.b)("h3",{id:"define-asio_standalone"},"define ASIO_STANDALONE"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"#define ASIO_STANDALONE \n")),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#define ASIO_STANDALONE\n\n#ifdef _WIN32\n#include <winsock2.h>\n#elif defined(unix) || defined(__unix__) || defined(__unix)\n#include <netinet/in.h>\n#endif\n\n#if !defined(SLEEPY_USE_BOOST) && !defined(EXISTENT_BOOST_ASIO)\n    #include "websocketpp_common.h"\n    #ifdef NONEXISTENT_WEBSOCKETPP\n        #include <asio.hpp>\n        #ifdef NONEXISTENT_ASIO\n            #undef ASIO_STANDALONE\n            #define SLEEPY_USE_BOOST\n        #endif\n    #else\n        namespace asio {\n            using namespace websocketpp::lib::asio;\n        }\n    #endif\n#endif\n\n#if defined(SLEEPY_USE_BOOST) || defined(EXISTENT_BOOST_ASIO)\n    #include <boost/asio.hpp>\n    #ifndef NONEXISTENT_BOOST_ASIO\n        #undef NONEXISTENT_ASIO\n        namespace asio {\n            using namespace boost::asio;\n            using boost::system::error_code;\n        }\n        #ifdef ASIO_STANDALONE\n            #undef ASIO_STANDALONE\n        #endif\n    #endif\n#endif\n')),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}l.isMDXComponent=!0}}]);