(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{253:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return i})),n.d(r,"metadata",(function(){return a})),n.d(r,"toc",(function(){return s})),n.d(r,"default",(function(){return l}));var t=n(3),o=n(7),c=(n(0),n(312)),i={title:"include/sleepy_discord/standard_config.h"},a={unversionedId:"reference/Files/standard__config_8h",id:"reference/Files/standard__config_8h",isDocsHomePage:!1,title:"include/sleepy_discord/standard_config.h",description:"Source code",source:"@site/docs\\reference\\Files\\standard__config_8h.md",slug:"/reference/Files/standard__config_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/standard__config_8h",version:"current",sidebar:"Reference",previous:{title:"include/sleepy_discord/snowflake.h",permalink:"/sleepy-discord-docs/docs/reference/Files/snowflake_8h"},next:{title:"include/sleepy_discord/standard_config_header.h",permalink:"/sleepy-discord-docs/docs/reference/Files/standard__config__header_8h"}},s=[{value:"Source code",id:"source-code",children:[]}],d={toc:s};function l(e){var r=e.components,n=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(t.a)({},d,n,{components:r,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#ifndef SLEEPY_DO_NOT_INCLUDE_STANDARD_ONERROR\nvoid DiscordClient::onError(SleepyDiscord::ErrorCode errorCode, const std::string errorMessage) {\n    if (errorCode != 0)\n        std::cout << "Error " << errorCode << ": " + errorMessage + \'\\n\';\n    else\n        std::cout << "Error: " + errorMessage + \'\\n\';\n}\n#endif\n\n#ifndef SLEEPY_DO_NOT_INCLUDE_STANDARD_SLEEP\nvoid DiscordClient::sleep(const unsigned int milliseconds) {\n    std::this_thread::sleep_for(std::chrono::milliseconds(milliseconds));\n}\n#endif\n')),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}l.isMDXComponent=!0},312:function(e,r,n){"use strict";n.d(r,"a",(function(){return u})),n.d(r,"b",(function(){return y}));var t=n(0),o=n.n(t);function c(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){c(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),l=function(e){var r=o.a.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},u=function(e){var r=l(e.components);return o.a.createElement(d.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},f=o.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,c=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=t,y=u["".concat(i,".").concat(f)]||u[f]||p[f]||c;return n?o.a.createElement(y,a(a({ref:r},d),{},{components:n})):o.a.createElement(y,a({ref:r},d))}));function y(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var c=n.length,i=new Array(c);i[0]=f;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a.mdxType="string"==typeof e?e:t,i[1]=a;for(var d=2;d<c;d++)i[d]=n[d];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);