(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{151:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return d}));var r=n(3),c=n(7),a=(n(0),n(317)),o={title:"include/sleepy_discord/uwebsockets_websocket.h"},s={unversionedId:"reference/Files/uwebsockets__websocket_8h",id:"reference/Files/uwebsockets__websocket_8h",isDocsHomePage:!1,title:"include/sleepy_discord/uwebsockets_websocket.h",description:"Namespaces",source:"@site/docs\\reference\\Files\\uwebsockets__websocket_8h.md",slug:"/reference/Files/uwebsockets__websocket_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/uwebsockets__websocket_8h",version:"current",sidebar:"Reference",previous:{title:"sleepy_discord/uwebsockets_websocket.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/uwebsockets__websocket_8cpp"},next:{title:"sleepy_discord/version.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/version_8cpp"}},i=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Types",id:"types",children:[]},{value:"Defines",id:"defines",children:[]},{value:"Types Documentation",id:"types-documentation",children:[{value:"typedef DiscordClient",id:"typedef-discordclient",children:[]}]},{value:"Macro Documentation",id:"macro-documentation",children:[{value:"define SLEEPY_UWEBSOCKETS",id:"define-sleepy_uwebsockets",children:[]},{value:"define SLEEPY_LOCK_EXISTENT_TO",id:"define-sleepy_lock_existent_to",children:[]}]},{value:"Source code",id:"source-code",children:[]}],l={toc:i};function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"namespaces"},"Namespaces"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Namespaces/namespace_sleepy_discord"},"SleepyDiscord")))))),Object(a.b)("h2",{id:"classes"},"Classes"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null}),Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"class"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_u_web_sockets_discord_client"},"SleepyDiscord::UWebSocketsDiscordClient")))))),Object(a.b)("h2",{id:"types"},"Types"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null}),Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"typedef UWebSocketsDiscordClient"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Files/uwebsockets__websocket_8h#typedef-discordclient"},"DiscordClient")))))),Object(a.b)("h2",{id:"defines"},"Defines"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null}),Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null}),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Files/uwebsockets__websocket_8h#define-sleepy_uwebsockets"},"SLEEPY_UWEBSOCKETS")))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null}),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Files/uwebsockets__websocket_8h#define-sleepy_lock_existent_to"},"SLEEPY_LOCK_EXISTENT_TO")))))),Object(a.b)("h2",{id:"types-documentation"},"Types Documentation"),Object(a.b)("h3",{id:"typedef-discordclient"},"typedef DiscordClient"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"typedef WebsocketppDiscordClient SleepyDiscord::DiscordClient;\n")),Object(a.b)("h2",{id:"macro-documentation"},"Macro Documentation"),Object(a.b)("h3",{id:"define-sleepy_uwebsockets"},"define SLEEPY_UWEBSOCKETS"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_UWEBSOCKETS 563146\n")),Object(a.b)("h3",{id:"define-sleepy_lock_existent_to"},"define SLEEPY_LOCK_EXISTENT_TO"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"#define SLEEPY_LOCK_EXISTENT_TO SLEEPY_UWEBSOCKETS\n")),Object(a.b)("h2",{id:"source-code"},"Source code"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},'#pragma once\n#if !defined(NONEXISTENT_UWEBSOCKETS) | defined(EXISTENT_UWEBSOCKETS)\n#include <uWS/uWS.h>\n#endif\n#ifndef NONEXISTENT_UWEBSOCKETS\n#include <thread>\n#define SLEEPY_UWEBSOCKETS 563146 //random number that\'s only used once in the code\n#define SLEEPY_LOCK_EXISTENT_TO SLEEPY_UWEBSOCKETS //stops the compiler from defining things from other libraries\n#include "client.h"\n\nnamespace SleepyDiscord {\n    class UWebSocketsDiscordClient : public BaseDiscordClient {\n    public:\n        UWebSocketsDiscordClient() : maxNumOfThreads(0) {}\n        UWebSocketsDiscordClient(const std::string token, const char numOfThreads = 3);\n        ~UWebSocketsDiscordClient();\n        void run();\n        Timer schedule(std::function<void()> code, const time_t milliseconds);\n    protected:\n#include "standard_config_header.h"\n    private:\n        uWS::Hub hub;\n        bool connect(const std::string & uri, GenericMessageReceiver* messageProcessor, WebsocketConnection* connection);\n        void disconnect(unsigned int code, const std::string reason, WebsocketConnection* connection);\n        void send(std::string message, WebsocketConnection* connection);\n        void runAsync();\n        std::thread thread;\n        const char maxNumOfThreads;\n        bool isConnectionBad = false;\n        SLEEPY_LOCK_CLIENT_FUNCTIONS\n    };\n\n    typedef UWebSocketsDiscordClient DiscordClient;\n}\n#undef SLEEPY_UWEBSOCKETS\n#undef SLEEPY_LOCK_TO_UWEBSOCKETS\n#endif\n')),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}d.isMDXComponent=!0},317:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return O}));var r=n(0),c=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=c.a.createContext({}),d=function(e){var t=c.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=d(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},u=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=d(n),u=r,O=b["".concat(o,".").concat(u)]||b[u]||p[u]||a;return n?c.a.createElement(O,s(s({ref:t},l),{},{components:n})):c.a.createElement(O,s({ref:t},l))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);