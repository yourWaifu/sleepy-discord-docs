(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{205:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return l})),t.d(r,"toc",(function(){return o})),t.d(r,"default",(function(){return d}));var n=t(3),a=t(7),i=(t(0),t(312)),c={title:"SleepyDiscord::Embed"},l={unversionedId:"reference/Classes/struct_sleepy_discord_1_1_embed",id:"reference/Classes/struct_sleepy_discord_1_1_embed",isDocsHomePage:!1,title:"SleepyDiscord::Embed",description:"Inherits from SleepyDiscord::DiscordObject",source:"@site/docs\\reference\\Classes\\struct_sleepy_discord_1_1_embed.md",slug:"/reference/Classes/struct_sleepy_discord_1_1_embed",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_embed",version:"current",sidebar:"Reference",previous:{title:"SleepyDiscord::Connection",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_connection"},next:{title:"SleepyDiscord::EmbedAuthor",permalink:"/sleepy-discord-docs/docs/reference/Classes/struct_sleepy_discord_1_1_embed_author"}},o=[{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function Embed",id:"function-embed",children:[]},{value:"function Embed",id:"function-embed-1",children:[]},{value:"function Embed",id:"function-embed-2",children:[]},{value:"function empty",id:"function-empty",children:[]},{value:"function std::make_tuple",id:"function-stdmake_tuple",children:[]}]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable title",id:"variable-title",children:[]},{value:"variable type",id:"variable-type",children:[]},{value:"variable description",id:"variable-description",children:[]},{value:"variable url",id:"variable-url",children:[]},{value:"variable timestamp",id:"variable-timestamp",children:[]},{value:"variable color",id:"variable-color",children:[]},{value:"variable footer",id:"variable-footer",children:[]},{value:"variable image",id:"variable-image",children:[]},{value:"variable thumbnail",id:"variable-thumbnail",children:[]},{value:"variable video",id:"variable-video",children:[]},{value:"variable provider",id:"variable-provider",children:[]},{value:"variable author",id:"variable-author",children:[]},{value:"variable fields",id:"variable-fields",children:[]}]}],b={toc:o};function d(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,t,{components:r,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Inherits from ",Object(i.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_discord_object"},"SleepyDiscord::DiscordObject")),Object(i.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(i.b)("h3",{id:"function-embed"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Embed() =default\n")),Object(i.b)("h3",{id:"function-embed-1"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Embed(\n    const json::Value & json\n)\n")),Object(i.b)("h3",{id:"function-embed-2"},"function Embed"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"Embed(\n    const nonstd::string_view & json\n)\n")),Object(i.b)("h3",{id:"function-empty"},"function empty"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"inline bool empty() const\n")),Object(i.b)("h3",{id:"function-stdmake_tuple"},"function std::make_tuple"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},'JSONStructStart std::make_tuple(\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair<-1 > &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair &::, "", ::OPTIONAL_FIELD ,\n    json::pair< json::ContainerTypeHelper > &::, "", ::OPTIONAL_FIELD \n)\n')),Object(i.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(i.b)("h3",{id:"variable-title"},"variable title"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string title;\n")),Object(i.b)("h3",{id:"variable-type"},"variable type"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string type;\n")),Object(i.b)("h3",{id:"variable-description"},"variable description"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string description;\n")),Object(i.b)("h3",{id:"variable-url"},"variable url"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string url;\n")),Object(i.b)("h3",{id:"variable-timestamp"},"variable timestamp"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::string timestamp;\n")),Object(i.b)("h3",{id:"variable-color"},"variable color"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"int32_t color = -1;\n")),Object(i.b)("h3",{id:"variable-footer"},"variable footer"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedFooter footer;\n")),Object(i.b)("h3",{id:"variable-image"},"variable image"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedImage image;\n")),Object(i.b)("h3",{id:"variable-thumbnail"},"variable thumbnail"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedThumbnail thumbnail;\n")),Object(i.b)("h3",{id:"variable-video"},"variable video"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedVideo video;\n")),Object(i.b)("h3",{id:"variable-provider"},"variable provider"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedProvider provider;\n")),Object(i.b)("h3",{id:"variable-author"},"variable author"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"EmbedAuthor author;\n")),Object(i.b)("h3",{id:"variable-fields"},"variable fields"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"std::vector< EmbedField > fields;\n")),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  9 February 2021 at 07:04:55 Eastern Standard Time"))}d.isMDXComponent=!0},312:function(e,r,t){"use strict";t.d(r,"a",(function(){return p})),t.d(r,"b",(function(){return m}));var n=t(0),a=t.n(n);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),d=function(e){var r=a.a.useContext(b),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=d(e.components);return a.a.createElement(b.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},u=a.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),p=d(t),u=n,m=p["".concat(c,".").concat(u)]||p[u]||s[u]||i;return t?a.a.createElement(m,l(l({ref:r},b),{},{components:t})):a.a.createElement(m,l({ref:r},b))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,c=new Array(i);c[0]=u;var l={};for(var o in r)hasOwnProperty.call(r,o)&&(l[o]=r[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var b=2;b<i;b++)c[b]=t[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);