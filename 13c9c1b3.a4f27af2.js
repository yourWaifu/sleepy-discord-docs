(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{311:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return _}));var t=r(0),c=r.n(t);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,c=function(e,n){if(null==e)return{};var r,t,c={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(c[r]=e[r]);return c}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var d=c.a.createContext({}),o=function(e){var n=c.a.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=o(e.components);return c.a.createElement(d.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},p=c.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=o(r),p=t,_=u["".concat(l,".").concat(p)]||u[p]||b[p]||a;return r?c.a.createElement(_,s(s({ref:n},d),{},{components:r})):c.a.createElement(_,s({ref:n},d))}));function _(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=r.length,l=new Array(a);l[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:t,l[1]=s;for(var d=2;d<a;d++)l[d]=r[d];return c.a.createElement.apply(null,l)}return c.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},82:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return l})),r.d(n,"metadata",(function(){return s})),r.d(n,"toc",(function(){return i})),r.d(n,"default",(function(){return o}));var t=r(3),c=r(7),a=(r(0),r(311)),l={title:"SleepyDiscord::ASIOScheduleHandler"},s={unversionedId:"reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",id:"reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",isDocsHomePage:!1,title:"SleepyDiscord::ASIOScheduleHandler",description:"Inherits from SleepyDiscord::GenericScheduleHandler",source:"@site/docs\\reference\\Classes\\class_sleepy_discord_1_1_a_s_i_o_schedule_handler.md",slug:"/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler",editUrl:"https://github.com/yourWaifu/sleepy-discord-docs/edit/master/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_schedule_handler.md",version:"current",sidebar:"someSidebar",previous:{title:"SleepyDiscord::ASIOBasedScheduleHandler",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},next:{title:"SleepyDiscord::ASIOUDPClient",permalink:"/sleepy-discord-docs/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_u_d_p_client"}},i=[{value:"inherited members",id:"inherited-members",children:[]},{value:"Public Functions Documentation",id:"public-functions-documentation",children:[{value:"function ASIOScheduleHandler",id:"function-asioschedulehandler",children:[]},{value:"function ~ASIOScheduleHandler",id:"function-asioschedulehandler-1",children:[]},{value:"function getIOService",id:"function-getioservice",children:[]},{value:"function schedule",id:"function-schedule",children:[]},{value:"function run",id:"function-run",children:[]},{value:"function handleTimer",id:"function-handletimer",children:[]}]}],d={toc:i};function o(e){var n=e.components,r=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},d,r,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Inherits from ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},"SleepyDiscord::ASIOBasedScheduleHandler"),", ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler"},"SleepyDiscord::GenericScheduleHandler")),Object(a.b)("h2",{id:"inherited-members"},"inherited members"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler"},"SleepyDiscord::ASIOBasedScheduleHandler"))),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null}),Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"virtual"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler#function-~asiobasedschedulehandler"},"~ASIOBasedScheduleHandler")),"() =default")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Public Functions inherited from ",Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler"},"SleepyDiscord::GenericScheduleHandler"))),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null}),Object(a.b)("th",{parentName:"tr",align:null},"Name"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"virtual"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("strong",{parentName:"td"},Object(a.b)("a",{parentName:"strong",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler#function-~genericschedulehandler"},"~GenericScheduleHandler")),"() =default")))),Object(a.b)("h2",{id:"public-functions-documentation"},"Public Functions Documentation"),Object(a.b)("h3",{id:"function-asioschedulehandler"},"function ASIOScheduleHandler"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline ASIOScheduleHandler()\n")),Object(a.b)("h3",{id:"function-asioschedulehandler-1"},"function ~ASIOScheduleHandler"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"virtual ~ASIOScheduleHandler() =default\n")),Object(a.b)("h3",{id:"function-getioservice"},"function getIOService"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual asio::io_service & getIOService() override\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_a_s_i_o_based_schedule_handler#function-getioservice"},"SleepyDiscord::ASIOBasedScheduleHandler::getIOService")),Object(a.b)("h3",{id:"function-schedule"},"function schedule"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline virtual Timer schedule(\n    TimedTask code,\n    const time_t milliseconds\n) override\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Reimplements"),": ",Object(a.b)("a",{parentName:"p",href:"/docs/reference/Classes/class_sleepy_discord_1_1_generic_schedule_handler#function-schedule"},"SleepyDiscord::GenericScheduleHandler::schedule")),Object(a.b)("h3",{id:"function-run"},"function run"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"inline void run()\n")),Object(a.b)("h3",{id:"function-handletimer"},"function handleTimer"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-cpp"},"static inline void handleTimer(\n    const asio::error_code & ec,\n    std::function< void()> & code\n)\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Updated on  9 February 2021 at 07:04:54 Eastern Standard Time"))}o.isMDXComponent=!0}}]);