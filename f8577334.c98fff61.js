(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{305:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return o})),t.d(n,"default",(function(){return p}));var r=t(3),c=t(7),i=(t(0),t(319)),a={title:"include/sleepy_discord/json.h"},s={unversionedId:"reference/Files/json_8h",id:"reference/Files/json_8h",isDocsHomePage:!1,title:"include/sleepy_discord/json.h",description:"Classes",source:"@site/docs\\reference\\Files\\json_8h.md",slug:"/reference/Files/json_8h",permalink:"/sleepy-discord-docs/docs/reference/Files/json_8h",version:"current",sidebar:"Reference",previous:{title:"include/sleepy_discord/invite.h",permalink:"/sleepy-discord-docs/docs/reference/Files/invite_8h"},next:{title:"sleepy_discord/json_wrapper.cpp",permalink:"/sleepy-discord-docs/docs/reference/Files/json__wrapper_8cpp"}},o=[{value:"Classes",id:"classes",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"function JSON_skipString",id:"function-json_skipstring",children:[]},{value:"function JSON_measureAndSkipString",id:"function-json_measureandskipstring",children:[]},{value:"function JSON_measureString",id:"function-json_measurestring",children:[]},{value:"function JSON_find",id:"function-json_find",children:[]},{value:"function JSON_find1",id:"function-json_find1",children:[]},{value:"function JSON_skipArray",id:"function-json_skiparray",children:[]},{value:"function JSON_skipObject",id:"function-json_skipobject",children:[]},{value:"function JSON_measureAndSkipObject",id:"function-json_measureandskipobject",children:[]},{value:"function JSON_measureObject",id:"function-json_measureobject",children:[]}]},{value:"Source code",id:"source-code",children:[]}],b={toc:o};function p(e){var n=e.components,t=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"classes"},"Classes"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"struct"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Classes/struct_j_s_o_n__find_muitiple_struct"},"JSON_findMuitipleStruct")))))),Object(i.b)("h2",{id:"functions"},"Functions"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"void"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_skipstring"},"JSON_skipString")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, size_t ")," position)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"size_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_measureandskipstring"},"JSON_measureAndSkipString")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, size_t ")," position)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"size_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_measurestring"},"JSON_measureString")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, const size_t ")," _position)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"void"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_find"},"JSON_find")),"(const size_t numberOfNames, const char ",Object(i.b)("em",{parentName:"td"}," source, ",Object(i.b)("a",{parentName:"em",href:"/docs/reference/Classes/struct_j_s_o_n__find_muitiple_struct"},"JSON_findMuitipleStruct")," ")," values)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"size_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_find1"},"JSON_find1")),"(const char ",Object(i.b)("em",{parentName:"td"}," name, const char ")," source)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"void"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_skiparray"},"JSON_skipArray")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, size_t ")," position)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"void"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_skipobject"},"JSON_skipObject")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, size_t ")," position)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"size_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_measureandskipobject"},"JSON_measureAndSkipObject")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, size_t ")," position)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"size_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/docs/reference/Files/json_8h#function-json_measureobject"},"JSON_measureObject")),"(const char ",Object(i.b)("em",{parentName:"td"}," JSONstring, const size_t ")," position)")))),Object(i.b)("h2",{id:"functions-documentation"},"Functions Documentation"),Object(i.b)("h3",{id:"function-json_skipstring"},"function JSON_skipString"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"void JSON_skipString(\n    const char * JSONstring,\n    size_t * position\n)\n")),Object(i.b)("h3",{id:"function-json_measureandskipstring"},"function JSON_measureAndSkipString"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"size_t JSON_measureAndSkipString(\n    const char * JSONstring,\n    size_t * position\n)\n")),Object(i.b)("h3",{id:"function-json_measurestring"},"function JSON_measureString"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"size_t JSON_measureString(\n    const char * JSONstring,\n    const size_t * _position\n)\n")),Object(i.b)("h3",{id:"function-json_find"},"function JSON_find"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"void JSON_find(\n    const size_t numberOfNames,\n    const char * source,\n    JSON_findMuitipleStruct * values\n)\n")),Object(i.b)("h3",{id:"function-json_find1"},"function JSON_find1"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"size_t JSON_find1(\n    const char * name,\n    const char * source\n)\n")),Object(i.b)("h3",{id:"function-json_skiparray"},"function JSON_skipArray"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"void JSON_skipArray(\n    const char * JSONstring,\n    size_t * position\n)\n")),Object(i.b)("h3",{id:"function-json_skipobject"},"function JSON_skipObject"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"void JSON_skipObject(\n    const char * JSONstring,\n    size_t * position\n)\n")),Object(i.b)("h3",{id:"function-json_measureandskipobject"},"function JSON_measureAndSkipObject"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"size_t JSON_measureAndSkipObject(\n    const char * JSONstring,\n    size_t * position\n)\n")),Object(i.b)("h3",{id:"function-json_measureobject"},"function JSON_measureObject"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"size_t JSON_measureObject(\n    const char * JSONstring,\n    const size_t * position\n)\n")),Object(i.b)("h2",{id:"source-code"},"Source code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"#pragma once\n#include <stdlib.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <ctype.h>\n#include <stdarg.h>\n#include <string.h>\n/*\nTO-DO add scientific notation support\nTO-DO add the varable size to JSON_array and JSON_object\nTO-DO when parsing a string, make '/' use less memory\n*/\n\n#ifdef __cplusplus\n#include <string>\n#include <vector>\nextern \"C\" {\n#endif\n    typedef struct {    //values need for JSON_findMuitiple to function\n        const char * name;\n        size_t namePosition;\n        size_t nameLength;\n        size_t valueLength;\n    } JSON_findMuitipleStruct;\n\n    void JSON_skipString(const char * JSONstring, size_t *position);\n    size_t JSON_measureAndSkipString(const char* JSONstring, size_t *position);\n    size_t JSON_measureString(const char * JSONstring, const size_t *_position);\n    void JSON_find(const size_t numberOfNames, const char* source, JSON_findMuitipleStruct* values);\n    size_t JSON_find1(const char * name, const char * source);\n    void JSON_skipArray(const char * JSONstring, size_t *position);\n    void JSON_skipObject(const char * JSONstring, size_t *position);\n    size_t JSON_measureAndSkipObject(const char * JSONstring, size_t *position);\n    size_t JSON_measureObject(const char * JSONstring, const size_t *position);\n#ifdef __cplusplus\n    }\n#endif\n")),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on  9 February 2021 at 07:04:58 Eastern Standard Time"))}p.isMDXComponent=!0},319:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return O}));var r=t(0),c=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var b=c.a.createContext({}),p=function(e){var n=c.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return c.a.createElement(b.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},d=c.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=r,O=u["".concat(a,".").concat(d)]||u[d]||l[d]||i;return t?c.a.createElement(O,s(s({ref:n},b),{},{components:t})):c.a.createElement(O,s({ref:n},b))}));function O(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var b=2;b<i;b++)a[b]=t[b];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);